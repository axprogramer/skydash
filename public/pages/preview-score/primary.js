const firebaseConfig = {
    apiKey: "AIzaSyDn5l50utUfCEBpWEYX_lQO5Ar3OB0WAmc",
    authDomain: "salamom-d3246.firebaseapp.com",
    databaseURL: "https://salamom-d3246-default-rtdb.firebaseio.com",
    projectId: "salamom-d3246",
    storageBucket: "salamom-d3246.appspot.com",
    messagingSenderId: "521352537338",
    appId: "1:521352537338:web:fbccf858c76c4a843d1543"
};
firebase.initializeApp(firebaseConfig);

var dbLevel = localStorage.getItem('preview_level');
var dbGrade = localStorage.getItem('preview_grade');
var dbMonth = localStorage.getItem('preview_month');
var dbyear = localStorage.getItem('preview_year');
var dbdivid = localStorage.getItem('preview_divid');

// var all_grade = dbGrade.replace(/^0+/, '');
var table = document.getElementById('show_data');
var show_hearder = document.getElementById('show_hearder');
var table_print = document.getElementById('show_data_print');
var show_hearder_print = document.getElementById('show_hearder_print');
var table_result = document.getElementById('show_data_result');
var show_hearder_result = document.getElementById('show_hearder_result');

var all_grade = [];
let student_rank = [];
let new_year_kh = '';
let N0 = '';
let grade_en = '';
let grade_kh = '';
let new_grade = '';
//Grade in EN
if (dbGrade == '01A') { grade_en = '1A' };
if (dbGrade == '02A') { grade_en = '2A' };
if (dbGrade == '03A') { grade_en = '3A' };
if (dbGrade == '04A') { grade_en = '4A' };
if (dbGrade == '05A') { grade_en = '5A' };
if (dbGrade == '06A') { grade_en = '6A' };
if (dbGrade == '07A') { grade_en = '7A' };
if (dbGrade == '08A') { grade_en = '8A' };
if (dbGrade == '09A') { grade_en = '9A' };
if (dbGrade == '10A') { grade_en = '10A' };
if (dbGrade == '11A') { grade_en = '11A' };
if (dbGrade == '12A') { grade_en = '12A' };

if (dbGrade == '01B') { grade_en = '1B' };
if (dbGrade == '02B') { grade_en = '2B' };
if (dbGrade == '03B') { grade_en = '3B' };
if (dbGrade == '04B') { grade_en = '4B' };
if (dbGrade == '05B') { grade_en = '5B' };
if (dbGrade == '06B') { grade_en = '6B' };
if (dbGrade == '07B') { grade_en = '7B' };
if (dbGrade == '08B') { grade_en = '8B' };
if (dbGrade == '09B') { grade_en = '9B' };
if (dbGrade == '10B') { grade_en = '10B' };
if (dbGrade == '11B') { grade_en = '11B' };
if (dbGrade == '12B') { grade_en = '12B' };

if (dbGrade == '01C') { grade_en = '1C' };
if (dbGrade == '02C') { grade_en = '2C' };
if (dbGrade == '03C') { grade_en = '3C' };
if (dbGrade == '04C') { grade_en = '4C' };
if (dbGrade == '05C') { grade_en = '5C' };
if (dbGrade == '06C') { grade_en = '6C' };
if (dbGrade == '07C') { grade_en = '7C' };
if (dbGrade == '08C') { grade_en = '8C' };
if (dbGrade == '09C') { grade_en = '9C' };
if (dbGrade == '10C') { grade_en = '10C' };
if (dbGrade == '11C') { grade_en = '11C' };
if (dbGrade == '12C') { grade_en = '12C' };

if (dbGrade == '01A') { new_grade = '១ (ក)' };
if (dbGrade == '02A') { new_grade = '២ (ក)' };
if (dbGrade == '03A') { new_grade = '៣ (ក)' };
if (dbGrade == '04A') { new_grade = '៤ (ក)' };
if (dbGrade == '05A') { new_grade = '៥ (ក)' };
if (dbGrade == '06A') { new_grade = '៦ (ក)' };
if (dbGrade == '07A') { new_grade = '៧ (ក)' };
if (dbGrade == '08A') { new_grade = '៨ (ក)' };
if (dbGrade == '09A') { new_grade = '៩ (ក)' };
if (dbGrade == '10A') { new_grade = '១០ (ក)' };
if (dbGrade == '11A') { new_grade = '១១ (ក)' };
if (dbGrade == '12A') { new_grade = '១២ (ក)' };

if (dbGrade == '01B') { new_grade = '១ (ខ)' };
if (dbGrade == '02B') { new_grade = '២ (ខ)' };
if (dbGrade == '03B') { new_grade = '៣ (ខ)' };
if (dbGrade == '04B') { new_grade = '៤ (ខ)' };
if (dbGrade == '05B') { new_grade = '៥ (ខ)' };
if (dbGrade == '06B') { new_grade = '៦ (ខ)' };
if (dbGrade == '07B') { new_grade = '៧ (ខ)' };
if (dbGrade == '08B') { new_grade = '៨ (ខ)' };
if (dbGrade == '09B') { new_grade = '៩ (ខ)' };
if (dbGrade == '10B') { new_grade = '១០ (ខ)' };
if (dbGrade == '11B') { new_grade = '១១ (ខ)' };
if (dbGrade == '12B') { new_grade = '១២ (ខ)' };

if (dbGrade == '01C') { new_grade = '១ (គ)' };
if (dbGrade == '02C') { new_grade = '២ (គ)' };
if (dbGrade == '03C') { new_grade = '៣ (គ)' };
if (dbGrade == '04C') { new_grade = '៤ (គ)' };
if (dbGrade == '05C') { new_grade = '៥ (គ)' };
if (dbGrade == '06C') { new_grade = '៦ (គ)' };
if (dbGrade == '07C') { new_grade = '៧ (គ)' };
if (dbGrade == '08C') { new_grade = '៨ (គ)' };
if (dbGrade == '09C') { new_grade = '៩ (គ)' };
if (dbGrade == '10C') { new_grade = '១០ (គ)' };
if (dbGrade == '11C') { new_grade = '១១ (គ)' };
if (dbGrade == '12C') { new_grade = '១២ (គ)' };
//Grade in Kh
if (grade_en == '1A') { grade_kh = '១ក' };
if (grade_en == '2A') { grade_kh = '២ក' };
if (grade_en == '3A') { grade_kh = '៣ក' };
if (grade_en == '4A') { grade_kh = '៤ក' };
if (grade_en == '5A') { grade_kh = '៥ក' };
if (grade_en == '6A') { grade_kh = '៦ក' };
if (grade_en == '7A') { grade_kh = '៧ក' };
if (grade_en == '8A') { grade_kh = '៨ក' };
if (grade_en == '9A') { grade_kh = '៩ក' };
if (grade_en == '10A') { grade_kh = '១០ក' };
if (grade_en == '11A') { grade_kh = '១១ក' };
if (grade_en == '12A') { grade_kh = '១២ក' };

if (grade_en == '1B') { grade_kh = '១ខ' };
if (grade_en == '2B') { grade_kh = '២ខ' };
if (grade_en == '3B') { grade_kh = '៣ខ' };
if (grade_en == '4B') { grade_kh = '៤ខ' };
if (grade_en == '5B') { grade_kh = '៥ខ' };
if (grade_en == '6B') { grade_kh = '៦ខ' };
if (grade_en == '7B') { grade_kh = '៧ខ' };
if (grade_en == '8B') { grade_kh = '៨ខ' };
if (grade_en == '9B') { grade_kh = '៩ខ' };
if (grade_en == '10B') { grade_kh = '១០ខ' };
if (grade_en == '11B') { grade_kh = '១១ខ' };
if (grade_en == '12B') { grade_kh = '១២ខ' };

if (grade_en == '1C') { grade_kh = '១គ' };
if (grade_en == '2C') { grade_kh = '២គ' };
if (grade_en == '3C') { grade_kh = '៣គ' };
if (grade_en == '4C') { grade_kh = '៤គ' };
if (grade_en == '5C') { grade_kh = '៥គ' };
if (grade_en == '6C') { grade_kh = '៦គ' };
if (grade_en == '7C') { grade_kh = '៧គ' };
if (grade_en == '8C') { grade_kh = '៨គ' };
if (grade_en == '9C') { grade_kh = '៩គ' };
if (grade_en == '10C') { grade_kh = '១០គ' };
if (grade_en == '11C') { grade_kh = '១១គ' };
if (grade_en == '12C') { grade_kh = '១២គ' };

let get_month = '';
if (dbMonth == 'October') { get_month = 'តុលា' };
if (dbMonth == 'November') { get_month = 'វិច្ឆិកា' };
if (dbMonth == 'December') { get_month = 'ធ្នូ' };
if (dbMonth == 'January') { get_month = 'មករា' };
if (dbMonth == 'February') { get_month = 'កុម្ភៈ' };
if (dbMonth == 'March') { get_month = 'មីនា' };
if (dbMonth == 'April-May') { get_month = 'មេសា-ឧសភា' };
if (dbMonth == 'June') { get_month = 'មិថុនា' };
if (dbMonth == 'July') { get_month = 'កក្កដា' };
if (dbMonth == '1st Semester') { get_month = 'ឆមាសទី១' };
if (dbMonth == '2nd Semester') { get_month = 'ឆមាសទី២' };

firebase
    .database()
    .ref(`/SalaMOM/tools/class/` + dbLevel)
    .once('value', function (data) {
        data.forEach(function (d) {
            var id = d.val().id;
            var clEn = d.val().clEn;
            all_grade.push(clEn);
        })
    })
let primary_g_p1 = [
    '01A',
    '02A',
    '03A',
    '01B',
    '02B',
    '03B',
    '01C',
    '02C',
    '03C',
]
let primary_g_p2 = [
    '04A',
    '05A',
    '06A',
    '04B',
    '05B',
    '06B',
    '04C',
    '05C',
    '06C',
]

let primary_g_p3 = [
    '07A',
    '08A',
    '09A',
    '07B',
    '08B',
    '09B',
    '07C',
    '08C',
    '09C',
]
let primary_g_p4 = [
    '10A',
    '11A',
    '12A',
    '10B',
    '11B',
    '12B',
    '10C',
    '11C',
    '12C',
]

export function primary(datas) {
    if (dbLevel === 'បឋមសិក្សា') {
        if (all_grade.includes(dbGrade)) {

            if (dbMonth == 'October') {
                if (primary_g_p1.includes(dbGrade)) {

                    datas.forEach((d) => {

                        var id = d.val().id;
                        var user_grade = d.val().user_grade;
                        var gender = d.val().gender;
                        var average = d.val().average_moct;
                        var rank = d.val().rank_moct;

                        var k_listen_moct = d.val().k_listen_moct;
                        var k_speak_moct = d.val().k_speak_moct;
                        var k_reading_moct = d.val().k_reading_moct;
                        var k_dictation_moct = d.val().k_dictation_moct;
                        var k_writing_moct = d.val().k_writing_moct;
                        var k_grammar_moct = d.val().k_grammar_moct;
                        var k_homework_moct = d.val().k_homework_moct;

                        var math_speak_moct = d.val().math_speak_moct;
                        var math_moct = d.val().math_moct;
                        var math_h_moct = d.val().math_h_moct;

                        var sci_moct = d.val().sci_moct;
                        var sci_h_moct = d.val().sci_h_moct;

                        var soc_moct = d.val().soc_moct;
                        var soc_h_moct = d.val().soc_h_moct;

                        var e_moct = d.val().e_moct;
                        var e_h_moct = d.val().e_h_moct;

                        var pe_moct = d.val().pe_moct;

                        let noSp = id.replace(/\s+/g, "");

                        if (!k_listen_moct) { k_listen_moct = 0 };
                        if (!k_speak_moct) { k_speak_moct = 0 };
                        if (!k_reading_moct) { k_reading_moct = 0 };
                        if (!k_dictation_moct) { k_dictation_moct = 0 };
                        if (!k_writing_moct) { k_writing_moct = 0 };
                        if (!k_grammar_moct) { k_grammar_moct = 0 };
                        if (!k_homework_moct) { k_homework_moct = 0 };

                        if (!math_speak_moct) { math_speak_moct = 0 };
                        if (!math_moct) { math_moct = 0 };
                        if (!math_h_moct) { math_h_moct = 0 };

                        if (!sci_moct) { sci_moct = 0 };
                        if (!sci_h_moct) { sci_h_moct = 0 };

                        if (!soc_moct) { soc_moct = 0 };
                        if (!soc_h_moct) { soc_h_moct = 0 };

                        if (!e_moct) { e_moct = 0 };
                        if (!e_h_moct) { e_h_moct = 0 };

                        if (!pe_moct) { pe_moct = 0 };

                        //Total all score
                        var total_all_score =
                            parseFloat(k_listen_moct) +
                            parseFloat(k_speak_moct) +
                            parseFloat(k_reading_moct) +
                            parseFloat(k_dictation_moct) +
                            parseFloat(k_writing_moct) +
                            parseFloat(k_homework_moct) +
                            parseFloat(math_speak_moct) +
                            parseFloat(math_moct) +
                            parseFloat(math_h_moct) +
                            parseFloat(sci_moct) +
                            parseFloat(sci_h_moct) +
                            parseFloat(soc_moct) +
                            parseFloat(soc_h_moct) +
                            parseFloat(e_moct) +
                            parseFloat(e_h_moct) +
                            parseFloat(pe_moct);
                        if (!total_all_score) { total_all_score = "00" }
                        //មធ្យមភាគ
                        var st_average =
                            parseFloat(total_all_score) / dbdivid;
                        st_average = st_average.toFixed(2);

                        student_rank.push({
                            id,
                            user_grade,
                            st_average,
                            total_all_score,
                            gender,
                            k_listen_moct,
                            k_speak_moct,
                            k_reading_moct,
                            k_dictation_moct,
                            k_writing_moct,
                            k_homework_moct,
                            math_speak_moct,
                            math_moct,
                            math_h_moct,
                            sci_moct,
                            sci_h_moct,
                            soc_moct,
                            soc_h_moct,
                            e_moct,
                            e_h_moct,
                            pe_moct,
                        })
                        setTimeout(() => {
                            N0++;

                            //Mention average
                            let mention = '';
                            var my = parseFloat(average);
                            if (my <= 4.9) {
                                mention = "ខ្សោយ"
                            } else if (my <= 6.49) {
                                mention = "មធ្យម"
                            } else if (my <= 7.99) {
                                mention = "ល្អបង្គួរ";
                            } else if (my <= 9.49) {
                                mention = "ល្អ";
                            } else if (my <= 10) {
                                mention = "ល្អណាស់";
                            }

                            let h = `
                                        <th class="border-dark">ល.រ</th>
                                        <th class="border-dark">ឈ្មោះ</th>
                                        <th class="border-dark">ភេទ</th>
                                        <th class="border-dark">ការស្តាប់</th>
                                        <th class="border-dark">ការនិយាយ</th>
                                        <th class="border-dark">អំណាន</th>
                                        <th class="border-dark">សរសេរតាមអាន</th>
                                        <th class="border-dark">តែងសេចក្តី</th>
                                        <th class="border-dark">គ.ផ្ទាល់មាត់</th>
                                        <th class="border-dark">គណិតវិទ្យា</th>
                                        <th class="border-dark">គ.កិច្ចការផ្ទះ</th>
                                        <th class="border-dark">វិទ្យាសាស្ត្រ</th>
                                        <th class="border-dark">សិក្សាសង្គម</th>
                                        <th class="border-dark">កិ.(ខ្មែរ)</th>
                                        <th class="border-dark">កិ.(វិទ្យា)</th>
                                        <th class="border-dark">កិ.(សិក្សា)</th>
                                        <th class="border-dark">កិ.(អង់គ្លេស)</th>
                                        <th class="border-dark">កីឡា</th>
                                        <th class="border-dark">អង់គ្លេស</th>
                                        <th class="border-dark">ពិន្ទុសរុប</th>
                                        <th class="border-dark">មធ្យមភាគ</th>
                                        <th class="border-dark">ចំណាត់ថ្នាក់</th>
                                        <th class="border-dark">និទ្ទេស</th>
                                        
        
                                        `
                            let n = `
                                        <td class="border-dark text-center">${N0}</td>
                                        <td class="border-dark">${id}</td>
                                        <td class="border-dark text-center"">${gender}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_listen_moct="${N0}" id="${noSp}k_listen_moct">${k_listen_moct}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_speak_moct="${N0}" id="${noSp}k_speak_moct">${k_speak_moct}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_reading_moct="${N0}" id="${noSp}k_reading_moct">${k_reading_moct}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_dictation_moct="${N0}" id="${noSp}k_dictation_moct">${k_dictation_moct}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_writing_moct="${N0}" id="${noSp}k_writing_moct">${k_writing_moct}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_speak_moct="${N0}" id="${noSp}math_speak_moct">${math_speak_moct}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_moct="${N0}" id="${noSp}math_moct">${math_moct}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_h_moct="${N0}" id="${noSp}math_h_moct">${math_h_moct}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-sci_moct="${N0}" id="${noSp}sci_moct">${sci_moct}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-soc_moct="${N0}" id="${noSp}soc_moct">${soc_moct}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_homework_moct="${N0}" id="${noSp}k_homework_moct">${k_homework_moct}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-sci_h_moct="${N0}" id="${noSp}sci_h_moct">${sci_h_moct}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-soc_h_moct="${N0}" id="${noSp}soc_h_moct">${soc_h_moct}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-e_h_moct="${N0}" id="${noSp}e_h_moct">${e_h_moct}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-pe_moct="${N0}" id="${noSp}pe_moct">${pe_moct}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-e_moct="${N0}" id="${noSp}e_moct">${e_moct}</td>
                                        <td class="border-dark text-center fw-bold">${total_all_score}</td>
                                        <td class="border-dark text-center fw-bold">${average}</td>
                                        <td class="border-dark text-center" style="color:red;">${rank}</td>
                                        <td class="border-dark text-center" style="color:red;">${mention}</td>
                                        `;
                            //Update data
                            setTimeout(() => {
                                document.getElementById(`${noSp}e_moct`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}e_moct`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            e_moct: d,
                                        });
                                })
                                document.getElementById(`${noSp}pe_moct`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}pe_moct`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            pe_moct: d,
                                        });
                                })
                                document.getElementById(`${noSp}e_h_moct`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}e_h_moct`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            e_h_moct: d,
                                        });
                                })
                                document.getElementById(`${noSp}soc_h_moct`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}soc_h_moct`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            soc_h_moct: d,
                                        });
                                })
                                document.getElementById(`${noSp}sci_h_moct`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}sci_h_moct`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            sci_h_moct: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_homework_moct`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_homework_moct`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_homework_moct: d,
                                        });
                                })
                                document.getElementById(`${noSp}soc_moct`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}soc_moct`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            soc_moct: d,
                                        });
                                })
                                document.getElementById(`${noSp}sci_moct`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}sci_moct`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            sci_moct: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_h_moct`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_h_moct`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_h_moct: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_moct`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_moct`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_moct: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_speak_moct`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_speak_moct`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_speak_moct: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_writing_moct`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_writing_moct`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_writing_moct: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_dictation_moct`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_dictation_moct`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_dictation_moct: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_reading_moct`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_reading_moct`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_reading_moct: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_speak_moct`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_speak_moct`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_speak_moct: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_listen_moct`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_listen_moct`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_listen_moct: d,
                                        });
                                })

                            }, 200);
                            //Key select
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_moct);
                                    const nextCell = document.querySelector(`[data-e_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_moct);
                                    const nextCell = document.querySelector(`[data-e_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_moct);
                                    const nextCell = document.querySelector(`[data-e_moct="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_moct);
                                    const nextCell = document.querySelector(`[data-pe_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_moct);
                                    const nextCell = document.querySelector(`[data-pe_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_moct);
                                    const nextCell = document.querySelector(`[data-pe_moct="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_moct);
                                    const nextCell = document.querySelector(`[data-e_h_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_moct);
                                    const nextCell = document.querySelector(`[data-e_h_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_moct);
                                    const nextCell = document.querySelector(`[data-e_h_moct="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_moct);
                                    const nextCell = document.querySelector(`[data-soc_h_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_moct);
                                    const nextCell = document.querySelector(`[data-soc_h_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_moct);
                                    const nextCell = document.querySelector(`[data-soc_h_moct="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_moct);
                                    const nextCell = document.querySelector(`[data-sci_h_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_moct);
                                    const nextCell = document.querySelector(`[data-sci_h_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_moct);
                                    const nextCell = document.querySelector(`[data-sci_h_moct="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_moct);
                                    const nextCell = document.querySelector(`[data-k_homework_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_moct);
                                    const nextCell = document.querySelector(`[data-k_homework_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_moct);
                                    const nextCell = document.querySelector(`[data-k_homework_moct="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_moct);
                                    const nextCell = document.querySelector(`[data-soc_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_moct);
                                    const nextCell = document.querySelector(`[data-soc_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_moct);
                                    const nextCell = document.querySelector(`[data-soc_moct="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_moct);
                                    const nextCell = document.querySelector(`[data-sci_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_moct);
                                    const nextCell = document.querySelector(`[data-sci_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_moct);
                                    const nextCell = document.querySelector(`[data-sci_moct="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_moct);
                                    const nextCell = document.querySelector(`[data-math_h_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_moct);
                                    const nextCell = document.querySelector(`[data-math_h_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_moct);
                                    const nextCell = document.querySelector(`[data-math_h_moct="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_moct);
                                    const nextCell = document.querySelector(`[data-math_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_moct);
                                    const nextCell = document.querySelector(`[data-math_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_moct);
                                    const nextCell = document.querySelector(`[data-math_moct="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_moct);
                                    const nextCell = document.querySelector(`[data-math_speak_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_moct);
                                    const nextCell = document.querySelector(`[data-math_speak_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_moct);
                                    const nextCell = document.querySelector(`[data-math_speak_moct="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_moct);
                                    const nextCell = document.querySelector(`[data-k_writing_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_moct);
                                    const nextCell = document.querySelector(`[data-k_writing_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_moct);
                                    const nextCell = document.querySelector(`[data-k_writing_moct="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_moct);
                                    const nextCell = document.querySelector(`[data-k_dictation_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_moct);
                                    const nextCell = document.querySelector(`[data-k_dictation_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_moct);
                                    const nextCell = document.querySelector(`[data-k_dictation_moct="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_moct);
                                    const nextCell = document.querySelector(`[data-k_reading_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_moct);
                                    const nextCell = document.querySelector(`[data-k_reading_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_moct);
                                    const nextCell = document.querySelector(`[data-k_reading_moct="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_speak_moct);
                                    const nextCell = document.querySelector(`[data-k_speak_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_speak_moct);
                                    const nextCell = document.querySelector(`[data-k_speak_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_speak_moct);
                                    const nextCell = document.querySelector(`[data-k_speak_moct="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_listen_moct);
                                    const nextCell = document.querySelector(`[data-k_listen_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_listen_moct);
                                    const nextCell = document.querySelector(`[data-k_listen_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_listen_moct);
                                    const nextCell = document.querySelector(`[data-k_listen_moct="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });


                            show_hearder.innerHTML = h;
                            table.innerHTML += n;
                            show_hearder_print.innerHTML = h;
                            table_print.innerHTML += n;

                        }, 200);

                    })
                    //Sort array and get rank number
                    student_rank.sort((a, b) => {
                        if (a.st_average > b.st_average) return -1;
                        if (a.st_average < b.st_average) return 1;
                        return 0;
                    });

                    for (let i = 0; i < student_rank.length; i++) {
                        let avg = student_rank[i].st_average;


                        let studentsWithRank = student_rank.filter(
                            (student) => student.st_average === avg

                        );
                        for (let student of studentsWithRank) {
                            student.Rank = i + 1;
                        }
                        i += studentsWithRank.length - 1;
                    }
                    let num = "";
                    //get Data sort to new array and save to localStorage
                    student_rank.forEach((student) => {
                        var id = student.id;
                        var gender = student.gender;
                        var total_all_score = student.total_all_score;
                        var average = student.st_average;
                        var rank = student.Rank;
                        if (!total_all_score) {

                            total_all_score = total_all_score.toFixed(2);
                        }

                        num++;

                        //Mention average
                        let mention = '';
                        var my = parseFloat(average);
                        if (my <= 4.9) {
                            mention = "ខ្សោយ"
                        } else if (my <= 6.49) {
                            mention = "មធ្យម"
                        } else if (my <= 7.99) {
                            mention = "ល្អបង្គួរ";
                        } else if (my <= 9.49) {
                            mention = "ល្អ";
                        } else if (my <= 10) {
                            mention = "ល្អណាស់";
                        }
                        let mention_fail = '';
                        var my = parseFloat(average);
                        if (my <= 4.9) {
                            mention_fail = "Poor"
                        } else if (my <= 6.49) {
                            mention_fail = "Average"
                        } else if (my <= 7.99) {
                            mention_fail = "Fairly Good";
                        } else if (my <= 9.49) {
                            mention_fail = "Good";
                        } else if (my <= 10) {
                            mention_fail = "Very Good";
                        }
                        let sex = '';
                        if (gender == 'ស') { sex = 'F' };
                        if (gender == 'ប') { sex = 'M' };

                        let new_gender = '';
                        if (gender == 'ស') { new_gender = 'ស' };
                        if (gender == 'ប') { new_gender = 'ប' };

                        firebase
                            .database()
                            .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                            .update({
                                average_moct: average,
                                rank_moct: rank,
                            });
                        let h = `
                                        <th class="border-dark text_table">ល.រ</th>
                                        <th class="border-dark text_table" style="width:15vh;">គោត្តនាម-នាម</th>
                                        <th class="border-dark text_table">ភេទ</th>
                                        <th class="border-dark text_table">ពិន្ទុសរុប</th>
                                        <th class="border-dark text_table">មធ្យមភាគ</th>
                                        <th class="border-dark text_table" style="width:8vh;">ចំណាត់ថ្នាក់</th>
                                        <th class="border-dark text_table">និទ្ទេស</th>
                                        <th class="border-dark text_table">ផ្សេងៗ</th>
        
                                        `;
                        let n = `
                                        <td class="border-dark text-center text_table">${num}</td>
                                        <td class="border-dark text-start text_table" style="width:15vh;">${id}</td>
                                        <td class="border-dark text-center text_table">${new_gender}</td>
                                        <td class="border-dark text-center text_table fw-bold">${total_all_score}</td>
                                        <td class="border-dark text-center text_table fw-bold">${average}</td>
                                        <td class="border-dark text-center text_table" style="color:red;width:8vh;">${rank}</td>
                                        <td class="border-dark text-center text_table" style="color:red;">${mention}</td>
                                        <td class="border-dark text-center text_table"></td>
                                        <td class="border-dark text-center text_table" style="display: none;">${mention_fail}${sex}</td>
                                        `;
                        table_result.innerHTML += n;
                        show_hearder_result.innerHTML = h;

                    })
                }
                if (primary_g_p2.includes(dbGrade)) {
                    datas.forEach((d) => {
                        var id = d.val().id;
                        var user_grade = d.val().user_grade;
                        var gender = d.val().gender;
                        var average = d.val().average_moct;
                        var rank = d.val().rank_moct;

                        var k_reading_moct = d.val().k_reading_moct;
                        var k_dictation_moct = d.val().k_dictation_moct;
                        var k_writing_moct = d.val().k_writing_moct;
                        var k_grammar_moct = d.val().k_grammar_moct;
                        var k_homework_moct = d.val().k_homework_moct;

                        var math_speak_moct = d.val().math_speak_moct;
                        var math_moct = d.val().math_moct;
                        var math_h_moct = d.val().math_h_moct;

                        var sci_moct = d.val().sci_moct;
                        var sci_h_moct = d.val().sci_h_moct;

                        var soc_h_moct = d.val().soc_h_moct;

                        var e_moct = d.val().e_moct;
                        var e_h_moct = d.val().e_h_moct;

                        var pe_moct = d.val().pe_moct;
                        var geor_moct = d.val().geor_moct;
                        var hist_moct = d.val().hist_moct;
                        var moral_moct = d.val().moral_moct;

                        let noSp = id.replace(/\s+/g, "");

                        if (!k_reading_moct) { k_reading_moct = 0 };
                        if (!k_dictation_moct) { k_dictation_moct = 0 };
                        if (!k_writing_moct) { k_writing_moct = 0 };
                        if (!k_grammar_moct) { k_grammar_moct = 0 };
                        if (!k_homework_moct) { k_homework_moct = 0 };

                        if (!math_speak_moct) { math_speak_moct = 0 };
                        if (!math_moct) { math_moct = 0 };
                        if (!math_h_moct) { math_h_moct = 0 };

                        if (!sci_moct) { sci_moct = 0 };
                        if (!sci_h_moct) { sci_h_moct = 0 };

                        if (!soc_h_moct) { soc_h_moct = 0 };

                        if (!e_moct) { e_moct = 0 };
                        if (!e_h_moct) { e_h_moct = 0 };

                        if (!pe_moct) { pe_moct = 0 };
                        if (!geor_moct) { geor_moct = 0 };
                        if (!hist_moct) { hist_moct = 0 };
                        if (!moral_moct) { moral_moct = 0 };
                        //Total all score
                        var total_all_score =
                            parseFloat(k_reading_moct) +
                            parseFloat(k_dictation_moct) +
                            parseFloat(k_writing_moct) +
                            parseFloat(k_grammar_moct) +
                            parseFloat(k_homework_moct) +
                            parseFloat(math_speak_moct) +
                            parseFloat(math_moct) +
                            parseFloat(math_h_moct) +
                            parseFloat(sci_moct) +
                            parseFloat(sci_h_moct) +
                            parseFloat(soc_h_moct) +
                            parseFloat(geor_moct) +
                            parseFloat(hist_moct) +
                            parseFloat(moral_moct) +
                            parseFloat(e_moct) +
                            parseFloat(e_h_moct) +
                            parseFloat(pe_moct);
                        if (!total_all_score) { total_all_score = "00" }
                        //មធ្យមភាគ
                        var st_average =
                            parseFloat(total_all_score) / dbdivid;
                        st_average = st_average.toFixed(2);

                        student_rank.push({
                            id,
                            user_grade,
                            st_average,
                            total_all_score,
                            gender,
                            k_reading_moct,
                            k_dictation_moct,
                            k_writing_moct,
                            k_homework_moct,
                            math_speak_moct,
                            math_moct,
                            math_h_moct,
                            sci_moct,
                            sci_h_moct,
                            soc_h_moct,
                            e_moct,
                            e_h_moct,
                            pe_moct,
                        })
                        setTimeout(() => {
                            //Mention average
                            let mention = '';
                            var my = parseFloat(average);
                            if (my <= 4.9) {
                                mention = "ខ្សោយ"
                            } else if (my <= 6.49) {
                                mention = "មធ្យម"
                            } else if (my <= 7.99) {
                                mention = "ល្អបង្គួរ";
                            } else if (my <= 9.49) {
                                mention = "ល្អ";
                            } else if (my <= 10) {
                                mention = "ល្អណាស់";
                            }

                            N0++;
                            let h = `
                                        <th class="border-dark">ល.រ</th>
                                        <th class="border-dark">ឈ្មោះ</th>
                                        <th class="border-dark">ភេទ</th>
                                        <th class="border-dark">អំណាន</th>
                                        <th class="border-dark">សរសេរតាមអាន</th>
                                        <th class="border-dark">តែងសេចក្តី</th>
                                        <th class="border-dark">វេយ្យាករណ៍</th>
                                        <th class="border-dark">គ.ផ្ទាល់មាត់</th>
                                        <th class="border-dark">គណិតវិទ្យា</th>
                                        <th class="border-dark">គ.កិច្ចការផ្ទះ</th>
                                        <th class="border-dark">វិទ្យាសាស្រ្ត</th>
                                        <th class="border-dark">ភូមិវិទ្យា</th>
                                        <th class="border-dark">ប្រវត្តិវិទ្យា</th>
                                        <th class="border-dark">ពលរដ្ឋ</th>
                                        <th class="border-dark">កិ.(ខ្មែរ)</th>
                                        <th class="border-dark">កិ.(វិទ្យា)</th>
                                        <th class="border-dark">កិ.(សិក្សា)</th>
                                        <th class="border-dark">កិ.(អង់គ្លេស)</th>
                                        <th class="border-dark">កីឡា</th>
                                        <th class="border-dark">អង់គ្លេស</th>
                                        <th class="border-dark">ពិន្ទុសរុប</th>
                                        <th class="border-dark">មធ្យមភាគ</th>
                                        <th class="border-dark">ចំណាត់ថ្នាក់</th>
                                        <th class="border-dark">និទ្ទេស</th>
                                        
        
                                        `
                            let n = `
                                        <td class="border-dark text-center">${N0}</td>
                                        <td class="border-dark">${id}</td>
                                        <td class="border-dark text-center">${gender}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_reading_moct="${N0}" id="${noSp}k_reading_moct">${k_reading_moct}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_dictation_moct="${N0}" id="${noSp}k_dictation_moct">${k_dictation_moct}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_writing_moct="${N0}" id="${noSp}k_writing_moct">${k_writing_moct}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_grammar_moct="${N0}" id="${noSp}k_grammar_moct">${k_grammar_moct}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_speak_moct="${N0}" id="${noSp}math_speak_moct">${math_speak_moct}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_moct="${N0}" id="${noSp}math_moct">${math_moct}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_h_moct="${N0}" id="${noSp}math_h_moct">${math_h_moct}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-sci_moct="${N0}" id="${noSp}sci_moct">${sci_moct}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-geor_moct="${N0}" id="${noSp}geor_moct">${geor_moct}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-hist_moct="${N0}" id="${noSp}hist_moct">${hist_moct}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-moral_moct="${N0}" id="${noSp}moral_moct">${moral_moct}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_homework_moct="${N0}" id="${noSp}k_homework_moct">${k_homework_moct}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-sci_h_moct="${N0}" id="${noSp}sci_h_moct">${sci_h_moct}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-soc_h_moct="${N0}" id="${noSp}soc_h_moct">${soc_h_moct}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-e_h_moct="${N0}" id="${noSp}e_h_moct">${e_h_moct}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-pe_moct="${N0}" id="${noSp}pe_moct">${pe_moct}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-e_moct="${N0}" id="${noSp}e_moct">${e_moct}</td>
                                        <td class="border-dark text-center fw-bold">${total_all_score}</td>
                                        <td class="border-dark text-center fw-bold">${average}</td>
                                        <td class="border-dark text-center" style="color:red;">${rank}</td>
                                        <td class="border-dark text-center" style="color:red;">${mention}</td>
                                        `;
                            //Update data
                            setTimeout(() => {
                                document.getElementById(`${noSp}e_moct`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}e_moct`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            e_moct: d,
                                        });
                                })
                                document.getElementById(`${noSp}pe_moct`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}pe_moct`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            pe_moct: d,
                                        });
                                })
                                document.getElementById(`${noSp}e_h_moct`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}e_h_moct`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            e_h_moct: d,
                                        });
                                })
                                document.getElementById(`${noSp}soc_h_moct`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}soc_h_moct`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            soc_h_moct: d,
                                        });
                                })
                                document.getElementById(`${noSp}sci_h_moct`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}sci_h_moct`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            sci_h_moct: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_homework_moct`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_homework_moct`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_homework_moct: d,
                                        });
                                })
                                document.getElementById(`${noSp}sci_moct`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}sci_moct`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            sci_moct: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_h_moct`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_h_moct`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_h_moct: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_moct`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_moct`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_moct: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_speak_moct`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_speak_moct`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_speak_moct: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_grammar_moct`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_grammar_moct`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_grammar_moct: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_writing_moct`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_writing_moct`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_writing_moct: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_dictation_moct`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_dictation_moct`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_dictation_moct: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_reading_moct`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_reading_moct`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_reading_moct: d,
                                        });
                                })
                                document.getElementById(`${noSp}geor_moct`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}geor_moct`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            geor_moct: d,
                                        });
                                })
                                document.getElementById(`${noSp}hist_moct`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}hist_moct`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            hist_moct: d,
                                        });
                                })

                                document.getElementById(`${noSp}moral_moct`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}moral_moct`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            moral_moct: d,
                                        });
                                })

                            }, 200);
                            //Key select
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_moct);
                                    const nextCell = document.querySelector(`[data-e_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_moct);
                                    const nextCell = document.querySelector(`[data-e_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_moct);
                                    const nextCell = document.querySelector(`[data-e_moct="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_moct);
                                    const nextCell = document.querySelector(`[data-pe_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_moct);
                                    const nextCell = document.querySelector(`[data-pe_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_moct);
                                    const nextCell = document.querySelector(`[data-pe_moct="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_moct);
                                    const nextCell = document.querySelector(`[data-e_h_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_moct);
                                    const nextCell = document.querySelector(`[data-e_h_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_moct);
                                    const nextCell = document.querySelector(`[data-e_h_moct="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_moct);
                                    const nextCell = document.querySelector(`[data-soc_h_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_moct);
                                    const nextCell = document.querySelector(`[data-soc_h_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_moct);
                                    const nextCell = document.querySelector(`[data-soc_h_moct="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_moct);
                                    const nextCell = document.querySelector(`[data-sci_h_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_moct);
                                    const nextCell = document.querySelector(`[data-sci_h_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_moct);
                                    const nextCell = document.querySelector(`[data-sci_h_moct="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_moct);
                                    const nextCell = document.querySelector(`[data-k_homework_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_moct);
                                    const nextCell = document.querySelector(`[data-k_homework_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_moct);
                                    const nextCell = document.querySelector(`[data-k_homework_moct="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_moct);
                                    const nextCell = document.querySelector(`[data-soc_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_moct);
                                    const nextCell = document.querySelector(`[data-soc_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_moct);
                                    const nextCell = document.querySelector(`[data-soc_moct="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_moct);
                                    const nextCell = document.querySelector(`[data-sci_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_moct);
                                    const nextCell = document.querySelector(`[data-sci_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_moct);
                                    const nextCell = document.querySelector(`[data-sci_moct="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_moct);
                                    const nextCell = document.querySelector(`[data-math_h_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_moct);
                                    const nextCell = document.querySelector(`[data-math_h_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_moct);
                                    const nextCell = document.querySelector(`[data-math_h_moct="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_moct);
                                    const nextCell = document.querySelector(`[data-math_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_moct);
                                    const nextCell = document.querySelector(`[data-math_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_moct);
                                    const nextCell = document.querySelector(`[data-math_moct="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_moct);
                                    const nextCell = document.querySelector(`[data-math_speak_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_moct);
                                    const nextCell = document.querySelector(`[data-math_speak_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_moct);
                                    const nextCell = document.querySelector(`[data-math_speak_moct="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_moct);
                                    const nextCell = document.querySelector(`[data-k_writing_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_moct);
                                    const nextCell = document.querySelector(`[data-k_writing_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_moct);
                                    const nextCell = document.querySelector(`[data-k_writing_moct="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_moct);
                                    const nextCell = document.querySelector(`[data-k_dictation_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_moct);
                                    const nextCell = document.querySelector(`[data-k_dictation_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_moct);
                                    const nextCell = document.querySelector(`[data-k_dictation_moct="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_moct);
                                    const nextCell = document.querySelector(`[data-k_reading_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_moct);
                                    const nextCell = document.querySelector(`[data-k_reading_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_moct);
                                    const nextCell = document.querySelector(`[data-k_reading_moct="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_grammar_moct);
                                    const nextCell = document.querySelector(`[data-k_grammar_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_grammar_moct);
                                    const nextCell = document.querySelector(`[data-k_grammar_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_grammar_moct);
                                    const nextCell = document.querySelector(`[data-k_grammar_moct="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.moral_moct);
                                    const nextCell = document.querySelector(`[data-moral_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.moral_moct);
                                    const nextCell = document.querySelector(`[data-moral_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.moral_moct);
                                    const nextCell = document.querySelector(`[data-moral_moct="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.hist_moct);
                                    const nextCell = document.querySelector(`[data-hist_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.hist_moct);
                                    const nextCell = document.querySelector(`[data-hist_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.hist_moct);
                                    const nextCell = document.querySelector(`[data-hist_moct="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.geor_moct);
                                    const nextCell = document.querySelector(`[data-geor_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.geor_moct);
                                    const nextCell = document.querySelector(`[data-geor_moct="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.geor_moct);
                                    const nextCell = document.querySelector(`[data-geor_moct="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });

                            show_hearder.innerHTML = h;
                            table.innerHTML += n;
                            show_hearder_print.innerHTML = h;
                            table_print.innerHTML += n;

                        }, 200);

                    })
                    //Sort array and get rank number
                    student_rank.sort((a, b) => {
                        if (a.st_average > b.st_average) return -1;
                        if (a.st_average < b.st_average) return 1;
                        return 0;
                    });

                    for (let i = 0; i < student_rank.length; i++) {
                        let avg = student_rank[i].st_average;


                        let studentsWithRank = student_rank.filter(
                            (student) => student.st_average === avg

                        );
                        for (let student of studentsWithRank) {
                            student.Rank = i + 1;
                        }
                        i += studentsWithRank.length - 1;
                    }
                    let num = "";
                    //get Data sort to new array and save to localStorage
                    student_rank.forEach((student) => {
                        var id = student.id;
                        var gender = student.gender;
                        var total_all_score = student.total_all_score;
                        var average = student.st_average;
                        var rank = student.Rank;
                        if (!total_all_score) {

                            total_all_score = total_all_score.toFixed(2);
                        }

                        num++;

                        //Mention average
                        let mention = '';
                        var my = parseFloat(average);
                        if (my <= 4.9) {
                            mention = "ខ្សោយ"
                        } else if (my <= 6.49) {
                            mention = "មធ្យម"
                        } else if (my <= 7.99) {
                            mention = "ល្អបង្គួរ";
                        } else if (my <= 9.49) {
                            mention = "ល្អ";
                        } else if (my <= 10) {
                            mention = "ល្អណាស់";
                        }
                        let mention_fail = '';
                        var my = parseFloat(average);
                        if (my <= 4.9) {
                            mention_fail = "Poor"
                        } else if (my <= 6.49) {
                            mention_fail = "Average"
                        } else if (my <= 7.99) {
                            mention_fail = "Fairly Good";
                        } else if (my <= 9.49) {
                            mention_fail = "Good";
                        } else if (my <= 10) {
                            mention_fail = "Very Good";
                        }
                        let sex = '';
                        if (gender == 'ស') { sex = 'F' };
                        if (gender == 'ប') { sex = 'M' };

                        let new_gender = '';
                        if (gender == 'ស') { new_gender = 'ស' };
                        if (gender == 'ប') { new_gender = 'ប' };

                        firebase
                            .database()
                            .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                            .update({
                                average_moct: average,
                                rank_moct: rank,
                            });
                        let h = `
                                        <th class="border-dark text_table">ល.រ</th>
                                        <th class="border-dark text_table" style="width:15vh;">គោត្តនាម-នាម</th>
                                        <th class="border-dark text_table">ភេទ</th>
                                        <th class="border-dark text_table">ពិន្ទុសរុប</th>
                                        <th class="border-dark text_table">មធ្យមភាគ</th>
                                        <th class="border-dark text_table" style="width:8vh;">ចំណាត់ថ្នាក់</th>
                                        <th class="border-dark text_table">និទ្ទេស</th>
                                        <th class="border-dark text_table">ផ្សេងៗ</th>
        
                                        `;
                        let n = `
                                        <td class="border-dark text-center text_table">${num}</td>
                                        <td class="border-dark text-start text_table" style="width:15vh;">${id}</td>
                                        <td class="border-dark text-center text_table">${new_gender}</td>
                                        <td class="border-dark text-center text_table fw-bold">${total_all_score}</td>
                                        <td class="border-dark text-center text_table fw-bold">${average}</td>
                                        <td class="border-dark text-center text_table" style="color:red;width:8vh;">${rank}</td>
                                        <td class="border-dark text-center text_table" style="color:red;">${mention}</td>
                                        <td class="border-dark text-center text_table"></td>
                                        <td class="border-dark text-center text_table" style="display: none;">${mention_fail}${sex}</td>
                                        `;
                        table_result.innerHTML += n;
                        show_hearder_result.innerHTML = h;
                    })


                }
            }

            if (dbMonth == 'November') {
                if (primary_g_p1.includes(dbGrade)) {

                    datas.forEach((d) => {

                        var id = d.val().id;
                        var user_grade = d.val().user_grade;
                        var gender = d.val().gender;
                        var average = d.val().average_mnov;
                        var rank = d.val().rank_mnov;

                        var k_listen_mnov = d.val().k_listen_mnov;
                        var k_speak_mnov = d.val().k_speak_mnov;
                        var k_reading_mnov = d.val().k_reading_mnov;
                        var k_dictation_mnov = d.val().k_dictation_mnov;
                        var k_writing_mnov = d.val().k_writing_mnov;
                        var k_grammar_mnov = d.val().k_grammar_mnov;
                        var k_homework_mnov = d.val().k_homework_mnov;

                        var math_speak_mnov = d.val().math_speak_mnov;
                        var math_mnov = d.val().math_mnov;
                        var math_h_mnov = d.val().math_h_mnov;

                        var sci_mnov = d.val().sci_mnov;
                        var sci_h_mnov = d.val().sci_h_mnov;

                        var soc_mnov = d.val().soc_mnov;
                        var soc_h_mnov = d.val().soc_h_mnov;

                        var e_mnov = d.val().e_mnov;
                        var e_h_mnov = d.val().e_h_mnov;

                        var pe_mnov = d.val().pe_mnov;

                        let noSp = id.replace(/\s+/g, "");

                        if (!k_listen_mnov) { k_listen_mnov = 0 };
                        if (!k_speak_mnov) { k_speak_mnov = 0 };
                        if (!k_reading_mnov) { k_reading_mnov = 0 };
                        if (!k_dictation_mnov) { k_dictation_mnov = 0 };
                        if (!k_writing_mnov) { k_writing_mnov = 0 };
                        if (!k_grammar_mnov) { k_grammar_mnov = 0 };
                        if (!k_homework_mnov) { k_homework_mnov = 0 };

                        if (!math_speak_mnov) { math_speak_mnov = 0 };
                        if (!math_mnov) { math_mnov = 0 };
                        if (!math_h_mnov) { math_h_mnov = 0 };

                        if (!sci_mnov) { sci_mnov = 0 };
                        if (!sci_h_mnov) { sci_h_mnov = 0 };

                        if (!soc_mnov) { soc_mnov = 0 };
                        if (!soc_h_mnov) { soc_h_mnov = 0 };

                        if (!e_mnov) { e_mnov = 0 };
                        if (!e_h_mnov) { e_h_mnov = 0 };

                        if (!pe_mnov) { pe_mnov = 0 };

                        //Total all score
                        var total_all_score =
                            parseFloat(k_listen_mnov) +
                            parseFloat(k_speak_mnov) +
                            parseFloat(k_reading_mnov) +
                            parseFloat(k_dictation_mnov) +
                            parseFloat(k_writing_mnov) +
                            parseFloat(k_homework_mnov) +
                            parseFloat(math_speak_mnov) +
                            parseFloat(math_mnov) +
                            parseFloat(math_h_mnov) +
                            parseFloat(sci_mnov) +
                            parseFloat(sci_h_mnov) +
                            parseFloat(soc_mnov) +
                            parseFloat(soc_h_mnov) +
                            parseFloat(e_mnov) +
                            parseFloat(e_h_mnov) +
                            parseFloat(pe_mnov);
                        if (!total_all_score) { total_all_score = "00" }
                        //មធ្យមភាគ
                        var st_average =
                            parseFloat(total_all_score) / dbdivid;
                        st_average = st_average.toFixed(2);

                        student_rank.push({
                            id,
                            user_grade,
                            st_average,
                            total_all_score,
                            gender,
                            k_listen_mnov,
                            k_speak_mnov,
                            k_reading_mnov,
                            k_dictation_mnov,
                            k_writing_mnov,
                            k_homework_mnov,
                            math_speak_mnov,
                            math_mnov,
                            math_h_mnov,
                            sci_mnov,
                            sci_h_mnov,
                            soc_mnov,
                            soc_h_mnov,
                            e_mnov,
                            e_h_mnov,
                            pe_mnov,
                        })
                        setTimeout(() => {
                            N0++;

                            //Mention average
                            let mention = '';
                            var my = parseFloat(average);
                            if (my <= 4.9) {
                                mention = "ខ្សោយ"
                            } else if (my <= 6.49) {
                                mention = "មធ្យម"
                            } else if (my <= 7.99) {
                                mention = "ល្អបង្គួរ";
                            } else if (my <= 9.49) {
                                mention = "ល្អ";
                            } else if (my <= 10) {
                                mention = "ល្អណាស់";
                            }

                            let h = `
                                        <th class="border-dark">ល.រ</th>
                                        <th class="border-dark">ឈ្មោះ</th>
                                        <th class="border-dark">ភេទ</th>
                                        <th class="border-dark">ការស្តាប់</th>
                                        <th class="border-dark">ការនិយាយ</th>
                                        <th class="border-dark">អំណាន</th>
                                        <th class="border-dark">សរសេរតាមអាន</th>
                                        <th class="border-dark">តែងសេចក្តី</th>
                                        <th class="border-dark">គ.ផ្ទាល់មាត់</th>
                                        <th class="border-dark">គណិតវិទ្យា</th>
                                        <th class="border-dark">គ.កិច្ចការផ្ទះ</th>
                                        <th class="border-dark">វិទ្យាសាស្ត្រ</th>
                                        <th class="border-dark">សិក្សាសង្គម</th>
                                        <th class="border-dark">កិ.(ខ្មែរ)</th>
                                        <th class="border-dark">កិ.(វិទ្យា)</th>
                                        <th class="border-dark">កិ.(សិក្សា)</th>
                                        <th class="border-dark">កិ.(អង់គ្លេស)</th>
                                        <th class="border-dark">កីឡា</th>
                                        <th class="border-dark">អង់គ្លេស</th>
                                        <th class="border-dark">ពិន្ទុសរុប</th>
                                        <th class="border-dark">មធ្យមភាគ</th>
                                        <th class="border-dark">ចំណាត់ថ្នាក់</th>
                                        <th class="border-dark">និទ្ទេស</th>
                                        
        
                                        `
                            let n = `
                                        <td class="border-dark text-center">${N0}</td>
                                        <td class="border-dark">${id}</td>
                                        <td class="border-dark text-center"">${gender}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_listen_mnov="${N0}" id="${noSp}k_listen_mnov">${k_listen_mnov}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_speak_mnov="${N0}" id="${noSp}k_speak_mnov">${k_speak_mnov}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_reading_mnov="${N0}" id="${noSp}k_reading_mnov">${k_reading_mnov}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_dictation_mnov="${N0}" id="${noSp}k_dictation_mnov">${k_dictation_mnov}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_writing_mnov="${N0}" id="${noSp}k_writing_mnov">${k_writing_mnov}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_speak_mnov="${N0}" id="${noSp}math_speak_mnov">${math_speak_mnov}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_mnov="${N0}" id="${noSp}math_mnov">${math_mnov}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_h_mnov="${N0}" id="${noSp}math_h_mnov">${math_h_mnov}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-sci_mnov="${N0}" id="${noSp}sci_mnov">${sci_mnov}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-soc_mnov="${N0}" id="${noSp}soc_mnov">${soc_mnov}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_homework_mnov="${N0}" id="${noSp}k_homework_mnov">${k_homework_mnov}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-sci_h_mnov="${N0}" id="${noSp}sci_h_mnov">${sci_h_mnov}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-soc_h_mnov="${N0}" id="${noSp}soc_h_mnov">${soc_h_mnov}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-e_h_mnov="${N0}" id="${noSp}e_h_mnov">${e_h_mnov}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-pe_mnov="${N0}" id="${noSp}pe_mnov">${pe_mnov}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-e_mnov="${N0}" id="${noSp}e_mnov">${e_mnov}</td>
                                        <td class="border-dark text-center fw-bold">${total_all_score}</td>
                                        <td class="border-dark text-center fw-bold">${average}</td>
                                        <td class="border-dark text-center" style="color:red;">${rank}</td>
                                        <td class="border-dark text-center" style="color:red;">${mention}</td>
                                        `;
                            //Update data
                            setTimeout(() => {
                                document.getElementById(`${noSp}e_mnov`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}e_mnov`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            e_mnov: d,
                                        });
                                })
                                document.getElementById(`${noSp}pe_mnov`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}pe_mnov`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            pe_mnov: d,
                                        });
                                })
                                document.getElementById(`${noSp}e_h_mnov`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}e_h_mnov`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            e_h_mnov: d,
                                        });
                                })
                                document.getElementById(`${noSp}soc_h_mnov`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}soc_h_mnov`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            soc_h_mnov: d,
                                        });
                                })
                                document.getElementById(`${noSp}sci_h_mnov`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}sci_h_mnov`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            sci_h_mnov: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_homework_mnov`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_homework_mnov`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_homework_mnov: d,
                                        });
                                })
                                document.getElementById(`${noSp}soc_mnov`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}soc_mnov`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            soc_mnov: d,
                                        });
                                })
                                document.getElementById(`${noSp}sci_mnov`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}sci_mnov`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            sci_mnov: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_h_mnov`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_h_mnov`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_h_mnov: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_mnov`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_mnov`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_mnov: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_speak_mnov`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_speak_mnov`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_speak_mnov: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_writing_mnov`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_writing_mnov`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_writing_mnov: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_dictation_mnov`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_dictation_mnov`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_dictation_mnov: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_reading_mnov`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_reading_mnov`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_reading_mnov: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_speak_mnov`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_speak_mnov`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_speak_mnov: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_listen_mnov`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_listen_mnov`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_listen_mnov: d,
                                        });
                                })

                            }, 200);
                            //Key select
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mnov);
                                    const nextCell = document.querySelector(`[data-e_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mnov);
                                    const nextCell = document.querySelector(`[data-e_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mnov);
                                    const nextCell = document.querySelector(`[data-e_mnov="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mnov);
                                    const nextCell = document.querySelector(`[data-pe_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mnov);
                                    const nextCell = document.querySelector(`[data-pe_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mnov);
                                    const nextCell = document.querySelector(`[data-pe_mnov="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mnov);
                                    const nextCell = document.querySelector(`[data-e_h_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mnov);
                                    const nextCell = document.querySelector(`[data-e_h_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mnov);
                                    const nextCell = document.querySelector(`[data-e_h_mnov="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mnov);
                                    const nextCell = document.querySelector(`[data-soc_h_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mnov);
                                    const nextCell = document.querySelector(`[data-soc_h_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mnov);
                                    const nextCell = document.querySelector(`[data-soc_h_mnov="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mnov);
                                    const nextCell = document.querySelector(`[data-sci_h_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mnov);
                                    const nextCell = document.querySelector(`[data-sci_h_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mnov);
                                    const nextCell = document.querySelector(`[data-sci_h_mnov="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mnov);
                                    const nextCell = document.querySelector(`[data-k_homework_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mnov);
                                    const nextCell = document.querySelector(`[data-k_homework_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mnov);
                                    const nextCell = document.querySelector(`[data-k_homework_mnov="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mnov);
                                    const nextCell = document.querySelector(`[data-soc_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mnov);
                                    const nextCell = document.querySelector(`[data-soc_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mnov);
                                    const nextCell = document.querySelector(`[data-soc_mnov="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mnov);
                                    const nextCell = document.querySelector(`[data-sci_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mnov);
                                    const nextCell = document.querySelector(`[data-sci_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mnov);
                                    const nextCell = document.querySelector(`[data-sci_mnov="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mnov);
                                    const nextCell = document.querySelector(`[data-math_h_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mnov);
                                    const nextCell = document.querySelector(`[data-math_h_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mnov);
                                    const nextCell = document.querySelector(`[data-math_h_mnov="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mnov);
                                    const nextCell = document.querySelector(`[data-math_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mnov);
                                    const nextCell = document.querySelector(`[data-math_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mnov);
                                    const nextCell = document.querySelector(`[data-math_mnov="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mnov);
                                    const nextCell = document.querySelector(`[data-math_speak_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mnov);
                                    const nextCell = document.querySelector(`[data-math_speak_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mnov);
                                    const nextCell = document.querySelector(`[data-math_speak_mnov="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mnov);
                                    const nextCell = document.querySelector(`[data-k_writing_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mnov);
                                    const nextCell = document.querySelector(`[data-k_writing_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mnov);
                                    const nextCell = document.querySelector(`[data-k_writing_mnov="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mnov);
                                    const nextCell = document.querySelector(`[data-k_dictation_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mnov);
                                    const nextCell = document.querySelector(`[data-k_dictation_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mnov);
                                    const nextCell = document.querySelector(`[data-k_dictation_mnov="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mnov);
                                    const nextCell = document.querySelector(`[data-k_reading_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mnov);
                                    const nextCell = document.querySelector(`[data-k_reading_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mnov);
                                    const nextCell = document.querySelector(`[data-k_reading_mnov="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_speak_mnov);
                                    const nextCell = document.querySelector(`[data-k_speak_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_speak_mnov);
                                    const nextCell = document.querySelector(`[data-k_speak_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_speak_mnov);
                                    const nextCell = document.querySelector(`[data-k_speak_mnov="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_listen_mnov);
                                    const nextCell = document.querySelector(`[data-k_listen_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_listen_mnov);
                                    const nextCell = document.querySelector(`[data-k_listen_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_listen_mnov);
                                    const nextCell = document.querySelector(`[data-k_listen_mnov="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });


                            show_hearder.innerHTML = h;
                            table.innerHTML += n;
                            show_hearder_print.innerHTML = h;
                            table_print.innerHTML += n;

                        }, 200);

                    })
                    //Sort array and get rank number
                    student_rank.sort((a, b) => {
                        if (a.st_average > b.st_average) return -1;
                        if (a.st_average < b.st_average) return 1;
                        return 0;
                    });

                    for (let i = 0; i < student_rank.length; i++) {
                        let avg = student_rank[i].st_average;


                        let studentsWithRank = student_rank.filter(
                            (student) => student.st_average === avg

                        );
                        for (let student of studentsWithRank) {
                            student.Rank = i + 1;
                        }
                        i += studentsWithRank.length - 1;
                    }
                    let num = "";
                    //get Data sort to new array and save to localStorage
                    student_rank.forEach((student) => {
                        var id = student.id;
                        var gender = student.gender;
                        var total_all_score = student.total_all_score;
                        var average = student.st_average;
                        var rank = student.Rank;
                        if (!total_all_score) {

                            total_all_score = total_all_score.toFixed(2);
                        }

                        num++;

                        //Mention average
                        let mention = '';
                        var my = parseFloat(average);
                        if (my <= 4.9) {
                            mention = "ខ្សោយ"
                        } else if (my <= 6.49) {
                            mention = "មធ្យម"
                        } else if (my <= 7.99) {
                            mention = "ល្អបង្គួរ";
                        } else if (my <= 9.49) {
                            mention = "ល្អ";
                        } else if (my <= 10) {
                            mention = "ល្អណាស់";
                        }
                        let mention_fail = '';
                        var my = parseFloat(average);
                        if (my <= 4.9) {
                            mention_fail = "Poor"
                        } else if (my <= 6.49) {
                            mention_fail = "Average"
                        } else if (my <= 7.99) {
                            mention_fail = "Fairly Good";
                        } else if (my <= 9.49) {
                            mention_fail = "Good";
                        } else if (my <= 10) {
                            mention_fail = "Very Good";
                        }
                        let sex = '';
                        if (gender == 'ស') { sex = 'F' };
                        if (gender == 'ប') { sex = 'M' };

                        let new_gender = '';
                        if (gender == 'ស') { new_gender = 'ស' };
                        if (gender == 'ប') { new_gender = 'ប' };

                        firebase
                            .database()
                            .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                            .update({
                                average_mnov: average,
                                rank_mnov: rank,
                            });
                        let h = `
                                        <th class="border-dark text_table">ល.រ</th>
                                        <th class="border-dark text_table" style="width:15vh;">គោត្តនាម-នាម</th>
                                        <th class="border-dark text_table">ភេទ</th>
                                        <th class="border-dark text_table">ពិន្ទុសរុប</th>
                                        <th class="border-dark text_table">មធ្យមភាគ</th>
                                        <th class="border-dark text_table" style="width:8vh;">ចំណាត់ថ្នាក់</th>
                                        <th class="border-dark text_table">និទ្ទេស</th>
                                        <th class="border-dark text_table">ផ្សេងៗ</th>
        
                                        `;
                        let n = `
                                        <td class="border-dark text-center text_table">${num}</td>
                                        <td class="border-dark text-start text_table" style="width:15vh;">${id}</td>
                                        <td class="border-dark text-center text_table">${new_gender}</td>
                                        <td class="border-dark text-center text_table fw-bold">${total_all_score}</td>
                                        <td class="border-dark text-center text_table fw-bold">${average}</td>
                                        <td class="border-dark text-center text_table" style="color:red;width:8vh;">${rank}</td>
                                        <td class="border-dark text-center text_table" style="color:red;">${mention}</td>
                                        <td class="border-dark text-center text_table"></td>
                                        <td class="border-dark text-center text_table" style="display: none;">${mention_fail}${sex}</td>
                                        `;
                        table_result.innerHTML += n;
                        show_hearder_result.innerHTML = h;

                    })
                }
                if (primary_g_p2.includes(dbGrade)) {
                    datas.forEach((d) => {
                        var id = d.val().id;
                        var user_grade = d.val().user_grade;
                        var gender = d.val().gender;
                        var average = d.val().average_mnov;
                        var rank = d.val().rank_mnov;

                        var k_reading_mnov = d.val().k_reading_mnov;
                        var k_dictation_mnov = d.val().k_dictation_mnov;
                        var k_writing_mnov = d.val().k_writing_mnov;
                        var k_grammar_mnov = d.val().k_grammar_mnov;
                        var k_homework_mnov = d.val().k_homework_mnov;

                        var math_speak_mnov = d.val().math_speak_mnov;
                        var math_mnov = d.val().math_mnov;
                        var math_h_mnov = d.val().math_h_mnov;

                        var sci_mnov = d.val().sci_mnov;
                        var sci_h_mnov = d.val().sci_h_mnov;

                        var soc_h_mnov = d.val().soc_h_mnov;

                        var e_mnov = d.val().e_mnov;
                        var e_h_mnov = d.val().e_h_mnov;

                        var pe_mnov = d.val().pe_mnov;
                        var geor_mnov = d.val().geor_mnov;
                        var hist_mnov = d.val().hist_mnov;
                        var moral_mnov = d.val().moral_mnov;

                        let noSp = id.replace(/\s+/g, "");

                        if (!k_reading_mnov) { k_reading_mnov = 0 };
                        if (!k_dictation_mnov) { k_dictation_mnov = 0 };
                        if (!k_writing_mnov) { k_writing_mnov = 0 };
                        if (!k_grammar_mnov) { k_grammar_mnov = 0 };
                        if (!k_homework_mnov) { k_homework_mnov = 0 };

                        if (!math_speak_mnov) { math_speak_mnov = 0 };
                        if (!math_mnov) { math_mnov = 0 };
                        if (!math_h_mnov) { math_h_mnov = 0 };

                        if (!sci_mnov) { sci_mnov = 0 };
                        if (!sci_h_mnov) { sci_h_mnov = 0 };

                        if (!soc_h_mnov) { soc_h_mnov = 0 };

                        if (!e_mnov) { e_mnov = 0 };
                        if (!e_h_mnov) { e_h_mnov = 0 };

                        if (!pe_mnov) { pe_mnov = 0 };
                        if (!geor_mnov) { geor_mnov = 0 };
                        if (!hist_mnov) { hist_mnov = 0 };
                        if (!moral_mnov) { moral_mnov = 0 };
                        //Total all score
                        var total_all_score =
                            parseFloat(k_reading_mnov) +
                            parseFloat(k_dictation_mnov) +
                            parseFloat(k_writing_mnov) +
                            parseFloat(k_grammar_mnov) +
                            parseFloat(k_homework_mnov) +
                            parseFloat(math_speak_mnov) +
                            parseFloat(math_mnov) +
                            parseFloat(math_h_mnov) +
                            parseFloat(sci_mnov) +
                            parseFloat(sci_h_mnov) +
                            parseFloat(soc_h_mnov) +
                            parseFloat(geor_mnov) +
                            parseFloat(hist_mnov) +
                            parseFloat(moral_mnov) +
                            parseFloat(e_mnov) +
                            parseFloat(e_h_mnov) +
                            parseFloat(pe_mnov);
                        if (!total_all_score) { total_all_score = "00" }
                        //មធ្យមភាគ
                        var st_average =
                            parseFloat(total_all_score) / dbdivid;
                        st_average = st_average.toFixed(2);

                        student_rank.push({
                            id,
                            user_grade,
                            st_average,
                            total_all_score,
                            gender,
                            k_reading_mnov,
                            k_dictation_mnov,
                            k_writing_mnov,
                            k_homework_mnov,
                            math_speak_mnov,
                            math_mnov,
                            math_h_mnov,
                            sci_mnov,
                            sci_h_mnov,
                            soc_h_mnov,
                            e_mnov,
                            e_h_mnov,
                            pe_mnov,
                        })
                        setTimeout(() => {
                            //Mention average
                            let mention = '';
                            var my = parseFloat(average);
                            if (my <= 4.9) {
                                mention = "ខ្សោយ"
                            } else if (my <= 6.49) {
                                mention = "មធ្យម"
                            } else if (my <= 7.99) {
                                mention = "ល្អបង្គួរ";
                            } else if (my <= 9.49) {
                                mention = "ល្អ";
                            } else if (my <= 10) {
                                mention = "ល្អណាស់";
                            }

                            N0++;
                            let h = `
                                        <th class="border-dark">ល.រ</th>
                                        <th class="border-dark">ឈ្មោះ</th>
                                        <th class="border-dark">ភេទ</th>
                                        <th class="border-dark">អំណាន</th>
                                        <th class="border-dark">សរសេរតាមអាន</th>
                                        <th class="border-dark">តែងសេចក្តី</th>
                                        <th class="border-dark">វេយ្យាករណ៍</th>
                                        <th class="border-dark">គ.ផ្ទាល់មាត់</th>
                                        <th class="border-dark">គណិតវិទ្យា</th>
                                        <th class="border-dark">គ.កិច្ចការផ្ទះ</th>
                                        <th class="border-dark">វិទ្យាសាស្រ្ត</th>
                                        <th class="border-dark">ភូមិវិទ្យា</th>
                                        <th class="border-dark">ប្រវត្តិវិទ្យា</th>
                                        <th class="border-dark">ពលរដ្ឋ</th>
                                        <th class="border-dark">កិ.(ខ្មែរ)</th>
                                        <th class="border-dark">កិ.(វិទ្យា)</th>
                                        <th class="border-dark">កិ.(សិក្សា)</th>
                                        <th class="border-dark">កិ.(អង់គ្លេស)</th>
                                        <th class="border-dark">កីឡា</th>
                                        <th class="border-dark">អង់គ្លេស</th>
                                        <th class="border-dark">ពិន្ទុសរុប</th>
                                        <th class="border-dark">មធ្យមភាគ</th>
                                        <th class="border-dark">ចំណាត់ថ្នាក់</th>
                                        <th class="border-dark">និទ្ទេស</th>
                                        
        
                                        `
                            let n = `
                                        <td class="border-dark text-center">${N0}</td>
                                        <td class="border-dark">${id}</td>
                                        <td class="border-dark text-center">${gender}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_reading_mnov="${N0}" id="${noSp}k_reading_mnov">${k_reading_mnov}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_dictation_mnov="${N0}" id="${noSp}k_dictation_mnov">${k_dictation_mnov}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_writing_mnov="${N0}" id="${noSp}k_writing_mnov">${k_writing_mnov}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_grammar_mnov="${N0}" id="${noSp}k_grammar_mnov">${k_grammar_mnov}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_speak_mnov="${N0}" id="${noSp}math_speak_mnov">${math_speak_mnov}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_mnov="${N0}" id="${noSp}math_mnov">${math_mnov}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_h_mnov="${N0}" id="${noSp}math_h_mnov">${math_h_mnov}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-sci_mnov="${N0}" id="${noSp}sci_mnov">${sci_mnov}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-geor_mnov="${N0}" id="${noSp}geor_mnov">${geor_mnov}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-hist_mnov="${N0}" id="${noSp}hist_mnov">${hist_mnov}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-moral_mnov="${N0}" id="${noSp}moral_mnov">${moral_mnov}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_homework_mnov="${N0}" id="${noSp}k_homework_mnov">${k_homework_mnov}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-sci_h_mnov="${N0}" id="${noSp}sci_h_mnov">${sci_h_mnov}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-soc_h_mnov="${N0}" id="${noSp}soc_h_mnov">${soc_h_mnov}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-e_h_mnov="${N0}" id="${noSp}e_h_mnov">${e_h_mnov}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-pe_mnov="${N0}" id="${noSp}pe_mnov">${pe_mnov}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-e_mnov="${N0}" id="${noSp}e_mnov">${e_mnov}</td>
                                        <td class="border-dark text-center fw-bold">${total_all_score}</td>
                                        <td class="border-dark text-center fw-bold">${average}</td>
                                        <td class="border-dark text-center" style="color:red;">${rank}</td>
                                        <td class="border-dark text-center" style="color:red;">${mention}</td>
                                        `;
                            //Update data
                            setTimeout(() => {
                                document.getElementById(`${noSp}e_mnov`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}e_mnov`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            e_mnov: d,
                                        });
                                })
                                document.getElementById(`${noSp}pe_mnov`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}pe_mnov`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            pe_mnov: d,
                                        });
                                })
                                document.getElementById(`${noSp}e_h_mnov`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}e_h_mnov`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            e_h_mnov: d,
                                        });
                                })
                                document.getElementById(`${noSp}soc_h_mnov`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}soc_h_mnov`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            soc_h_mnov: d,
                                        });
                                })
                                document.getElementById(`${noSp}sci_h_mnov`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}sci_h_mnov`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            sci_h_mnov: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_homework_mnov`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_homework_mnov`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_homework_mnov: d,
                                        });
                                })
                                document.getElementById(`${noSp}sci_mnov`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}sci_mnov`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            sci_mnov: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_h_mnov`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_h_mnov`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_h_mnov: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_mnov`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_mnov`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_mnov: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_speak_mnov`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_speak_mnov`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_speak_mnov: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_grammar_mnov`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_grammar_mnov`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_grammar_mnov: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_writing_mnov`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_writing_mnov`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_writing_mnov: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_dictation_mnov`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_dictation_mnov`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_dictation_mnov: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_reading_mnov`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_reading_mnov`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_reading_mnov: d,
                                        });
                                })
                                document.getElementById(`${noSp}geor_mnov`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}geor_mnov`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            geor_mnov: d,
                                        });
                                })
                                document.getElementById(`${noSp}hist_mnov`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}hist_mnov`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            hist_mnov: d,
                                        });
                                })

                                document.getElementById(`${noSp}moral_mnov`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}moral_mnov`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            moral_mnov: d,
                                        });
                                })

                            }, 200);
                            //Key select
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mnov);
                                    const nextCell = document.querySelector(`[data-e_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mnov);
                                    const nextCell = document.querySelector(`[data-e_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mnov);
                                    const nextCell = document.querySelector(`[data-e_mnov="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mnov);
                                    const nextCell = document.querySelector(`[data-pe_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mnov);
                                    const nextCell = document.querySelector(`[data-pe_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mnov);
                                    const nextCell = document.querySelector(`[data-pe_mnov="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mnov);
                                    const nextCell = document.querySelector(`[data-e_h_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mnov);
                                    const nextCell = document.querySelector(`[data-e_h_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mnov);
                                    const nextCell = document.querySelector(`[data-e_h_mnov="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mnov);
                                    const nextCell = document.querySelector(`[data-soc_h_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mnov);
                                    const nextCell = document.querySelector(`[data-soc_h_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mnov);
                                    const nextCell = document.querySelector(`[data-soc_h_mnov="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mnov);
                                    const nextCell = document.querySelector(`[data-sci_h_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mnov);
                                    const nextCell = document.querySelector(`[data-sci_h_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mnov);
                                    const nextCell = document.querySelector(`[data-sci_h_mnov="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mnov);
                                    const nextCell = document.querySelector(`[data-k_homework_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mnov);
                                    const nextCell = document.querySelector(`[data-k_homework_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mnov);
                                    const nextCell = document.querySelector(`[data-k_homework_mnov="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mnov);
                                    const nextCell = document.querySelector(`[data-soc_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mnov);
                                    const nextCell = document.querySelector(`[data-soc_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mnov);
                                    const nextCell = document.querySelector(`[data-soc_mnov="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mnov);
                                    const nextCell = document.querySelector(`[data-sci_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mnov);
                                    const nextCell = document.querySelector(`[data-sci_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mnov);
                                    const nextCell = document.querySelector(`[data-sci_mnov="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mnov);
                                    const nextCell = document.querySelector(`[data-math_h_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mnov);
                                    const nextCell = document.querySelector(`[data-math_h_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mnov);
                                    const nextCell = document.querySelector(`[data-math_h_mnov="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mnov);
                                    const nextCell = document.querySelector(`[data-math_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mnov);
                                    const nextCell = document.querySelector(`[data-math_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mnov);
                                    const nextCell = document.querySelector(`[data-math_mnov="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mnov);
                                    const nextCell = document.querySelector(`[data-math_speak_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mnov);
                                    const nextCell = document.querySelector(`[data-math_speak_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mnov);
                                    const nextCell = document.querySelector(`[data-math_speak_mnov="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mnov);
                                    const nextCell = document.querySelector(`[data-k_writing_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mnov);
                                    const nextCell = document.querySelector(`[data-k_writing_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mnov);
                                    const nextCell = document.querySelector(`[data-k_writing_mnov="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mnov);
                                    const nextCell = document.querySelector(`[data-k_dictation_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mnov);
                                    const nextCell = document.querySelector(`[data-k_dictation_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mnov);
                                    const nextCell = document.querySelector(`[data-k_dictation_mnov="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mnov);
                                    const nextCell = document.querySelector(`[data-k_reading_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mnov);
                                    const nextCell = document.querySelector(`[data-k_reading_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mnov);
                                    const nextCell = document.querySelector(`[data-k_reading_mnov="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_grammar_mnov);
                                    const nextCell = document.querySelector(`[data-k_grammar_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_grammar_mnov);
                                    const nextCell = document.querySelector(`[data-k_grammar_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_grammar_mnov);
                                    const nextCell = document.querySelector(`[data-k_grammar_mnov="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.moral_mnov);
                                    const nextCell = document.querySelector(`[data-moral_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.moral_mnov);
                                    const nextCell = document.querySelector(`[data-moral_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.moral_mnov);
                                    const nextCell = document.querySelector(`[data-moral_mnov="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.hist_mnov);
                                    const nextCell = document.querySelector(`[data-hist_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.hist_mnov);
                                    const nextCell = document.querySelector(`[data-hist_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.hist_mnov);
                                    const nextCell = document.querySelector(`[data-hist_mnov="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.geor_mnov);
                                    const nextCell = document.querySelector(`[data-geor_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.geor_mnov);
                                    const nextCell = document.querySelector(`[data-geor_mnov="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.geor_mnov);
                                    const nextCell = document.querySelector(`[data-geor_mnov="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });

                            show_hearder.innerHTML = h;
                            table.innerHTML += n;
                            show_hearder_print.innerHTML = h;
                            table_print.innerHTML += n;

                        }, 200);

                    })
                    //Sort array and get rank number
                    student_rank.sort((a, b) => {
                        if (a.st_average > b.st_average) return -1;
                        if (a.st_average < b.st_average) return 1;
                        return 0;
                    });

                    for (let i = 0; i < student_rank.length; i++) {
                        let avg = student_rank[i].st_average;


                        let studentsWithRank = student_rank.filter(
                            (student) => student.st_average === avg

                        );
                        for (let student of studentsWithRank) {
                            student.Rank = i + 1;
                        }
                        i += studentsWithRank.length - 1;
                    }
                    let num = "";
                    //get Data sort to new array and save to localStorage
                    student_rank.forEach((student) => {
                        var id = student.id;
                        var gender = student.gender;
                        var total_all_score = student.total_all_score;
                        var average = student.st_average;
                        var rank = student.Rank;
                        if (!total_all_score) {

                            total_all_score = total_all_score.toFixed(2);
                        }

                        num++;

                        //Mention average
                        let mention = '';
                        var my = parseFloat(average);
                        if (my <= 4.9) {
                            mention = "ខ្សោយ"
                        } else if (my <= 6.49) {
                            mention = "មធ្យម"
                        } else if (my <= 7.99) {
                            mention = "ល្អបង្គួរ";
                        } else if (my <= 9.49) {
                            mention = "ល្អ";
                        } else if (my <= 10) {
                            mention = "ល្អណាស់";
                        }
                        let mention_fail = '';
                        var my = parseFloat(average);
                        if (my <= 4.9) {
                            mention_fail = "Poor"
                        } else if (my <= 6.49) {
                            mention_fail = "Average"
                        } else if (my <= 7.99) {
                            mention_fail = "Fairly Good";
                        } else if (my <= 9.49) {
                            mention_fail = "Good";
                        } else if (my <= 10) {
                            mention_fail = "Very Good";
                        }
                        let sex = '';
                        if (gender == 'ស') { sex = 'F' };
                        if (gender == 'ប') { sex = 'M' };

                        let new_gender = '';
                        if (gender == 'ស') { new_gender = 'ស' };
                        if (gender == 'ប') { new_gender = 'ប' };

                        firebase
                            .database()
                            .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                            .update({
                                average_mnov: average,
                                rank_mnov: rank,
                            });
                        let h = `
                                        <th class="border-dark text_table">ល.រ</th>
                                        <th class="border-dark text_table" style="width:15vh;">គោត្តនាម-នាម</th>
                                        <th class="border-dark text_table">ភេទ</th>
                                        <th class="border-dark text_table">ពិន្ទុសរុប</th>
                                        <th class="border-dark text_table">មធ្យមភាគ</th>
                                        <th class="border-dark text_table" style="width:8vh;">ចំណាត់ថ្នាក់</th>
                                        <th class="border-dark text_table">និទ្ទេស</th>
                                        <th class="border-dark text_table">ផ្សេងៗ</th>
        
                                        `;
                        let n = `
                                        <td class="border-dark text-center text_table">${num}</td>
                                        <td class="border-dark text-start text_table" style="width:15vh;">${id}</td>
                                        <td class="border-dark text-center text_table">${new_gender}</td>
                                        <td class="border-dark text-center text_table fw-bold">${total_all_score}</td>
                                        <td class="border-dark text-center text_table fw-bold">${average}</td>
                                        <td class="border-dark text-center text_table" style="color:red;width:8vh;">${rank}</td>
                                        <td class="border-dark text-center text_table" style="color:red;">${mention}</td>
                                        <td class="border-dark text-center text_table"></td>
                                        <td class="border-dark text-center text_table" style="display: none;">${mention_fail}${sex}</td>
                                        `;
                        table_result.innerHTML += n;
                        show_hearder_result.innerHTML = h;
                    })


                }
            }

            if (dbMonth == 'December') {
                if (primary_g_p1.includes(dbGrade)) {

                    datas.forEach((d) => {

                        var id = d.val().id;
                        var user_grade = d.val().user_grade;
                        var gender = d.val().gender;
                        var average = d.val().average_mdec;
                        var rank = d.val().rank_mdec;

                        var k_listen_mdec = d.val().k_listen_mdec;
                        var k_speak_mdec = d.val().k_speak_mdec;
                        var k_reading_mdec = d.val().k_reading_mdec;
                        var k_dictation_mdec = d.val().k_dictation_mdec;
                        var k_writing_mdec = d.val().k_writing_mdec;
                        var k_grammar_mdec = d.val().k_grammar_mdec;
                        var k_homework_mdec = d.val().k_homework_mdec;

                        var math_speak_mdec = d.val().math_speak_mdec;
                        var math_mdec = d.val().math_mdec;
                        var math_h_mdec = d.val().math_h_mdec;

                        var sci_mdec = d.val().sci_mdec;
                        var sci_h_mdec = d.val().sci_h_mdec;

                        var soc_mdec = d.val().soc_mdec;
                        var soc_h_mdec = d.val().soc_h_mdec;

                        var e_mdec = d.val().e_mdec;
                        var e_h_mdec = d.val().e_h_mdec;

                        var pe_mdec = d.val().pe_mdec;

                        let noSp = id.replace(/\s+/g, "");

                        if (!k_listen_mdec) { k_listen_mdec = 0 };
                        if (!k_speak_mdec) { k_speak_mdec = 0 };
                        if (!k_reading_mdec) { k_reading_mdec = 0 };
                        if (!k_dictation_mdec) { k_dictation_mdec = 0 };
                        if (!k_writing_mdec) { k_writing_mdec = 0 };
                        if (!k_grammar_mdec) { k_grammar_mdec = 0 };
                        if (!k_homework_mdec) { k_homework_mdec = 0 };

                        if (!math_speak_mdec) { math_speak_mdec = 0 };
                        if (!math_mdec) { math_mdec = 0 };
                        if (!math_h_mdec) { math_h_mdec = 0 };

                        if (!sci_mdec) { sci_mdec = 0 };
                        if (!sci_h_mdec) { sci_h_mdec = 0 };

                        if (!soc_mdec) { soc_mdec = 0 };
                        if (!soc_h_mdec) { soc_h_mdec = 0 };

                        if (!e_mdec) { e_mdec = 0 };
                        if (!e_h_mdec) { e_h_mdec = 0 };

                        if (!pe_mdec) { pe_mdec = 0 };

                        //Total all score
                        var total_all_score =
                            parseFloat(k_listen_mdec) +
                            parseFloat(k_speak_mdec) +
                            parseFloat(k_reading_mdec) +
                            parseFloat(k_dictation_mdec) +
                            parseFloat(k_writing_mdec) +
                            parseFloat(k_homework_mdec) +
                            parseFloat(math_speak_mdec) +
                            parseFloat(math_mdec) +
                            parseFloat(math_h_mdec) +
                            parseFloat(sci_mdec) +
                            parseFloat(sci_h_mdec) +
                            parseFloat(soc_mdec) +
                            parseFloat(soc_h_mdec) +
                            parseFloat(e_mdec) +
                            parseFloat(e_h_mdec) +
                            parseFloat(pe_mdec);
                        if (!total_all_score) { total_all_score = "00" }
                        //មធ្យមភាគ
                        var st_average =
                            parseFloat(total_all_score) / dbdivid;
                        st_average = st_average.toFixed(2);

                        student_rank.push({
                            id,
                            user_grade,
                            st_average,
                            total_all_score,
                            gender,
                            k_listen_mdec,
                            k_speak_mdec,
                            k_reading_mdec,
                            k_dictation_mdec,
                            k_writing_mdec,
                            k_homework_mdec,
                            math_speak_mdec,
                            math_mdec,
                            math_h_mdec,
                            sci_mdec,
                            sci_h_mdec,
                            soc_mdec,
                            soc_h_mdec,
                            e_mdec,
                            e_h_mdec,
                            pe_mdec,
                        })
                        setTimeout(() => {
                            N0++;

                            //Mention average
                            let mention = '';
                            var my = parseFloat(average);
                            if (my <= 4.9) {
                                mention = "ខ្សោយ"
                            } else if (my <= 6.49) {
                                mention = "មធ្យម"
                            } else if (my <= 7.99) {
                                mention = "ល្អបង្គួរ";
                            } else if (my <= 9.49) {
                                mention = "ល្អ";
                            } else if (my <= 10) {
                                mention = "ល្អណាស់";
                            }

                            let h = `
                                        <th class="border-dark">ល.រ</th>
                                        <th class="border-dark">ឈ្មោះ</th>
                                        <th class="border-dark">ភេទ</th>
                                        <th class="border-dark">ការស្តាប់</th>
                                        <th class="border-dark">ការនិយាយ</th>
                                        <th class="border-dark">អំណាន</th>
                                        <th class="border-dark">សរសេរតាមអាន</th>
                                        <th class="border-dark">តែងសេចក្តី</th>
                                        <th class="border-dark">គ.ផ្ទាល់មាត់</th>
                                        <th class="border-dark">គណិតវិទ្យា</th>
                                        <th class="border-dark">គ.កិច្ចការផ្ទះ</th>
                                        <th class="border-dark">វិទ្យាសាស្ត្រ</th>
                                        <th class="border-dark">សិក្សាសង្គម</th>
                                        <th class="border-dark">កិ.(ខ្មែរ)</th>
                                        <th class="border-dark">កិ.(វិទ្យា)</th>
                                        <th class="border-dark">កិ.(សិក្សា)</th>
                                        <th class="border-dark">កិ.(អង់គ្លេស)</th>
                                        <th class="border-dark">កីឡា</th>
                                        <th class="border-dark">អង់គ្លេស</th>
                                        <th class="border-dark">ពិន្ទុសរុប</th>
                                        <th class="border-dark">មធ្យមភាគ</th>
                                        <th class="border-dark">ចំណាត់ថ្នាក់</th>
                                        <th class="border-dark">និទ្ទេស</th>
                                        
        
                                        `
                            let n = `
                                        <td class="border-dark text-center">${N0}</td>
                                        <td class="border-dark">${id}</td>
                                        <td class="border-dark text-center"">${gender}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_listen_mdec="${N0}" id="${noSp}k_listen_mdec">${k_listen_mdec}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_speak_mdec="${N0}" id="${noSp}k_speak_mdec">${k_speak_mdec}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_reading_mdec="${N0}" id="${noSp}k_reading_mdec">${k_reading_mdec}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_dictation_mdec="${N0}" id="${noSp}k_dictation_mdec">${k_dictation_mdec}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_writing_mdec="${N0}" id="${noSp}k_writing_mdec">${k_writing_mdec}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_speak_mdec="${N0}" id="${noSp}math_speak_mdec">${math_speak_mdec}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_mdec="${N0}" id="${noSp}math_mdec">${math_mdec}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_h_mdec="${N0}" id="${noSp}math_h_mdec">${math_h_mdec}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-sci_mdec="${N0}" id="${noSp}sci_mdec">${sci_mdec}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-soc_mdec="${N0}" id="${noSp}soc_mdec">${soc_mdec}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_homework_mdec="${N0}" id="${noSp}k_homework_mdec">${k_homework_mdec}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-sci_h_mdec="${N0}" id="${noSp}sci_h_mdec">${sci_h_mdec}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-soc_h_mdec="${N0}" id="${noSp}soc_h_mdec">${soc_h_mdec}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-e_h_mdec="${N0}" id="${noSp}e_h_mdec">${e_h_mdec}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-pe_mdec="${N0}" id="${noSp}pe_mdec">${pe_mdec}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-e_mdec="${N0}" id="${noSp}e_mdec">${e_mdec}</td>
                                        <td class="border-dark text-center fw-bold">${total_all_score}</td>
                                        <td class="border-dark text-center fw-bold">${average}</td>
                                        <td class="border-dark text-center" style="color:red;">${rank}</td>
                                        <td class="border-dark text-center" style="color:red;">${mention}</td>
                                        `;
                            //Update data
                            setTimeout(() => {
                                document.getElementById(`${noSp}e_mdec`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}e_mdec`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            e_mdec: d,
                                        });
                                })
                                document.getElementById(`${noSp}pe_mdec`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}pe_mdec`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            pe_mdec: d,
                                        });
                                })
                                document.getElementById(`${noSp}e_h_mdec`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}e_h_mdec`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            e_h_mdec: d,
                                        });
                                })
                                document.getElementById(`${noSp}soc_h_mdec`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}soc_h_mdec`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            soc_h_mdec: d,
                                        });
                                })
                                document.getElementById(`${noSp}sci_h_mdec`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}sci_h_mdec`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            sci_h_mdec: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_homework_mdec`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_homework_mdec`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_homework_mdec: d,
                                        });
                                })
                                document.getElementById(`${noSp}soc_mdec`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}soc_mdec`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            soc_mdec: d,
                                        });
                                })
                                document.getElementById(`${noSp}sci_mdec`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}sci_mdec`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            sci_mdec: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_h_mdec`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_h_mdec`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_h_mdec: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_mdec`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_mdec`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_mdec: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_speak_mdec`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_speak_mdec`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_speak_mdec: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_writing_mdec`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_writing_mdec`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_writing_mdec: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_dictation_mdec`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_dictation_mdec`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_dictation_mdec: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_reading_mdec`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_reading_mdec`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_reading_mdec: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_speak_mdec`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_speak_mdec`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_speak_mdec: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_listen_mdec`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_listen_mdec`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_listen_mdec: d,
                                        });
                                })

                            }, 200);
                            //Key select
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mdec);
                                    const nextCell = document.querySelector(`[data-e_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mdec);
                                    const nextCell = document.querySelector(`[data-e_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mdec);
                                    const nextCell = document.querySelector(`[data-e_mdec="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mdec);
                                    const nextCell = document.querySelector(`[data-pe_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mdec);
                                    const nextCell = document.querySelector(`[data-pe_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mdec);
                                    const nextCell = document.querySelector(`[data-pe_mdec="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mdec);
                                    const nextCell = document.querySelector(`[data-e_h_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mdec);
                                    const nextCell = document.querySelector(`[data-e_h_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mdec);
                                    const nextCell = document.querySelector(`[data-e_h_mdec="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mdec);
                                    const nextCell = document.querySelector(`[data-soc_h_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mdec);
                                    const nextCell = document.querySelector(`[data-soc_h_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mdec);
                                    const nextCell = document.querySelector(`[data-soc_h_mdec="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mdec);
                                    const nextCell = document.querySelector(`[data-sci_h_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mdec);
                                    const nextCell = document.querySelector(`[data-sci_h_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mdec);
                                    const nextCell = document.querySelector(`[data-sci_h_mdec="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mdec);
                                    const nextCell = document.querySelector(`[data-k_homework_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mdec);
                                    const nextCell = document.querySelector(`[data-k_homework_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mdec);
                                    const nextCell = document.querySelector(`[data-k_homework_mdec="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mdec);
                                    const nextCell = document.querySelector(`[data-soc_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mdec);
                                    const nextCell = document.querySelector(`[data-soc_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mdec);
                                    const nextCell = document.querySelector(`[data-soc_mdec="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mdec);
                                    const nextCell = document.querySelector(`[data-sci_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mdec);
                                    const nextCell = document.querySelector(`[data-sci_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mdec);
                                    const nextCell = document.querySelector(`[data-sci_mdec="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mdec);
                                    const nextCell = document.querySelector(`[data-math_h_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mdec);
                                    const nextCell = document.querySelector(`[data-math_h_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mdec);
                                    const nextCell = document.querySelector(`[data-math_h_mdec="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mdec);
                                    const nextCell = document.querySelector(`[data-math_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mdec);
                                    const nextCell = document.querySelector(`[data-math_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mdec);
                                    const nextCell = document.querySelector(`[data-math_mdec="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mdec);
                                    const nextCell = document.querySelector(`[data-math_speak_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mdec);
                                    const nextCell = document.querySelector(`[data-math_speak_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mdec);
                                    const nextCell = document.querySelector(`[data-math_speak_mdec="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mdec);
                                    const nextCell = document.querySelector(`[data-k_writing_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mdec);
                                    const nextCell = document.querySelector(`[data-k_writing_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mdec);
                                    const nextCell = document.querySelector(`[data-k_writing_mdec="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mdec);
                                    const nextCell = document.querySelector(`[data-k_dictation_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mdec);
                                    const nextCell = document.querySelector(`[data-k_dictation_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mdec);
                                    const nextCell = document.querySelector(`[data-k_dictation_mdec="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mdec);
                                    const nextCell = document.querySelector(`[data-k_reading_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mdec);
                                    const nextCell = document.querySelector(`[data-k_reading_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mdec);
                                    const nextCell = document.querySelector(`[data-k_reading_mdec="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_speak_mdec);
                                    const nextCell = document.querySelector(`[data-k_speak_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_speak_mdec);
                                    const nextCell = document.querySelector(`[data-k_speak_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_speak_mdec);
                                    const nextCell = document.querySelector(`[data-k_speak_mdec="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_listen_mdec);
                                    const nextCell = document.querySelector(`[data-k_listen_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_listen_mdec);
                                    const nextCell = document.querySelector(`[data-k_listen_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_listen_mdec);
                                    const nextCell = document.querySelector(`[data-k_listen_mdec="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });


                            show_hearder.innerHTML = h;
                            table.innerHTML += n;
                            show_hearder_print.innerHTML = h;
                            table_print.innerHTML += n;

                        }, 200);

                    })
                    //Sort array and get rank number
                    student_rank.sort((a, b) => {
                        if (a.st_average > b.st_average) return -1;
                        if (a.st_average < b.st_average) return 1;
                        return 0;
                    });

                    for (let i = 0; i < student_rank.length; i++) {
                        let avg = student_rank[i].st_average;


                        let studentsWithRank = student_rank.filter(
                            (student) => student.st_average === avg

                        );
                        for (let student of studentsWithRank) {
                            student.Rank = i + 1;
                        }
                        i += studentsWithRank.length - 1;
                    }
                    let num = "";
                    //get Data sort to new array and save to localStorage
                    student_rank.forEach((student) => {
                        var id = student.id;
                        var gender = student.gender;
                        var total_all_score = student.total_all_score;
                        var average = student.st_average;
                        var rank = student.Rank;
                        if (!total_all_score) {

                            total_all_score = total_all_score.toFixed(2);
                        }

                        num++;

                        //Mention average
                        let mention = '';
                        var my = parseFloat(average);
                        if (my <= 4.9) {
                            mention = "ខ្សោយ"
                        } else if (my <= 6.49) {
                            mention = "មធ្យម"
                        } else if (my <= 7.99) {
                            mention = "ល្អបង្គួរ";
                        } else if (my <= 9.49) {
                            mention = "ល្អ";
                        } else if (my <= 10) {
                            mention = "ល្អណាស់";
                        }
                        let mention_fail = '';
                        var my = parseFloat(average);
                        if (my <= 4.9) {
                            mention_fail = "Poor"
                        } else if (my <= 6.49) {
                            mention_fail = "Average"
                        } else if (my <= 7.99) {
                            mention_fail = "Fairly Good";
                        } else if (my <= 9.49) {
                            mention_fail = "Good";
                        } else if (my <= 10) {
                            mention_fail = "Very Good";
                        }
                        let sex = '';
                        if (gender == 'ស') { sex = 'F' };
                        if (gender == 'ប') { sex = 'M' };

                        let new_gender = '';
                        if (gender == 'ស') { new_gender = 'ស' };
                        if (gender == 'ប') { new_gender = 'ប' };

                        firebase
                            .database()
                            .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                            .update({
                                average_mdec: average,
                                rank_mdec: rank,
                            });
                        let h = `
                                        <th class="border-dark text_table">ល.រ</th>
                                        <th class="border-dark text_table" style="width:15vh;">គោត្តនាម-នាម</th>
                                        <th class="border-dark text_table">ភេទ</th>
                                        <th class="border-dark text_table">ពិន្ទុសរុប</th>
                                        <th class="border-dark text_table">មធ្យមភាគ</th>
                                        <th class="border-dark text_table" style="width:8vh;">ចំណាត់ថ្នាក់</th>
                                        <th class="border-dark text_table">និទ្ទេស</th>
                                        <th class="border-dark text_table">ផ្សេងៗ</th>
        
                                        `;
                        let n = `
                                        <td class="border-dark text-center text_table">${num}</td>
                                        <td class="border-dark text-start text_table" style="width:15vh;">${id}</td>
                                        <td class="border-dark text-center text_table">${new_gender}</td>
                                        <td class="border-dark text-center text_table fw-bold">${total_all_score}</td>
                                        <td class="border-dark text-center text_table fw-bold">${average}</td>
                                        <td class="border-dark text-center text_table" style="color:red;width:8vh;">${rank}</td>
                                        <td class="border-dark text-center text_table" style="color:red;">${mention}</td>
                                        <td class="border-dark text-center text_table"></td>
                                        <td class="border-dark text-center text_table" style="display: none;">${mention_fail}${sex}</td>
                                        `;
                        table_result.innerHTML += n;
                        show_hearder_result.innerHTML = h;

                    })
                }
                if (primary_g_p2.includes(dbGrade)) {
                    datas.forEach((d) => {
                        var id = d.val().id;
                        var user_grade = d.val().user_grade;
                        var gender = d.val().gender;
                        var average = d.val().average_mdec;
                        var rank = d.val().rank_mdec;

                        var k_reading_mdec = d.val().k_reading_mdec;
                        var k_dictation_mdec = d.val().k_dictation_mdec;
                        var k_writing_mdec = d.val().k_writing_mdec;
                        var k_grammar_mdec = d.val().k_grammar_mdec;
                        var k_homework_mdec = d.val().k_homework_mdec;

                        var math_speak_mdec = d.val().math_speak_mdec;
                        var math_mdec = d.val().math_mdec;
                        var math_h_mdec = d.val().math_h_mdec;

                        var sci_mdec = d.val().sci_mdec;
                        var sci_h_mdec = d.val().sci_h_mdec;

                        var soc_h_mdec = d.val().soc_h_mdec;

                        var e_mdec = d.val().e_mdec;
                        var e_h_mdec = d.val().e_h_mdec;

                        var pe_mdec = d.val().pe_mdec;
                        var geor_mdec = d.val().geor_mdec;
                        var hist_mdec = d.val().hist_mdec;
                        var moral_mdec = d.val().moral_mdec;

                        let noSp = id.replace(/\s+/g, "");

                        if (!k_reading_mdec) { k_reading_mdec = 0 };
                        if (!k_dictation_mdec) { k_dictation_mdec = 0 };
                        if (!k_writing_mdec) { k_writing_mdec = 0 };
                        if (!k_grammar_mdec) { k_grammar_mdec = 0 };
                        if (!k_homework_mdec) { k_homework_mdec = 0 };

                        if (!math_speak_mdec) { math_speak_mdec = 0 };
                        if (!math_mdec) { math_mdec = 0 };
                        if (!math_h_mdec) { math_h_mdec = 0 };

                        if (!sci_mdec) { sci_mdec = 0 };
                        if (!sci_h_mdec) { sci_h_mdec = 0 };

                        if (!soc_h_mdec) { soc_h_mdec = 0 };

                        if (!e_mdec) { e_mdec = 0 };
                        if (!e_h_mdec) { e_h_mdec = 0 };

                        if (!pe_mdec) { pe_mdec = 0 };
                        if (!geor_mdec) { geor_mdec = 0 };
                        if (!hist_mdec) { hist_mdec = 0 };
                        if (!moral_mdec) { moral_mdec = 0 };
                        //Total all score
                        var total_all_score =
                            parseFloat(k_reading_mdec) +
                            parseFloat(k_dictation_mdec) +
                            parseFloat(k_writing_mdec) +
                            parseFloat(k_grammar_mdec) +
                            parseFloat(k_homework_mdec) +
                            parseFloat(math_speak_mdec) +
                            parseFloat(math_mdec) +
                            parseFloat(math_h_mdec) +
                            parseFloat(sci_mdec) +
                            parseFloat(sci_h_mdec) +
                            parseFloat(soc_h_mdec) +
                            parseFloat(geor_mdec) +
                            parseFloat(hist_mdec) +
                            parseFloat(moral_mdec) +
                            parseFloat(e_mdec) +
                            parseFloat(e_h_mdec) +
                            parseFloat(pe_mdec);
                        if (!total_all_score) { total_all_score = "00" }
                        //មធ្យមភាគ
                        var st_average =
                            parseFloat(total_all_score) / dbdivid;
                        st_average = st_average.toFixed(2);

                        student_rank.push({
                            id,
                            user_grade,
                            st_average,
                            total_all_score,
                            gender,
                            k_reading_mdec,
                            k_dictation_mdec,
                            k_writing_mdec,
                            k_homework_mdec,
                            math_speak_mdec,
                            math_mdec,
                            math_h_mdec,
                            sci_mdec,
                            sci_h_mdec,
                            soc_h_mdec,
                            e_mdec,
                            e_h_mdec,
                            pe_mdec,
                        })
                        setTimeout(() => {
                            //Mention average
                            let mention = '';
                            var my = parseFloat(average);
                            if (my <= 4.9) {
                                mention = "ខ្សោយ"
                            } else if (my <= 6.49) {
                                mention = "មធ្យម"
                            } else if (my <= 7.99) {
                                mention = "ល្អបង្គួរ";
                            } else if (my <= 9.49) {
                                mention = "ល្អ";
                            } else if (my <= 10) {
                                mention = "ល្អណាស់";
                            }

                            N0++;
                            let h = `
                                        <th class="border-dark">ល.រ</th>
                                        <th class="border-dark">ឈ្មោះ</th>
                                        <th class="border-dark">ភេទ</th>
                                        <th class="border-dark">អំណាន</th>
                                        <th class="border-dark">សរសេរតាមអាន</th>
                                        <th class="border-dark">តែងសេចក្តី</th>
                                        <th class="border-dark">វេយ្យាករណ៍</th>
                                        <th class="border-dark">គ.ផ្ទាល់មាត់</th>
                                        <th class="border-dark">គណិតវិទ្យា</th>
                                        <th class="border-dark">គ.កិច្ចការផ្ទះ</th>
                                        <th class="border-dark">វិទ្យាសាស្រ្ត</th>
                                        <th class="border-dark">ភូមិវិទ្យា</th>
                                        <th class="border-dark">ប្រវត្តិវិទ្យា</th>
                                        <th class="border-dark">ពលរដ្ឋ</th>
                                        <th class="border-dark">កិ.(ខ្មែរ)</th>
                                        <th class="border-dark">កិ.(វិទ្យា)</th>
                                        <th class="border-dark">កិ.(សិក្សា)</th>
                                        <th class="border-dark">កិ.(អង់គ្លេស)</th>
                                        <th class="border-dark">កីឡា</th>
                                        <th class="border-dark">អង់គ្លេស</th>
                                        <th class="border-dark">ពិន្ទុសរុប</th>
                                        <th class="border-dark">មធ្យមភាគ</th>
                                        <th class="border-dark">ចំណាត់ថ្នាក់</th>
                                        <th class="border-dark">និទ្ទេស</th>
                                        
        
                                        `
                            let n = `
                                        <td class="border-dark text-center">${N0}</td>
                                        <td class="border-dark">${id}</td>
                                        <td class="border-dark text-center">${gender}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_reading_mdec="${N0}" id="${noSp}k_reading_mdec">${k_reading_mdec}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_dictation_mdec="${N0}" id="${noSp}k_dictation_mdec">${k_dictation_mdec}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_writing_mdec="${N0}" id="${noSp}k_writing_mdec">${k_writing_mdec}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_grammar_mdec="${N0}" id="${noSp}k_grammar_mdec">${k_grammar_mdec}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_speak_mdec="${N0}" id="${noSp}math_speak_mdec">${math_speak_mdec}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_mdec="${N0}" id="${noSp}math_mdec">${math_mdec}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_h_mdec="${N0}" id="${noSp}math_h_mdec">${math_h_mdec}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-sci_mdec="${N0}" id="${noSp}sci_mdec">${sci_mdec}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-geor_mdec="${N0}" id="${noSp}geor_mdec">${geor_mdec}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-hist_mdec="${N0}" id="${noSp}hist_mdec">${hist_mdec}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-moral_mdec="${N0}" id="${noSp}moral_mdec">${moral_mdec}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_homework_mdec="${N0}" id="${noSp}k_homework_mdec">${k_homework_mdec}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-sci_h_mdec="${N0}" id="${noSp}sci_h_mdec">${sci_h_mdec}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-soc_h_mdec="${N0}" id="${noSp}soc_h_mdec">${soc_h_mdec}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-e_h_mdec="${N0}" id="${noSp}e_h_mdec">${e_h_mdec}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-pe_mdec="${N0}" id="${noSp}pe_mdec">${pe_mdec}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-e_mdec="${N0}" id="${noSp}e_mdec">${e_mdec}</td>
                                        <td class="border-dark text-center fw-bold">${total_all_score}</td>
                                        <td class="border-dark text-center fw-bold">${average}</td>
                                        <td class="border-dark text-center" style="color:red;">${rank}</td>
                                        <td class="border-dark text-center" style="color:red;">${mention}</td>
                                        `;
                            //Update data
                            setTimeout(() => {
                                document.getElementById(`${noSp}e_mdec`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}e_mdec`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            e_mdec: d,
                                        });
                                })
                                document.getElementById(`${noSp}pe_mdec`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}pe_mdec`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            pe_mdec: d,
                                        });
                                })
                                document.getElementById(`${noSp}e_h_mdec`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}e_h_mdec`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            e_h_mdec: d,
                                        });
                                })
                                document.getElementById(`${noSp}soc_h_mdec`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}soc_h_mdec`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            soc_h_mdec: d,
                                        });
                                })
                                document.getElementById(`${noSp}sci_h_mdec`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}sci_h_mdec`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            sci_h_mdec: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_homework_mdec`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_homework_mdec`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_homework_mdec: d,
                                        });
                                })
                                document.getElementById(`${noSp}sci_mdec`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}sci_mdec`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            sci_mdec: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_h_mdec`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_h_mdec`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_h_mdec: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_mdec`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_mdec`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_mdec: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_speak_mdec`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_speak_mdec`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_speak_mdec: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_grammar_mdec`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_grammar_mdec`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_grammar_mdec: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_writing_mdec`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_writing_mdec`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_writing_mdec: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_dictation_mdec`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_dictation_mdec`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_dictation_mdec: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_reading_mdec`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_reading_mdec`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_reading_mdec: d,
                                        });
                                })
                                document.getElementById(`${noSp}geor_mdec`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}geor_mdec`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            geor_mdec: d,
                                        });
                                })
                                document.getElementById(`${noSp}hist_mdec`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}hist_mdec`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            hist_mdec: d,
                                        });
                                })

                                document.getElementById(`${noSp}moral_mdec`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}moral_mdec`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            moral_mdec: d,
                                        });
                                })

                            }, 200);
                            //Key select
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mdec);
                                    const nextCell = document.querySelector(`[data-e_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mdec);
                                    const nextCell = document.querySelector(`[data-e_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mdec);
                                    const nextCell = document.querySelector(`[data-e_mdec="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mdec);
                                    const nextCell = document.querySelector(`[data-pe_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mdec);
                                    const nextCell = document.querySelector(`[data-pe_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mdec);
                                    const nextCell = document.querySelector(`[data-pe_mdec="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mdec);
                                    const nextCell = document.querySelector(`[data-e_h_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mdec);
                                    const nextCell = document.querySelector(`[data-e_h_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mdec);
                                    const nextCell = document.querySelector(`[data-e_h_mdec="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mdec);
                                    const nextCell = document.querySelector(`[data-soc_h_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mdec);
                                    const nextCell = document.querySelector(`[data-soc_h_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mdec);
                                    const nextCell = document.querySelector(`[data-soc_h_mdec="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mdec);
                                    const nextCell = document.querySelector(`[data-sci_h_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mdec);
                                    const nextCell = document.querySelector(`[data-sci_h_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mdec);
                                    const nextCell = document.querySelector(`[data-sci_h_mdec="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mdec);
                                    const nextCell = document.querySelector(`[data-k_homework_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mdec);
                                    const nextCell = document.querySelector(`[data-k_homework_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mdec);
                                    const nextCell = document.querySelector(`[data-k_homework_mdec="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mdec);
                                    const nextCell = document.querySelector(`[data-soc_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mdec);
                                    const nextCell = document.querySelector(`[data-soc_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mdec);
                                    const nextCell = document.querySelector(`[data-soc_mdec="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mdec);
                                    const nextCell = document.querySelector(`[data-sci_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mdec);
                                    const nextCell = document.querySelector(`[data-sci_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mdec);
                                    const nextCell = document.querySelector(`[data-sci_mdec="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mdec);
                                    const nextCell = document.querySelector(`[data-math_h_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mdec);
                                    const nextCell = document.querySelector(`[data-math_h_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mdec);
                                    const nextCell = document.querySelector(`[data-math_h_mdec="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mdec);
                                    const nextCell = document.querySelector(`[data-math_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mdec);
                                    const nextCell = document.querySelector(`[data-math_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mdec);
                                    const nextCell = document.querySelector(`[data-math_mdec="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mdec);
                                    const nextCell = document.querySelector(`[data-math_speak_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mdec);
                                    const nextCell = document.querySelector(`[data-math_speak_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mdec);
                                    const nextCell = document.querySelector(`[data-math_speak_mdec="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mdec);
                                    const nextCell = document.querySelector(`[data-k_writing_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mdec);
                                    const nextCell = document.querySelector(`[data-k_writing_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mdec);
                                    const nextCell = document.querySelector(`[data-k_writing_mdec="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mdec);
                                    const nextCell = document.querySelector(`[data-k_dictation_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mdec);
                                    const nextCell = document.querySelector(`[data-k_dictation_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mdec);
                                    const nextCell = document.querySelector(`[data-k_dictation_mdec="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mdec);
                                    const nextCell = document.querySelector(`[data-k_reading_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mdec);
                                    const nextCell = document.querySelector(`[data-k_reading_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mdec);
                                    const nextCell = document.querySelector(`[data-k_reading_mdec="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_grammar_mdec);
                                    const nextCell = document.querySelector(`[data-k_grammar_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_grammar_mdec);
                                    const nextCell = document.querySelector(`[data-k_grammar_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_grammar_mdec);
                                    const nextCell = document.querySelector(`[data-k_grammar_mdec="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.moral_mdec);
                                    const nextCell = document.querySelector(`[data-moral_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.moral_mdec);
                                    const nextCell = document.querySelector(`[data-moral_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.moral_mdec);
                                    const nextCell = document.querySelector(`[data-moral_mdec="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.hist_mdec);
                                    const nextCell = document.querySelector(`[data-hist_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.hist_mdec);
                                    const nextCell = document.querySelector(`[data-hist_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.hist_mdec);
                                    const nextCell = document.querySelector(`[data-hist_mdec="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.geor_mdec);
                                    const nextCell = document.querySelector(`[data-geor_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.geor_mdec);
                                    const nextCell = document.querySelector(`[data-geor_mdec="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.geor_mdec);
                                    const nextCell = document.querySelector(`[data-geor_mdec="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });

                            show_hearder.innerHTML = h;
                            table.innerHTML += n;
                            show_hearder_print.innerHTML = h;
                            table_print.innerHTML += n;

                        }, 200);

                    })
                    //Sort array and get rank number
                    student_rank.sort((a, b) => {
                        if (a.st_average > b.st_average) return -1;
                        if (a.st_average < b.st_average) return 1;
                        return 0;
                    });

                    for (let i = 0; i < student_rank.length; i++) {
                        let avg = student_rank[i].st_average;


                        let studentsWithRank = student_rank.filter(
                            (student) => student.st_average === avg

                        );
                        for (let student of studentsWithRank) {
                            student.Rank = i + 1;
                        }
                        i += studentsWithRank.length - 1;
                    }
                    let num = "";
                    //get Data sort to new array and save to localStorage
                    student_rank.forEach((student) => {
                        var id = student.id;
                        var gender = student.gender;
                        var total_all_score = student.total_all_score;
                        var average = student.st_average;
                        var rank = student.Rank;
                        if (!total_all_score) {

                            total_all_score = total_all_score.toFixed(2);
                        }

                        num++;

                        //Mention average
                        let mention = '';
                        var my = parseFloat(average);
                        if (my <= 4.9) {
                            mention = "ខ្សោយ"
                        } else if (my <= 6.49) {
                            mention = "មធ្យម"
                        } else if (my <= 7.99) {
                            mention = "ល្អបង្គួរ";
                        } else if (my <= 9.49) {
                            mention = "ល្អ";
                        } else if (my <= 10) {
                            mention = "ល្អណាស់";
                        }
                        let mention_fail = '';
                        var my = parseFloat(average);
                        if (my <= 4.9) {
                            mention_fail = "Poor"
                        } else if (my <= 6.49) {
                            mention_fail = "Average"
                        } else if (my <= 7.99) {
                            mention_fail = "Fairly Good";
                        } else if (my <= 9.49) {
                            mention_fail = "Good";
                        } else if (my <= 10) {
                            mention_fail = "Very Good";
                        }
                        let sex = '';
                        if (gender == 'ស') { sex = 'F' };
                        if (gender == 'ប') { sex = 'M' };

                        let new_gender = '';
                        if (gender == 'ស') { new_gender = 'ស' };
                        if (gender == 'ប') { new_gender = 'ប' };

                        firebase
                            .database()
                            .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                            .update({
                                average_mdec: average,
                                rank_mdec: rank,
                            });
                        let h = `
                                        <th class="border-dark text_table">ល.រ</th>
                                        <th class="border-dark text_table" style="width:15vh;">គោត្តនាម-នាម</th>
                                        <th class="border-dark text_table">ភេទ</th>
                                        <th class="border-dark text_table">ពិន្ទុសរុប</th>
                                        <th class="border-dark text_table">មធ្យមភាគ</th>
                                        <th class="border-dark text_table" style="width:8vh;">ចំណាត់ថ្នាក់</th>
                                        <th class="border-dark text_table">និទ្ទេស</th>
                                        <th class="border-dark text_table">ផ្សេងៗ</th>
        
                                        `;
                        let n = `
                                        <td class="border-dark text-center text_table">${num}</td>
                                        <td class="border-dark text-start text_table" style="width:15vh;">${id}</td>
                                        <td class="border-dark text-center text_table">${new_gender}</td>
                                        <td class="border-dark text-center text_table fw-bold">${total_all_score}</td>
                                        <td class="border-dark text-center text_table fw-bold">${average}</td>
                                        <td class="border-dark text-center text_table" style="color:red;width:8vh;">${rank}</td>
                                        <td class="border-dark text-center text_table" style="color:red;">${mention}</td>
                                        <td class="border-dark text-center text_table"></td>
                                        <td class="border-dark text-center text_table" style="display: none;">${mention_fail}${sex}</td>
                                        `;
                        table_result.innerHTML += n;
                        show_hearder_result.innerHTML = h;
                    })


                }
            }

            if (dbMonth == 'January') {
                if (primary_g_p1.includes(dbGrade)) {

                    datas.forEach((d) => {

                        var id = d.val().id;
                        var user_grade = d.val().user_grade;
                        var gender = d.val().gender;
                        var average = d.val().average_mjan;
                        var rank = d.val().rank_mjan;

                        var k_listen_mjan = d.val().k_listen_mjan;
                        var k_speak_mjan = d.val().k_speak_mjan;
                        var k_reading_mjan = d.val().k_reading_mjan;
                        var k_dictation_mjan = d.val().k_dictation_mjan;
                        var k_writing_mjan = d.val().k_writing_mjan;
                        var k_grammar_mjan = d.val().k_grammar_mjan;
                        var k_homework_mjan = d.val().k_homework_mjan;

                        var math_speak_mjan = d.val().math_speak_mjan;
                        var math_mjan = d.val().math_mjan;
                        var math_h_mjan = d.val().math_h_mjan;

                        var sci_mjan = d.val().sci_mjan;
                        var sci_h_mjan = d.val().sci_h_mjan;

                        var soc_mjan = d.val().soc_mjan;
                        var soc_h_mjan = d.val().soc_h_mjan;

                        var e_mjan = d.val().e_mjan;
                        var e_h_mjan = d.val().e_h_mjan;

                        var pe_mjan = d.val().pe_mjan;

                        let noSp = id.replace(/\s+/g, "");

                        if (!k_listen_mjan) { k_listen_mjan = 0 };
                        if (!k_speak_mjan) { k_speak_mjan = 0 };
                        if (!k_reading_mjan) { k_reading_mjan = 0 };
                        if (!k_dictation_mjan) { k_dictation_mjan = 0 };
                        if (!k_writing_mjan) { k_writing_mjan = 0 };
                        if (!k_grammar_mjan) { k_grammar_mjan = 0 };
                        if (!k_homework_mjan) { k_homework_mjan = 0 };

                        if (!math_speak_mjan) { math_speak_mjan = 0 };
                        if (!math_mjan) { math_mjan = 0 };
                        if (!math_h_mjan) { math_h_mjan = 0 };

                        if (!sci_mjan) { sci_mjan = 0 };
                        if (!sci_h_mjan) { sci_h_mjan = 0 };

                        if (!soc_mjan) { soc_mjan = 0 };
                        if (!soc_h_mjan) { soc_h_mjan = 0 };

                        if (!e_mjan) { e_mjan = 0 };
                        if (!e_h_mjan) { e_h_mjan = 0 };

                        if (!pe_mjan) { pe_mjan = 0 };

                        //Total all score
                        var total_all_score =
                            parseFloat(k_listen_mjan) +
                            parseFloat(k_speak_mjan) +
                            parseFloat(k_reading_mjan) +
                            parseFloat(k_dictation_mjan) +
                            parseFloat(k_writing_mjan) +
                            parseFloat(k_homework_mjan) +
                            parseFloat(math_speak_mjan) +
                            parseFloat(math_mjan) +
                            parseFloat(math_h_mjan) +
                            parseFloat(sci_mjan) +
                            parseFloat(sci_h_mjan) +
                            parseFloat(soc_mjan) +
                            parseFloat(soc_h_mjan) +
                            parseFloat(e_mjan) +
                            parseFloat(e_h_mjan) +
                            parseFloat(pe_mjan);
                        if (!total_all_score) { total_all_score = "00" }
                        //មធ្យមភាគ
                        var st_average =
                            parseFloat(total_all_score) / dbdivid;
                        st_average = st_average.toFixed(2);

                        student_rank.push({
                            id,
                            user_grade,
                            st_average,
                            total_all_score,
                            gender,
                            k_listen_mjan,
                            k_speak_mjan,
                            k_reading_mjan,
                            k_dictation_mjan,
                            k_writing_mjan,
                            k_homework_mjan,
                            math_speak_mjan,
                            math_mjan,
                            math_h_mjan,
                            sci_mjan,
                            sci_h_mjan,
                            soc_mjan,
                            soc_h_mjan,
                            e_mjan,
                            e_h_mjan,
                            pe_mjan,
                        })
                        setTimeout(() => {
                            N0++;

                            //Mention average
                            let mention = '';
                            var my = parseFloat(average);
                            if (my <= 4.9) {
                                mention = "ខ្សោយ"
                            } else if (my <= 6.49) {
                                mention = "មធ្យម"
                            } else if (my <= 7.99) {
                                mention = "ល្អបង្គួរ";
                            } else if (my <= 9.49) {
                                mention = "ល្អ";
                            } else if (my <= 10) {
                                mention = "ល្អណាស់";
                            }

                            let h = `
                                        <th class="border-dark">ល.រ</th>
                                        <th class="border-dark">ឈ្មោះ</th>
                                        <th class="border-dark">ភេទ</th>
                                        <th class="border-dark">ការស្តាប់</th>
                                        <th class="border-dark">ការនិយាយ</th>
                                        <th class="border-dark">អំណាន</th>
                                        <th class="border-dark">សរសេរតាមអាន</th>
                                        <th class="border-dark">តែងសេចក្តី</th>
                                        <th class="border-dark">គ.ផ្ទាល់មាត់</th>
                                        <th class="border-dark">គណិតវិទ្យា</th>
                                        <th class="border-dark">គ.កិច្ចការផ្ទះ</th>
                                        <th class="border-dark">វិទ្យាសាស្ត្រ</th>
                                        <th class="border-dark">សិក្សាសង្គម</th>
                                        <th class="border-dark">កិ.(ខ្មែរ)</th>
                                        <th class="border-dark">កិ.(វិទ្យា)</th>
                                        <th class="border-dark">កិ.(សិក្សា)</th>
                                        <th class="border-dark">កិ.(អង់គ្លេស)</th>
                                        <th class="border-dark">កីឡា</th>
                                        <th class="border-dark">អង់គ្លេស</th>
                                        <th class="border-dark">ពិន្ទុសរុប</th>
                                        <th class="border-dark">មធ្យមភាគ</th>
                                        <th class="border-dark">ចំណាត់ថ្នាក់</th>
                                        <th class="border-dark">និទ្ទេស</th>
                                        
        
                                        `
                            let n = `
                                        <td class="border-dark text-center">${N0}</td>
                                        <td class="border-dark">${id}</td>
                                        <td class="border-dark text-center"">${gender}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_listen_mjan="${N0}" id="${noSp}k_listen_mjan">${k_listen_mjan}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_speak_mjan="${N0}" id="${noSp}k_speak_mjan">${k_speak_mjan}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_reading_mjan="${N0}" id="${noSp}k_reading_mjan">${k_reading_mjan}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_dictation_mjan="${N0}" id="${noSp}k_dictation_mjan">${k_dictation_mjan}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_writing_mjan="${N0}" id="${noSp}k_writing_mjan">${k_writing_mjan}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_speak_mjan="${N0}" id="${noSp}math_speak_mjan">${math_speak_mjan}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_mjan="${N0}" id="${noSp}math_mjan">${math_mjan}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_h_mjan="${N0}" id="${noSp}math_h_mjan">${math_h_mjan}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-sci_mjan="${N0}" id="${noSp}sci_mjan">${sci_mjan}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-soc_mjan="${N0}" id="${noSp}soc_mjan">${soc_mjan}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_homework_mjan="${N0}" id="${noSp}k_homework_mjan">${k_homework_mjan}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-sci_h_mjan="${N0}" id="${noSp}sci_h_mjan">${sci_h_mjan}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-soc_h_mjan="${N0}" id="${noSp}soc_h_mjan">${soc_h_mjan}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-e_h_mjan="${N0}" id="${noSp}e_h_mjan">${e_h_mjan}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-pe_mjan="${N0}" id="${noSp}pe_mjan">${pe_mjan}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-e_mjan="${N0}" id="${noSp}e_mjan">${e_mjan}</td>
                                        <td class="border-dark text-center fw-bold">${total_all_score}</td>
                                        <td class="border-dark text-center fw-bold">${average}</td>
                                        <td class="border-dark text-center" style="color:red;">${rank}</td>
                                        <td class="border-dark text-center" style="color:red;">${mention}</td>
                                        `;
                            //Update data
                            setTimeout(() => {
                                document.getElementById(`${noSp}e_mjan`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}e_mjan`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            e_mjan: d,
                                        });
                                })
                                document.getElementById(`${noSp}pe_mjan`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}pe_mjan`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            pe_mjan: d,
                                        });
                                })
                                document.getElementById(`${noSp}e_h_mjan`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}e_h_mjan`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            e_h_mjan: d,
                                        });
                                })
                                document.getElementById(`${noSp}soc_h_mjan`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}soc_h_mjan`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            soc_h_mjan: d,
                                        });
                                })
                                document.getElementById(`${noSp}sci_h_mjan`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}sci_h_mjan`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            sci_h_mjan: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_homework_mjan`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_homework_mjan`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_homework_mjan: d,
                                        });
                                })
                                document.getElementById(`${noSp}soc_mjan`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}soc_mjan`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            soc_mjan: d,
                                        });
                                })
                                document.getElementById(`${noSp}sci_mjan`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}sci_mjan`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            sci_mjan: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_h_mjan`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_h_mjan`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_h_mjan: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_mjan`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_mjan`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_mjan: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_speak_mjan`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_speak_mjan`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_speak_mjan: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_writing_mjan`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_writing_mjan`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_writing_mjan: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_dictation_mjan`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_dictation_mjan`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_dictation_mjan: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_reading_mjan`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_reading_mjan`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_reading_mjan: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_speak_mjan`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_speak_mjan`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_speak_mjan: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_listen_mjan`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_listen_mjan`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_listen_mjan: d,
                                        });
                                })

                            }, 200);
                            //Key select
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mjan);
                                    const nextCell = document.querySelector(`[data-e_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mjan);
                                    const nextCell = document.querySelector(`[data-e_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mjan);
                                    const nextCell = document.querySelector(`[data-e_mjan="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mjan);
                                    const nextCell = document.querySelector(`[data-pe_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mjan);
                                    const nextCell = document.querySelector(`[data-pe_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mjan);
                                    const nextCell = document.querySelector(`[data-pe_mjan="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mjan);
                                    const nextCell = document.querySelector(`[data-e_h_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mjan);
                                    const nextCell = document.querySelector(`[data-e_h_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mjan);
                                    const nextCell = document.querySelector(`[data-e_h_mjan="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mjan);
                                    const nextCell = document.querySelector(`[data-soc_h_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mjan);
                                    const nextCell = document.querySelector(`[data-soc_h_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mjan);
                                    const nextCell = document.querySelector(`[data-soc_h_mjan="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mjan);
                                    const nextCell = document.querySelector(`[data-sci_h_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mjan);
                                    const nextCell = document.querySelector(`[data-sci_h_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mjan);
                                    const nextCell = document.querySelector(`[data-sci_h_mjan="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mjan);
                                    const nextCell = document.querySelector(`[data-k_homework_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mjan);
                                    const nextCell = document.querySelector(`[data-k_homework_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mjan);
                                    const nextCell = document.querySelector(`[data-k_homework_mjan="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mjan);
                                    const nextCell = document.querySelector(`[data-soc_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mjan);
                                    const nextCell = document.querySelector(`[data-soc_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mjan);
                                    const nextCell = document.querySelector(`[data-soc_mjan="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mjan);
                                    const nextCell = document.querySelector(`[data-sci_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mjan);
                                    const nextCell = document.querySelector(`[data-sci_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mjan);
                                    const nextCell = document.querySelector(`[data-sci_mjan="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mjan);
                                    const nextCell = document.querySelector(`[data-math_h_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mjan);
                                    const nextCell = document.querySelector(`[data-math_h_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mjan);
                                    const nextCell = document.querySelector(`[data-math_h_mjan="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mjan);
                                    const nextCell = document.querySelector(`[data-math_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mjan);
                                    const nextCell = document.querySelector(`[data-math_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mjan);
                                    const nextCell = document.querySelector(`[data-math_mjan="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mjan);
                                    const nextCell = document.querySelector(`[data-math_speak_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mjan);
                                    const nextCell = document.querySelector(`[data-math_speak_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mjan);
                                    const nextCell = document.querySelector(`[data-math_speak_mjan="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mjan);
                                    const nextCell = document.querySelector(`[data-k_writing_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mjan);
                                    const nextCell = document.querySelector(`[data-k_writing_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mjan);
                                    const nextCell = document.querySelector(`[data-k_writing_mjan="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mjan);
                                    const nextCell = document.querySelector(`[data-k_dictation_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mjan);
                                    const nextCell = document.querySelector(`[data-k_dictation_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mjan);
                                    const nextCell = document.querySelector(`[data-k_dictation_mjan="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mjan);
                                    const nextCell = document.querySelector(`[data-k_reading_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mjan);
                                    const nextCell = document.querySelector(`[data-k_reading_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mjan);
                                    const nextCell = document.querySelector(`[data-k_reading_mjan="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_speak_mjan);
                                    const nextCell = document.querySelector(`[data-k_speak_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_speak_mjan);
                                    const nextCell = document.querySelector(`[data-k_speak_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_speak_mjan);
                                    const nextCell = document.querySelector(`[data-k_speak_mjan="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_listen_mjan);
                                    const nextCell = document.querySelector(`[data-k_listen_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_listen_mjan);
                                    const nextCell = document.querySelector(`[data-k_listen_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_listen_mjan);
                                    const nextCell = document.querySelector(`[data-k_listen_mjan="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });


                            show_hearder.innerHTML = h;
                            table.innerHTML += n;
                            show_hearder_print.innerHTML = h;
                            table_print.innerHTML += n;

                        }, 200);

                    })
                    //Sort array and get rank number
                    student_rank.sort((a, b) => {
                        if (a.st_average > b.st_average) return -1;
                        if (a.st_average < b.st_average) return 1;
                        return 0;
                    });

                    for (let i = 0; i < student_rank.length; i++) {
                        let avg = student_rank[i].st_average;


                        let studentsWithRank = student_rank.filter(
                            (student) => student.st_average === avg

                        );
                        for (let student of studentsWithRank) {
                            student.Rank = i + 1;
                        }
                        i += studentsWithRank.length - 1;
                    }
                    let num = "";
                    //get Data sort to new array and save to localStorage
                    student_rank.forEach((student) => {
                        var id = student.id;
                        var gender = student.gender;
                        var total_all_score = student.total_all_score;
                        var average = student.st_average;
                        var rank = student.Rank;
                        if (!total_all_score) {

                            total_all_score = total_all_score.toFixed(2);
                        }

                        num++;

                        //Mention average
                        let mention = '';
                        var my = parseFloat(average);
                        if (my <= 4.9) {
                            mention = "ខ្សោយ"
                        } else if (my <= 6.49) {
                            mention = "មធ្យម"
                        } else if (my <= 7.99) {
                            mention = "ល្អបង្គួរ";
                        } else if (my <= 9.49) {
                            mention = "ល្អ";
                        } else if (my <= 10) {
                            mention = "ល្អណាស់";
                        }
                        let mention_fail = '';
                        var my = parseFloat(average);
                        if (my <= 4.9) {
                            mention_fail = "Poor"
                        } else if (my <= 6.49) {
                            mention_fail = "Average"
                        } else if (my <= 7.99) {
                            mention_fail = "Fairly Good";
                        } else if (my <= 9.49) {
                            mention_fail = "Good";
                        } else if (my <= 10) {
                            mention_fail = "Very Good";
                        }
                        let sex = '';
                        if (gender == 'ស') { sex = 'F' };
                        if (gender == 'ប') { sex = 'M' };

                        let new_gender = '';
                        if (gender == 'ស') { new_gender = 'ស' };
                        if (gender == 'ប') { new_gender = 'ប' };

                        firebase
                            .database()
                            .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                            .update({
                                average_mjan: average,
                                rank_mjan: rank,
                            });
                        let h = `
                                        <th class="border-dark text_table">ល.រ</th>
                                        <th class="border-dark text_table" style="width:15vh;">គោត្តនាម-នាម</th>
                                        <th class="border-dark text_table">ភេទ</th>
                                        <th class="border-dark text_table">ពិន្ទុសរុប</th>
                                        <th class="border-dark text_table">មធ្យមភាគ</th>
                                        <th class="border-dark text_table" style="width:8vh;">ចំណាត់ថ្នាក់</th>
                                        <th class="border-dark text_table">និទ្ទេស</th>
                                        <th class="border-dark text_table">ផ្សេងៗ</th>
        
                                        `;
                        let n = `
                                        <td class="border-dark text-center text_table">${num}</td>
                                        <td class="border-dark text-start text_table" style="width:15vh;">${id}</td>
                                        <td class="border-dark text-center text_table">${new_gender}</td>
                                        <td class="border-dark text-center text_table fw-bold">${total_all_score}</td>
                                        <td class="border-dark text-center text_table fw-bold">${average}</td>
                                        <td class="border-dark text-center text_table" style="color:red;width:8vh;">${rank}</td>
                                        <td class="border-dark text-center text_table" style="color:red;">${mention}</td>
                                        <td class="border-dark text-center text_table"></td>
                                        <td class="border-dark text-center text_table" style="display: none;">${mention_fail}${sex}</td>
                                        `;
                        table_result.innerHTML += n;
                        show_hearder_result.innerHTML = h;

                    })
                }
                if (primary_g_p2.includes(dbGrade)) {
                    datas.forEach((d) => {
                        var id = d.val().id;
                        var user_grade = d.val().user_grade;
                        var gender = d.val().gender;
                        var average = d.val().average_mjan;
                        var rank = d.val().rank_mjan;

                        var k_reading_mjan = d.val().k_reading_mjan;
                        var k_dictation_mjan = d.val().k_dictation_mjan;
                        var k_writing_mjan = d.val().k_writing_mjan;
                        var k_grammar_mjan = d.val().k_grammar_mjan;
                        var k_homework_mjan = d.val().k_homework_mjan;

                        var math_speak_mjan = d.val().math_speak_mjan;
                        var math_mjan = d.val().math_mjan;
                        var math_h_mjan = d.val().math_h_mjan;

                        var sci_mjan = d.val().sci_mjan;
                        var sci_h_mjan = d.val().sci_h_mjan;

                        var soc_h_mjan = d.val().soc_h_mjan;

                        var e_mjan = d.val().e_mjan;
                        var e_h_mjan = d.val().e_h_mjan;

                        var pe_mjan = d.val().pe_mjan;
                        var geor_mjan = d.val().geor_mjan;
                        var hist_mjan = d.val().hist_mjan;
                        var moral_mjan = d.val().moral_mjan;

                        let noSp = id.replace(/\s+/g, "");

                        if (!k_reading_mjan) { k_reading_mjan = 0 };
                        if (!k_dictation_mjan) { k_dictation_mjan = 0 };
                        if (!k_writing_mjan) { k_writing_mjan = 0 };
                        if (!k_grammar_mjan) { k_grammar_mjan = 0 };
                        if (!k_homework_mjan) { k_homework_mjan = 0 };

                        if (!math_speak_mjan) { math_speak_mjan = 0 };
                        if (!math_mjan) { math_mjan = 0 };
                        if (!math_h_mjan) { math_h_mjan = 0 };

                        if (!sci_mjan) { sci_mjan = 0 };
                        if (!sci_h_mjan) { sci_h_mjan = 0 };

                        if (!soc_h_mjan) { soc_h_mjan = 0 };

                        if (!e_mjan) { e_mjan = 0 };
                        if (!e_h_mjan) { e_h_mjan = 0 };

                        if (!pe_mjan) { pe_mjan = 0 };
                        if (!geor_mjan) { geor_mjan = 0 };
                        if (!hist_mjan) { hist_mjan = 0 };
                        if (!moral_mjan) { moral_mjan = 0 };
                        //Total all score
                        var total_all_score =
                            parseFloat(k_reading_mjan) +
                            parseFloat(k_dictation_mjan) +
                            parseFloat(k_writing_mjan) +
                            parseFloat(k_grammar_mjan) +
                            parseFloat(k_homework_mjan) +
                            parseFloat(math_speak_mjan) +
                            parseFloat(math_mjan) +
                            parseFloat(math_h_mjan) +
                            parseFloat(sci_mjan) +
                            parseFloat(sci_h_mjan) +
                            parseFloat(soc_h_mjan) +
                            parseFloat(geor_mjan) +
                            parseFloat(hist_mjan) +
                            parseFloat(moral_mjan) +
                            parseFloat(e_mjan) +
                            parseFloat(e_h_mjan) +
                            parseFloat(pe_mjan);
                        if (!total_all_score) { total_all_score = "00" }
                        //មធ្យមភាគ
                        var st_average =
                            parseFloat(total_all_score) / dbdivid;
                        st_average = st_average.toFixed(2);

                        student_rank.push({
                            id,
                            user_grade,
                            st_average,
                            total_all_score,
                            gender,
                            k_reading_mjan,
                            k_dictation_mjan,
                            k_writing_mjan,
                            k_homework_mjan,
                            math_speak_mjan,
                            math_mjan,
                            math_h_mjan,
                            sci_mjan,
                            sci_h_mjan,
                            soc_h_mjan,
                            e_mjan,
                            e_h_mjan,
                            pe_mjan,
                        })
                        setTimeout(() => {
                            //Mention average
                            let mention = '';
                            var my = parseFloat(average);
                            if (my <= 4.9) {
                                mention = "ខ្សោយ"
                            } else if (my <= 6.49) {
                                mention = "មធ្យម"
                            } else if (my <= 7.99) {
                                mention = "ល្អបង្គួរ";
                            } else if (my <= 9.49) {
                                mention = "ល្អ";
                            } else if (my <= 10) {
                                mention = "ល្អណាស់";
                            }

                            N0++;
                            let h = `
                                        <th class="border-dark">ល.រ</th>
                                        <th class="border-dark">ឈ្មោះ</th>
                                        <th class="border-dark">ភេទ</th>
                                        <th class="border-dark">អំណាន</th>
                                        <th class="border-dark">សរសេរតាមអាន</th>
                                        <th class="border-dark">តែងសេចក្តី</th>
                                        <th class="border-dark">វេយ្យាករណ៍</th>
                                        <th class="border-dark">គ.ផ្ទាល់មាត់</th>
                                        <th class="border-dark">គណិតវិទ្យា</th>
                                        <th class="border-dark">គ.កិច្ចការផ្ទះ</th>
                                        <th class="border-dark">វិទ្យាសាស្រ្ត</th>
                                        <th class="border-dark">ភូមិវិទ្យា</th>
                                        <th class="border-dark">ប្រវត្តិវិទ្យា</th>
                                        <th class="border-dark">ពលរដ្ឋ</th>
                                        <th class="border-dark">កិ.(ខ្មែរ)</th>
                                        <th class="border-dark">កិ.(វិទ្យា)</th>
                                        <th class="border-dark">កិ.(សិក្សា)</th>
                                        <th class="border-dark">កិ.(អង់គ្លេស)</th>
                                        <th class="border-dark">កីឡា</th>
                                        <th class="border-dark">អង់គ្លេស</th>
                                        <th class="border-dark">ពិន្ទុសរុប</th>
                                        <th class="border-dark">មធ្យមភាគ</th>
                                        <th class="border-dark">ចំណាត់ថ្នាក់</th>
                                        <th class="border-dark">និទ្ទេស</th>
                                        
        
                                        `
                            let n = `
                                        <td class="border-dark text-center">${N0}</td>
                                        <td class="border-dark">${id}</td>
                                        <td class="border-dark text-center">${gender}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_reading_mjan="${N0}" id="${noSp}k_reading_mjan">${k_reading_mjan}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_dictation_mjan="${N0}" id="${noSp}k_dictation_mjan">${k_dictation_mjan}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_writing_mjan="${N0}" id="${noSp}k_writing_mjan">${k_writing_mjan}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_grammar_mjan="${N0}" id="${noSp}k_grammar_mjan">${k_grammar_mjan}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_speak_mjan="${N0}" id="${noSp}math_speak_mjan">${math_speak_mjan}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_mjan="${N0}" id="${noSp}math_mjan">${math_mjan}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_h_mjan="${N0}" id="${noSp}math_h_mjan">${math_h_mjan}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-sci_mjan="${N0}" id="${noSp}sci_mjan">${sci_mjan}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-geor_mjan="${N0}" id="${noSp}geor_mjan">${geor_mjan}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-hist_mjan="${N0}" id="${noSp}hist_mjan">${hist_mjan}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-moral_mjan="${N0}" id="${noSp}moral_mjan">${moral_mjan}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_homework_mjan="${N0}" id="${noSp}k_homework_mjan">${k_homework_mjan}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-sci_h_mjan="${N0}" id="${noSp}sci_h_mjan">${sci_h_mjan}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-soc_h_mjan="${N0}" id="${noSp}soc_h_mjan">${soc_h_mjan}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-e_h_mjan="${N0}" id="${noSp}e_h_mjan">${e_h_mjan}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-pe_mjan="${N0}" id="${noSp}pe_mjan">${pe_mjan}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-e_mjan="${N0}" id="${noSp}e_mjan">${e_mjan}</td>
                                        <td class="border-dark text-center fw-bold">${total_all_score}</td>
                                        <td class="border-dark text-center fw-bold">${average}</td>
                                        <td class="border-dark text-center" style="color:red;">${rank}</td>
                                        <td class="border-dark text-center" style="color:red;">${mention}</td>
                                        `;
                            //Update data
                            setTimeout(() => {
                                document.getElementById(`${noSp}e_mjan`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}e_mjan`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            e_mjan: d,
                                        });
                                })
                                document.getElementById(`${noSp}pe_mjan`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}pe_mjan`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            pe_mjan: d,
                                        });
                                })
                                document.getElementById(`${noSp}e_h_mjan`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}e_h_mjan`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            e_h_mjan: d,
                                        });
                                })
                                document.getElementById(`${noSp}soc_h_mjan`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}soc_h_mjan`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            soc_h_mjan: d,
                                        });
                                })
                                document.getElementById(`${noSp}sci_h_mjan`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}sci_h_mjan`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            sci_h_mjan: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_homework_mjan`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_homework_mjan`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_homework_mjan: d,
                                        });
                                })
                                document.getElementById(`${noSp}sci_mjan`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}sci_mjan`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            sci_mjan: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_h_mjan`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_h_mjan`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_h_mjan: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_mjan`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_mjan`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_mjan: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_speak_mjan`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_speak_mjan`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_speak_mjan: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_grammar_mjan`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_grammar_mjan`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_grammar_mjan: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_writing_mjan`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_writing_mjan`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_writing_mjan: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_dictation_mjan`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_dictation_mjan`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_dictation_mjan: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_reading_mjan`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_reading_mjan`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_reading_mjan: d,
                                        });
                                })
                                document.getElementById(`${noSp}geor_mjan`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}geor_mjan`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            geor_mjan: d,
                                        });
                                })
                                document.getElementById(`${noSp}hist_mjan`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}hist_mjan`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            hist_mjan: d,
                                        });
                                })

                                document.getElementById(`${noSp}moral_mjan`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}moral_mjan`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            moral_mjan: d,
                                        });
                                })

                            }, 200);
                            //Key select
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mjan);
                                    const nextCell = document.querySelector(`[data-e_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mjan);
                                    const nextCell = document.querySelector(`[data-e_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mjan);
                                    const nextCell = document.querySelector(`[data-e_mjan="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mjan);
                                    const nextCell = document.querySelector(`[data-pe_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mjan);
                                    const nextCell = document.querySelector(`[data-pe_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mjan);
                                    const nextCell = document.querySelector(`[data-pe_mjan="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mjan);
                                    const nextCell = document.querySelector(`[data-e_h_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mjan);
                                    const nextCell = document.querySelector(`[data-e_h_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mjan);
                                    const nextCell = document.querySelector(`[data-e_h_mjan="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mjan);
                                    const nextCell = document.querySelector(`[data-soc_h_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mjan);
                                    const nextCell = document.querySelector(`[data-soc_h_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mjan);
                                    const nextCell = document.querySelector(`[data-soc_h_mjan="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mjan);
                                    const nextCell = document.querySelector(`[data-sci_h_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mjan);
                                    const nextCell = document.querySelector(`[data-sci_h_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mjan);
                                    const nextCell = document.querySelector(`[data-sci_h_mjan="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mjan);
                                    const nextCell = document.querySelector(`[data-k_homework_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mjan);
                                    const nextCell = document.querySelector(`[data-k_homework_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mjan);
                                    const nextCell = document.querySelector(`[data-k_homework_mjan="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mjan);
                                    const nextCell = document.querySelector(`[data-soc_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mjan);
                                    const nextCell = document.querySelector(`[data-soc_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mjan);
                                    const nextCell = document.querySelector(`[data-soc_mjan="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mjan);
                                    const nextCell = document.querySelector(`[data-sci_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mjan);
                                    const nextCell = document.querySelector(`[data-sci_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mjan);
                                    const nextCell = document.querySelector(`[data-sci_mjan="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mjan);
                                    const nextCell = document.querySelector(`[data-math_h_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mjan);
                                    const nextCell = document.querySelector(`[data-math_h_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mjan);
                                    const nextCell = document.querySelector(`[data-math_h_mjan="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mjan);
                                    const nextCell = document.querySelector(`[data-math_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mjan);
                                    const nextCell = document.querySelector(`[data-math_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mjan);
                                    const nextCell = document.querySelector(`[data-math_mjan="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mjan);
                                    const nextCell = document.querySelector(`[data-math_speak_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mjan);
                                    const nextCell = document.querySelector(`[data-math_speak_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mjan);
                                    const nextCell = document.querySelector(`[data-math_speak_mjan="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mjan);
                                    const nextCell = document.querySelector(`[data-k_writing_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mjan);
                                    const nextCell = document.querySelector(`[data-k_writing_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mjan);
                                    const nextCell = document.querySelector(`[data-k_writing_mjan="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mjan);
                                    const nextCell = document.querySelector(`[data-k_dictation_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mjan);
                                    const nextCell = document.querySelector(`[data-k_dictation_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mjan);
                                    const nextCell = document.querySelector(`[data-k_dictation_mjan="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mjan);
                                    const nextCell = document.querySelector(`[data-k_reading_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mjan);
                                    const nextCell = document.querySelector(`[data-k_reading_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mjan);
                                    const nextCell = document.querySelector(`[data-k_reading_mjan="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_grammar_mjan);
                                    const nextCell = document.querySelector(`[data-k_grammar_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_grammar_mjan);
                                    const nextCell = document.querySelector(`[data-k_grammar_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_grammar_mjan);
                                    const nextCell = document.querySelector(`[data-k_grammar_mjan="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.moral_mjan);
                                    const nextCell = document.querySelector(`[data-moral_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.moral_mjan);
                                    const nextCell = document.querySelector(`[data-moral_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.moral_mjan);
                                    const nextCell = document.querySelector(`[data-moral_mjan="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.hist_mjan);
                                    const nextCell = document.querySelector(`[data-hist_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.hist_mjan);
                                    const nextCell = document.querySelector(`[data-hist_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.hist_mjan);
                                    const nextCell = document.querySelector(`[data-hist_mjan="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.geor_mjan);
                                    const nextCell = document.querySelector(`[data-geor_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.geor_mjan);
                                    const nextCell = document.querySelector(`[data-geor_mjan="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.geor_mjan);
                                    const nextCell = document.querySelector(`[data-geor_mjan="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });

                            show_hearder.innerHTML = h;
                            table.innerHTML += n;
                            show_hearder_print.innerHTML = h;
                            table_print.innerHTML += n;

                        }, 200);

                    })
                    //Sort array and get rank number
                    student_rank.sort((a, b) => {
                        if (a.st_average > b.st_average) return -1;
                        if (a.st_average < b.st_average) return 1;
                        return 0;
                    });

                    for (let i = 0; i < student_rank.length; i++) {
                        let avg = student_rank[i].st_average;


                        let studentsWithRank = student_rank.filter(
                            (student) => student.st_average === avg

                        );
                        for (let student of studentsWithRank) {
                            student.Rank = i + 1;
                        }
                        i += studentsWithRank.length - 1;
                    }
                    let num = "";
                    //get Data sort to new array and save to localStorage
                    student_rank.forEach((student) => {
                        var id = student.id;
                        var gender = student.gender;
                        var total_all_score = student.total_all_score;
                        var average = student.st_average;
                        var rank = student.Rank;
                        if (!total_all_score) {

                            total_all_score = total_all_score.toFixed(2);
                        }

                        num++;

                        //Mention average
                        let mention = '';
                        var my = parseFloat(average);
                        if (my <= 4.9) {
                            mention = "ខ្សោយ"
                        } else if (my <= 6.49) {
                            mention = "មធ្យម"
                        } else if (my <= 7.99) {
                            mention = "ល្អបង្គួរ";
                        } else if (my <= 9.49) {
                            mention = "ល្អ";
                        } else if (my <= 10) {
                            mention = "ល្អណាស់";
                        }
                        let mention_fail = '';
                        var my = parseFloat(average);
                        if (my <= 4.9) {
                            mention_fail = "Poor"
                        } else if (my <= 6.49) {
                            mention_fail = "Average"
                        } else if (my <= 7.99) {
                            mention_fail = "Fairly Good";
                        } else if (my <= 9.49) {
                            mention_fail = "Good";
                        } else if (my <= 10) {
                            mention_fail = "Very Good";
                        }
                        let sex = '';
                        if (gender == 'ស') { sex = 'F' };
                        if (gender == 'ប') { sex = 'M' };

                        let new_gender = '';
                        if (gender == 'ស') { new_gender = 'ស' };
                        if (gender == 'ប') { new_gender = 'ប' };

                        firebase
                            .database()
                            .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                            .update({
                                average_mjan: average,
                                rank_mjan: rank,
                            });
                        let h = `
                                        <th class="border-dark text_table">ល.រ</th>
                                        <th class="border-dark text_table" style="width:15vh;">គោត្តនាម-នាម</th>
                                        <th class="border-dark text_table">ភេទ</th>
                                        <th class="border-dark text_table">ពិន្ទុសរុប</th>
                                        <th class="border-dark text_table">មធ្យមភាគ</th>
                                        <th class="border-dark text_table" style="width:8vh;">ចំណាត់ថ្នាក់</th>
                                        <th class="border-dark text_table">និទ្ទេស</th>
                                        <th class="border-dark text_table">ផ្សេងៗ</th>
        
                                        `;
                        let n = `
                                        <td class="border-dark text-center text_table">${num}</td>
                                        <td class="border-dark text-start text_table" style="width:15vh;">${id}</td>
                                        <td class="border-dark text-center text_table">${new_gender}</td>
                                        <td class="border-dark text-center text_table fw-bold">${total_all_score}</td>
                                        <td class="border-dark text-center text_table fw-bold">${average}</td>
                                        <td class="border-dark text-center text_table" style="color:red;width:8vh;">${rank}</td>
                                        <td class="border-dark text-center text_table" style="color:red;">${mention}</td>
                                        <td class="border-dark text-center text_table"></td>
                                        <td class="border-dark text-center text_table" style="display: none;">${mention_fail}${sex}</td>
                                        `;
                        table_result.innerHTML += n;
                        show_hearder_result.innerHTML = h;
                    })


                }
            }

            if (dbMonth == 'February') {
                if (primary_g_p1.includes(dbGrade)) {

                    datas.forEach((d) => {

                        var id = d.val().id;
                        var user_grade = d.val().user_grade;
                        var gender = d.val().gender;
                        var average = d.val().average_mfeb;
                        var rank = d.val().rank_mfeb;

                        var k_listen_mfeb = d.val().k_listen_mfeb;
                        var k_speak_mfeb = d.val().k_speak_mfeb;
                        var k_reading_mfeb = d.val().k_reading_mfeb;
                        var k_dictation_mfeb = d.val().k_dictation_mfeb;
                        var k_writing_mfeb = d.val().k_writing_mfeb;
                        var k_grammar_mfeb = d.val().k_grammar_mfeb;
                        var k_homework_mfeb = d.val().k_homework_mfeb;

                        var math_speak_mfeb = d.val().math_speak_mfeb;
                        var math_mfeb = d.val().math_mfeb;
                        var math_h_mfeb = d.val().math_h_mfeb;

                        var sci_mfeb = d.val().sci_mfeb;
                        var sci_h_mfeb = d.val().sci_h_mfeb;

                        var soc_mfeb = d.val().soc_mfeb;
                        var soc_h_mfeb = d.val().soc_h_mfeb;

                        var e_mfeb = d.val().e_mfeb;
                        var e_h_mfeb = d.val().e_h_mfeb;

                        var pe_mfeb = d.val().pe_mfeb;

                        let noSp = id.replace(/\s+/g, "");

                        if (!k_listen_mfeb) { k_listen_mfeb = 0 };
                        if (!k_speak_mfeb) { k_speak_mfeb = 0 };
                        if (!k_reading_mfeb) { k_reading_mfeb = 0 };
                        if (!k_dictation_mfeb) { k_dictation_mfeb = 0 };
                        if (!k_writing_mfeb) { k_writing_mfeb = 0 };
                        if (!k_grammar_mfeb) { k_grammar_mfeb = 0 };
                        if (!k_homework_mfeb) { k_homework_mfeb = 0 };

                        if (!math_speak_mfeb) { math_speak_mfeb = 0 };
                        if (!math_mfeb) { math_mfeb = 0 };
                        if (!math_h_mfeb) { math_h_mfeb = 0 };

                        if (!sci_mfeb) { sci_mfeb = 0 };
                        if (!sci_h_mfeb) { sci_h_mfeb = 0 };

                        if (!soc_mfeb) { soc_mfeb = 0 };
                        if (!soc_h_mfeb) { soc_h_mfeb = 0 };

                        if (!e_mfeb) { e_mfeb = 0 };
                        if (!e_h_mfeb) { e_h_mfeb = 0 };

                        if (!pe_mfeb) { pe_mfeb = 0 };

                        //Total all score
                        var total_all_score =
                            parseFloat(k_listen_mfeb) +
                            parseFloat(k_speak_mfeb) +
                            parseFloat(k_reading_mfeb) +
                            parseFloat(k_dictation_mfeb) +
                            parseFloat(k_writing_mfeb) +
                            parseFloat(k_homework_mfeb) +
                            parseFloat(math_speak_mfeb) +
                            parseFloat(math_mfeb) +
                            parseFloat(math_h_mfeb) +
                            parseFloat(sci_mfeb) +
                            parseFloat(sci_h_mfeb) +
                            parseFloat(soc_mfeb) +
                            parseFloat(soc_h_mfeb) +
                            parseFloat(e_mfeb) +
                            parseFloat(e_h_mfeb) +
                            parseFloat(pe_mfeb);
                        if (!total_all_score) { total_all_score = "00" }
                        //មធ្យមភាគ
                        var st_average =
                            parseFloat(total_all_score) / dbdivid;
                        st_average = st_average.toFixed(2);

                        student_rank.push({
                            id,
                            user_grade,
                            st_average,
                            total_all_score,
                            gender,
                            k_listen_mfeb,
                            k_speak_mfeb,
                            k_reading_mfeb,
                            k_dictation_mfeb,
                            k_writing_mfeb,
                            k_homework_mfeb,
                            math_speak_mfeb,
                            math_mfeb,
                            math_h_mfeb,
                            sci_mfeb,
                            sci_h_mfeb,
                            soc_mfeb,
                            soc_h_mfeb,
                            e_mfeb,
                            e_h_mfeb,
                            pe_mfeb,
                        })
                        setTimeout(() => {
                            N0++;

                            //Mention average
                            let mention = '';
                            var my = parseFloat(average);
                            if (my <= 4.9) {
                                mention = "ខ្សោយ"
                            } else if (my <= 6.49) {
                                mention = "មធ្យម"
                            } else if (my <= 7.99) {
                                mention = "ល្អបង្គួរ";
                            } else if (my <= 9.49) {
                                mention = "ល្អ";
                            } else if (my <= 10) {
                                mention = "ល្អណាស់";
                            }

                            let h = `
                                        <th class="border-dark">ល.រ</th>
                                        <th class="border-dark">ឈ្មោះ</th>
                                        <th class="border-dark">ភេទ</th>
                                        <th class="border-dark">ការស្តាប់</th>
                                        <th class="border-dark">ការនិយាយ</th>
                                        <th class="border-dark">អំណាន</th>
                                        <th class="border-dark">សរសេរតាមអាន</th>
                                        <th class="border-dark">តែងសេចក្តី</th>
                                        <th class="border-dark">គ.ផ្ទាល់មាត់</th>
                                        <th class="border-dark">គណិតវិទ្យា</th>
                                        <th class="border-dark">គ.កិច្ចការផ្ទះ</th>
                                        <th class="border-dark">វិទ្យាសាស្ត្រ</th>
                                        <th class="border-dark">សិក្សាសង្គម</th>
                                        <th class="border-dark">កិ.(ខ្មែរ)</th>
                                        <th class="border-dark">កិ.(វិទ្យា)</th>
                                        <th class="border-dark">កិ.(សិក្សា)</th>
                                        <th class="border-dark">កិ.(អង់គ្លេស)</th>
                                        <th class="border-dark">កីឡា</th>
                                        <th class="border-dark">អង់គ្លេស</th>
                                        <th class="border-dark">ពិន្ទុសរុប</th>
                                        <th class="border-dark">មធ្យមភាគ</th>
                                        <th class="border-dark">ចំណាត់ថ្នាក់</th>
                                        <th class="border-dark">និទ្ទេស</th>
                                        
        
                                        `
                            let n = `
                                        <td class="border-dark text-center">${N0}</td>
                                        <td class="border-dark">${id}</td>
                                        <td class="border-dark text-center"">${gender}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_listen_mfeb="${N0}" id="${noSp}k_listen_mfeb">${k_listen_mfeb}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_speak_mfeb="${N0}" id="${noSp}k_speak_mfeb">${k_speak_mfeb}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_reading_mfeb="${N0}" id="${noSp}k_reading_mfeb">${k_reading_mfeb}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_dictation_mfeb="${N0}" id="${noSp}k_dictation_mfeb">${k_dictation_mfeb}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_writing_mfeb="${N0}" id="${noSp}k_writing_mfeb">${k_writing_mfeb}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_speak_mfeb="${N0}" id="${noSp}math_speak_mfeb">${math_speak_mfeb}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_mfeb="${N0}" id="${noSp}math_mfeb">${math_mfeb}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_h_mfeb="${N0}" id="${noSp}math_h_mfeb">${math_h_mfeb}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-sci_mfeb="${N0}" id="${noSp}sci_mfeb">${sci_mfeb}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-soc_mfeb="${N0}" id="${noSp}soc_mfeb">${soc_mfeb}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_homework_mfeb="${N0}" id="${noSp}k_homework_mfeb">${k_homework_mfeb}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-sci_h_mfeb="${N0}" id="${noSp}sci_h_mfeb">${sci_h_mfeb}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-soc_h_mfeb="${N0}" id="${noSp}soc_h_mfeb">${soc_h_mfeb}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-e_h_mfeb="${N0}" id="${noSp}e_h_mfeb">${e_h_mfeb}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-pe_mfeb="${N0}" id="${noSp}pe_mfeb">${pe_mfeb}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-e_mfeb="${N0}" id="${noSp}e_mfeb">${e_mfeb}</td>
                                        <td class="border-dark text-center fw-bold">${total_all_score}</td>
                                        <td class="border-dark text-center fw-bold">${average}</td>
                                        <td class="border-dark text-center" style="color:red;">${rank}</td>
                                        <td class="border-dark text-center" style="color:red;">${mention}</td>
                                        `;
                            //Update data
                            setTimeout(() => {
                                document.getElementById(`${noSp}e_mfeb`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}e_mfeb`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            e_mfeb: d,
                                        });
                                })
                                document.getElementById(`${noSp}pe_mfeb`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}pe_mfeb`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            pe_mfeb: d,
                                        });
                                })
                                document.getElementById(`${noSp}e_h_mfeb`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}e_h_mfeb`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            e_h_mfeb: d,
                                        });
                                })
                                document.getElementById(`${noSp}soc_h_mfeb`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}soc_h_mfeb`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            soc_h_mfeb: d,
                                        });
                                })
                                document.getElementById(`${noSp}sci_h_mfeb`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}sci_h_mfeb`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            sci_h_mfeb: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_homework_mfeb`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_homework_mfeb`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_homework_mfeb: d,
                                        });
                                })
                                document.getElementById(`${noSp}soc_mfeb`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}soc_mfeb`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            soc_mfeb: d,
                                        });
                                })
                                document.getElementById(`${noSp}sci_mfeb`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}sci_mfeb`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            sci_mfeb: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_h_mfeb`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_h_mfeb`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_h_mfeb: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_mfeb`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_mfeb`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_mfeb: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_speak_mfeb`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_speak_mfeb`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_speak_mfeb: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_writing_mfeb`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_writing_mfeb`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_writing_mfeb: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_dictation_mfeb`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_dictation_mfeb`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_dictation_mfeb: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_reading_mfeb`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_reading_mfeb`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_reading_mfeb: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_speak_mfeb`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_speak_mfeb`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_speak_mfeb: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_listen_mfeb`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_listen_mfeb`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_listen_mfeb: d,
                                        });
                                })

                            }, 200);
                            //Key select
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mfeb);
                                    const nextCell = document.querySelector(`[data-e_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mfeb);
                                    const nextCell = document.querySelector(`[data-e_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mfeb);
                                    const nextCell = document.querySelector(`[data-e_mfeb="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mfeb);
                                    const nextCell = document.querySelector(`[data-pe_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mfeb);
                                    const nextCell = document.querySelector(`[data-pe_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mfeb);
                                    const nextCell = document.querySelector(`[data-pe_mfeb="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mfeb);
                                    const nextCell = document.querySelector(`[data-e_h_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mfeb);
                                    const nextCell = document.querySelector(`[data-e_h_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mfeb);
                                    const nextCell = document.querySelector(`[data-e_h_mfeb="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mfeb);
                                    const nextCell = document.querySelector(`[data-soc_h_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mfeb);
                                    const nextCell = document.querySelector(`[data-soc_h_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mfeb);
                                    const nextCell = document.querySelector(`[data-soc_h_mfeb="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mfeb);
                                    const nextCell = document.querySelector(`[data-sci_h_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mfeb);
                                    const nextCell = document.querySelector(`[data-sci_h_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mfeb);
                                    const nextCell = document.querySelector(`[data-sci_h_mfeb="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mfeb);
                                    const nextCell = document.querySelector(`[data-k_homework_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mfeb);
                                    const nextCell = document.querySelector(`[data-k_homework_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mfeb);
                                    const nextCell = document.querySelector(`[data-k_homework_mfeb="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mfeb);
                                    const nextCell = document.querySelector(`[data-soc_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mfeb);
                                    const nextCell = document.querySelector(`[data-soc_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mfeb);
                                    const nextCell = document.querySelector(`[data-soc_mfeb="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mfeb);
                                    const nextCell = document.querySelector(`[data-sci_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mfeb);
                                    const nextCell = document.querySelector(`[data-sci_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mfeb);
                                    const nextCell = document.querySelector(`[data-sci_mfeb="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mfeb);
                                    const nextCell = document.querySelector(`[data-math_h_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mfeb);
                                    const nextCell = document.querySelector(`[data-math_h_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mfeb);
                                    const nextCell = document.querySelector(`[data-math_h_mfeb="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mfeb);
                                    const nextCell = document.querySelector(`[data-math_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mfeb);
                                    const nextCell = document.querySelector(`[data-math_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mfeb);
                                    const nextCell = document.querySelector(`[data-math_mfeb="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mfeb);
                                    const nextCell = document.querySelector(`[data-math_speak_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mfeb);
                                    const nextCell = document.querySelector(`[data-math_speak_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mfeb);
                                    const nextCell = document.querySelector(`[data-math_speak_mfeb="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mfeb);
                                    const nextCell = document.querySelector(`[data-k_writing_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mfeb);
                                    const nextCell = document.querySelector(`[data-k_writing_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mfeb);
                                    const nextCell = document.querySelector(`[data-k_writing_mfeb="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mfeb);
                                    const nextCell = document.querySelector(`[data-k_dictation_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mfeb);
                                    const nextCell = document.querySelector(`[data-k_dictation_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mfeb);
                                    const nextCell = document.querySelector(`[data-k_dictation_mfeb="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mfeb);
                                    const nextCell = document.querySelector(`[data-k_reading_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mfeb);
                                    const nextCell = document.querySelector(`[data-k_reading_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mfeb);
                                    const nextCell = document.querySelector(`[data-k_reading_mfeb="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_speak_mfeb);
                                    const nextCell = document.querySelector(`[data-k_speak_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_speak_mfeb);
                                    const nextCell = document.querySelector(`[data-k_speak_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_speak_mfeb);
                                    const nextCell = document.querySelector(`[data-k_speak_mfeb="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_listen_mfeb);
                                    const nextCell = document.querySelector(`[data-k_listen_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_listen_mfeb);
                                    const nextCell = document.querySelector(`[data-k_listen_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_listen_mfeb);
                                    const nextCell = document.querySelector(`[data-k_listen_mfeb="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });


                            show_hearder.innerHTML = h;
                            table.innerHTML += n;
                            show_hearder_print.innerHTML = h;
                            table_print.innerHTML += n;

                        }, 200);

                    })
                    //Sort array and get rank number
                    student_rank.sort((a, b) => {
                        if (a.st_average > b.st_average) return -1;
                        if (a.st_average < b.st_average) return 1;
                        return 0;
                    });

                    for (let i = 0; i < student_rank.length; i++) {
                        let avg = student_rank[i].st_average;


                        let studentsWithRank = student_rank.filter(
                            (student) => student.st_average === avg

                        );
                        for (let student of studentsWithRank) {
                            student.Rank = i + 1;
                        }
                        i += studentsWithRank.length - 1;
                    }
                    let num = "";
                    //get Data sort to new array and save to localStorage
                    student_rank.forEach((student) => {
                        var id = student.id;
                        var gender = student.gender;
                        var total_all_score = student.total_all_score;
                        var average = student.st_average;
                        var rank = student.Rank;
                        if (!total_all_score) {

                            total_all_score = total_all_score.toFixed(2);
                        }

                        num++;

                        //Mention average
                        let mention = '';
                        var my = parseFloat(average);
                        if (my <= 4.9) {
                            mention = "ខ្សោយ"
                        } else if (my <= 6.49) {
                            mention = "មធ្យម"
                        } else if (my <= 7.99) {
                            mention = "ល្អបង្គួរ";
                        } else if (my <= 9.49) {
                            mention = "ល្អ";
                        } else if (my <= 10) {
                            mention = "ល្អណាស់";
                        }
                        let mention_fail = '';
                        var my = parseFloat(average);
                        if (my <= 4.9) {
                            mention_fail = "Poor"
                        } else if (my <= 6.49) {
                            mention_fail = "Average"
                        } else if (my <= 7.99) {
                            mention_fail = "Fairly Good";
                        } else if (my <= 9.49) {
                            mention_fail = "Good";
                        } else if (my <= 10) {
                            mention_fail = "Very Good";
                        }
                        let sex = '';
                        if (gender == 'ស') { sex = 'F' };
                        if (gender == 'ប') { sex = 'M' };

                        let new_gender = '';
                        if (gender == 'ស') { new_gender = 'ស' };
                        if (gender == 'ប') { new_gender = 'ប' };

                        firebase
                            .database()
                            .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                            .update({
                                average_mfeb: average,
                                rank_mfeb: rank,
                            });
                        let h = `
                                        <th class="border-dark text_table">ល.រ</th>
                                        <th class="border-dark text_table" style="width:15vh;">គោត្តនាម-នាម</th>
                                        <th class="border-dark text_table">ភេទ</th>
                                        <th class="border-dark text_table">ពិន្ទុសរុប</th>
                                        <th class="border-dark text_table">មធ្យមភាគ</th>
                                        <th class="border-dark text_table" style="width:8vh;">ចំណាត់ថ្នាក់</th>
                                        <th class="border-dark text_table">និទ្ទេស</th>
                                        <th class="border-dark text_table">ផ្សេងៗ</th>
        
                                        `;
                        let n = `
                                        <td class="border-dark text-center text_table">${num}</td>
                                        <td class="border-dark text-start text_table" style="width:15vh;">${id}</td>
                                        <td class="border-dark text-center text_table">${new_gender}</td>
                                        <td class="border-dark text-center text_table fw-bold">${total_all_score}</td>
                                        <td class="border-dark text-center text_table fw-bold">${average}</td>
                                        <td class="border-dark text-center text_table" style="color:red;width:8vh;">${rank}</td>
                                        <td class="border-dark text-center text_table" style="color:red;">${mention}</td>
                                        <td class="border-dark text-center text_table"></td>
                                        <td class="border-dark text-center text_table" style="display: none;">${mention_fail}${sex}</td>
                                        `;
                        table_result.innerHTML += n;
                        show_hearder_result.innerHTML = h;

                    })
                }
                if (primary_g_p2.includes(dbGrade)) {
                    datas.forEach((d) => {
                        var id = d.val().id;
                        var user_grade = d.val().user_grade;
                        var gender = d.val().gender;
                        var average = d.val().average_mfeb;
                        var rank = d.val().rank_mfeb;

                        var k_reading_mfeb = d.val().k_reading_mfeb;
                        var k_dictation_mfeb = d.val().k_dictation_mfeb;
                        var k_writing_mfeb = d.val().k_writing_mfeb;
                        var k_grammar_mfeb = d.val().k_grammar_mfeb;
                        var k_homework_mfeb = d.val().k_homework_mfeb;

                        var math_speak_mfeb = d.val().math_speak_mfeb;
                        var math_mfeb = d.val().math_mfeb;
                        var math_h_mfeb = d.val().math_h_mfeb;

                        var sci_mfeb = d.val().sci_mfeb;
                        var sci_h_mfeb = d.val().sci_h_mfeb;

                        var soc_h_mfeb = d.val().soc_h_mfeb;

                        var e_mfeb = d.val().e_mfeb;
                        var e_h_mfeb = d.val().e_h_mfeb;

                        var pe_mfeb = d.val().pe_mfeb;
                        var geor_mfeb = d.val().geor_mfeb;
                        var hist_mfeb = d.val().hist_mfeb;
                        var moral_mfeb = d.val().moral_mfeb;

                        let noSp = id.replace(/\s+/g, "");

                        if (!k_reading_mfeb) { k_reading_mfeb = 0 };
                        if (!k_dictation_mfeb) { k_dictation_mfeb = 0 };
                        if (!k_writing_mfeb) { k_writing_mfeb = 0 };
                        if (!k_grammar_mfeb) { k_grammar_mfeb = 0 };
                        if (!k_homework_mfeb) { k_homework_mfeb = 0 };

                        if (!math_speak_mfeb) { math_speak_mfeb = 0 };
                        if (!math_mfeb) { math_mfeb = 0 };
                        if (!math_h_mfeb) { math_h_mfeb = 0 };

                        if (!sci_mfeb) { sci_mfeb = 0 };
                        if (!sci_h_mfeb) { sci_h_mfeb = 0 };

                        if (!soc_h_mfeb) { soc_h_mfeb = 0 };

                        if (!e_mfeb) { e_mfeb = 0 };
                        if (!e_h_mfeb) { e_h_mfeb = 0 };

                        if (!pe_mfeb) { pe_mfeb = 0 };
                        if (!geor_mfeb) { geor_mfeb = 0 };
                        if (!hist_mfeb) { hist_mfeb = 0 };
                        if (!moral_mfeb) { moral_mfeb = 0 };
                        //Total all score
                        var total_all_score =
                            parseFloat(k_reading_mfeb) +
                            parseFloat(k_dictation_mfeb) +
                            parseFloat(k_writing_mfeb) +
                            parseFloat(k_grammar_mfeb) +
                            parseFloat(k_homework_mfeb) +
                            parseFloat(math_speak_mfeb) +
                            parseFloat(math_mfeb) +
                            parseFloat(math_h_mfeb) +
                            parseFloat(sci_mfeb) +
                            parseFloat(sci_h_mfeb) +
                            parseFloat(soc_h_mfeb) +
                            parseFloat(geor_mfeb) +
                            parseFloat(hist_mfeb) +
                            parseFloat(moral_mfeb) +
                            parseFloat(e_mfeb) +
                            parseFloat(e_h_mfeb) +
                            parseFloat(pe_mfeb);
                        if (!total_all_score) { total_all_score = "00" }
                        //មធ្យមភាគ
                        var st_average =
                            parseFloat(total_all_score) / dbdivid;
                        st_average = st_average.toFixed(2);

                        student_rank.push({
                            id,
                            user_grade,
                            st_average,
                            total_all_score,
                            gender,
                            k_reading_mfeb,
                            k_dictation_mfeb,
                            k_writing_mfeb,
                            k_homework_mfeb,
                            math_speak_mfeb,
                            math_mfeb,
                            math_h_mfeb,
                            sci_mfeb,
                            sci_h_mfeb,
                            soc_h_mfeb,
                            e_mfeb,
                            e_h_mfeb,
                            pe_mfeb,
                        })
                        setTimeout(() => {
                            //Mention average
                            let mention = '';
                            var my = parseFloat(average);
                            if (my <= 4.9) {
                                mention = "ខ្សោយ"
                            } else if (my <= 6.49) {
                                mention = "មធ្យម"
                            } else if (my <= 7.99) {
                                mention = "ល្អបង្គួរ";
                            } else if (my <= 9.49) {
                                mention = "ល្អ";
                            } else if (my <= 10) {
                                mention = "ល្អណាស់";
                            }

                            N0++;
                            let h = `
                                        <th class="border-dark">ល.រ</th>
                                        <th class="border-dark">ឈ្មោះ</th>
                                        <th class="border-dark">ភេទ</th>
                                        <th class="border-dark">អំណាន</th>
                                        <th class="border-dark">សរសេរតាមអាន</th>
                                        <th class="border-dark">តែងសេចក្តី</th>
                                        <th class="border-dark">វេយ្យាករណ៍</th>
                                        <th class="border-dark">គ.ផ្ទាល់មាត់</th>
                                        <th class="border-dark">គណិតវិទ្យា</th>
                                        <th class="border-dark">គ.កិច្ចការផ្ទះ</th>
                                        <th class="border-dark">វិទ្យាសាស្រ្ត</th>
                                        <th class="border-dark">ភូមិវិទ្យា</th>
                                        <th class="border-dark">ប្រវត្តិវិទ្យា</th>
                                        <th class="border-dark">ពលរដ្ឋ</th>
                                        <th class="border-dark">កិ.(ខ្មែរ)</th>
                                        <th class="border-dark">កិ.(វិទ្យា)</th>
                                        <th class="border-dark">កិ.(សិក្សា)</th>
                                        <th class="border-dark">កិ.(អង់គ្លេស)</th>
                                        <th class="border-dark">កីឡា</th>
                                        <th class="border-dark">អង់គ្លេស</th>
                                        <th class="border-dark">ពិន្ទុសរុប</th>
                                        <th class="border-dark">មធ្យមភាគ</th>
                                        <th class="border-dark">ចំណាត់ថ្នាក់</th>
                                        <th class="border-dark">និទ្ទេស</th>
                                        
        
                                        `
                            let n = `
                                        <td class="border-dark text-center">${N0}</td>
                                        <td class="border-dark">${id}</td>
                                        <td class="border-dark text-center">${gender}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_reading_mfeb="${N0}" id="${noSp}k_reading_mfeb">${k_reading_mfeb}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_dictation_mfeb="${N0}" id="${noSp}k_dictation_mfeb">${k_dictation_mfeb}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_writing_mfeb="${N0}" id="${noSp}k_writing_mfeb">${k_writing_mfeb}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_grammar_mfeb="${N0}" id="${noSp}k_grammar_mfeb">${k_grammar_mfeb}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_speak_mfeb="${N0}" id="${noSp}math_speak_mfeb">${math_speak_mfeb}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_mfeb="${N0}" id="${noSp}math_mfeb">${math_mfeb}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_h_mfeb="${N0}" id="${noSp}math_h_mfeb">${math_h_mfeb}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-sci_mfeb="${N0}" id="${noSp}sci_mfeb">${sci_mfeb}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-geor_mfeb="${N0}" id="${noSp}geor_mfeb">${geor_mfeb}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-hist_mfeb="${N0}" id="${noSp}hist_mfeb">${hist_mfeb}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-moral_mfeb="${N0}" id="${noSp}moral_mfeb">${moral_mfeb}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_homework_mfeb="${N0}" id="${noSp}k_homework_mfeb">${k_homework_mfeb}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-sci_h_mfeb="${N0}" id="${noSp}sci_h_mfeb">${sci_h_mfeb}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-soc_h_mfeb="${N0}" id="${noSp}soc_h_mfeb">${soc_h_mfeb}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-e_h_mfeb="${N0}" id="${noSp}e_h_mfeb">${e_h_mfeb}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-pe_mfeb="${N0}" id="${noSp}pe_mfeb">${pe_mfeb}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-e_mfeb="${N0}" id="${noSp}e_mfeb">${e_mfeb}</td>
                                        <td class="border-dark text-center fw-bold">${total_all_score}</td>
                                        <td class="border-dark text-center fw-bold">${average}</td>
                                        <td class="border-dark text-center" style="color:red;">${rank}</td>
                                        <td class="border-dark text-center" style="color:red;">${mention}</td>
                                        `;
                            //Update data
                            setTimeout(() => {
                                document.getElementById(`${noSp}e_mfeb`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}e_mfeb`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            e_mfeb: d,
                                        });
                                })
                                document.getElementById(`${noSp}pe_mfeb`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}pe_mfeb`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            pe_mfeb: d,
                                        });
                                })
                                document.getElementById(`${noSp}e_h_mfeb`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}e_h_mfeb`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            e_h_mfeb: d,
                                        });
                                })
                                document.getElementById(`${noSp}soc_h_mfeb`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}soc_h_mfeb`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            soc_h_mfeb: d,
                                        });
                                })
                                document.getElementById(`${noSp}sci_h_mfeb`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}sci_h_mfeb`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            sci_h_mfeb: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_homework_mfeb`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_homework_mfeb`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_homework_mfeb: d,
                                        });
                                })
                                document.getElementById(`${noSp}sci_mfeb`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}sci_mfeb`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            sci_mfeb: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_h_mfeb`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_h_mfeb`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_h_mfeb: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_mfeb`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_mfeb`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_mfeb: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_speak_mfeb`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_speak_mfeb`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_speak_mfeb: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_grammar_mfeb`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_grammar_mfeb`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_grammar_mfeb: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_writing_mfeb`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_writing_mfeb`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_writing_mfeb: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_dictation_mfeb`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_dictation_mfeb`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_dictation_mfeb: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_reading_mfeb`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_reading_mfeb`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_reading_mfeb: d,
                                        });
                                })
                                document.getElementById(`${noSp}geor_mfeb`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}geor_mfeb`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            geor_mfeb: d,
                                        });
                                })
                                document.getElementById(`${noSp}hist_mfeb`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}hist_mfeb`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            hist_mfeb: d,
                                        });
                                })

                                document.getElementById(`${noSp}moral_mfeb`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}moral_mfeb`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            moral_mfeb: d,
                                        });
                                })

                            }, 200);
                            //Key select
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mfeb);
                                    const nextCell = document.querySelector(`[data-e_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mfeb);
                                    const nextCell = document.querySelector(`[data-e_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mfeb);
                                    const nextCell = document.querySelector(`[data-e_mfeb="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mfeb);
                                    const nextCell = document.querySelector(`[data-pe_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mfeb);
                                    const nextCell = document.querySelector(`[data-pe_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mfeb);
                                    const nextCell = document.querySelector(`[data-pe_mfeb="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mfeb);
                                    const nextCell = document.querySelector(`[data-e_h_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mfeb);
                                    const nextCell = document.querySelector(`[data-e_h_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mfeb);
                                    const nextCell = document.querySelector(`[data-e_h_mfeb="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mfeb);
                                    const nextCell = document.querySelector(`[data-soc_h_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mfeb);
                                    const nextCell = document.querySelector(`[data-soc_h_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mfeb);
                                    const nextCell = document.querySelector(`[data-soc_h_mfeb="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mfeb);
                                    const nextCell = document.querySelector(`[data-sci_h_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mfeb);
                                    const nextCell = document.querySelector(`[data-sci_h_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mfeb);
                                    const nextCell = document.querySelector(`[data-sci_h_mfeb="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mfeb);
                                    const nextCell = document.querySelector(`[data-k_homework_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mfeb);
                                    const nextCell = document.querySelector(`[data-k_homework_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mfeb);
                                    const nextCell = document.querySelector(`[data-k_homework_mfeb="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mfeb);
                                    const nextCell = document.querySelector(`[data-soc_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mfeb);
                                    const nextCell = document.querySelector(`[data-soc_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mfeb);
                                    const nextCell = document.querySelector(`[data-soc_mfeb="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mfeb);
                                    const nextCell = document.querySelector(`[data-sci_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mfeb);
                                    const nextCell = document.querySelector(`[data-sci_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mfeb);
                                    const nextCell = document.querySelector(`[data-sci_mfeb="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mfeb);
                                    const nextCell = document.querySelector(`[data-math_h_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mfeb);
                                    const nextCell = document.querySelector(`[data-math_h_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mfeb);
                                    const nextCell = document.querySelector(`[data-math_h_mfeb="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mfeb);
                                    const nextCell = document.querySelector(`[data-math_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mfeb);
                                    const nextCell = document.querySelector(`[data-math_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mfeb);
                                    const nextCell = document.querySelector(`[data-math_mfeb="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mfeb);
                                    const nextCell = document.querySelector(`[data-math_speak_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mfeb);
                                    const nextCell = document.querySelector(`[data-math_speak_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mfeb);
                                    const nextCell = document.querySelector(`[data-math_speak_mfeb="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mfeb);
                                    const nextCell = document.querySelector(`[data-k_writing_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mfeb);
                                    const nextCell = document.querySelector(`[data-k_writing_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mfeb);
                                    const nextCell = document.querySelector(`[data-k_writing_mfeb="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mfeb);
                                    const nextCell = document.querySelector(`[data-k_dictation_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mfeb);
                                    const nextCell = document.querySelector(`[data-k_dictation_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mfeb);
                                    const nextCell = document.querySelector(`[data-k_dictation_mfeb="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mfeb);
                                    const nextCell = document.querySelector(`[data-k_reading_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mfeb);
                                    const nextCell = document.querySelector(`[data-k_reading_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mfeb);
                                    const nextCell = document.querySelector(`[data-k_reading_mfeb="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_grammar_mfeb);
                                    const nextCell = document.querySelector(`[data-k_grammar_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_grammar_mfeb);
                                    const nextCell = document.querySelector(`[data-k_grammar_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_grammar_mfeb);
                                    const nextCell = document.querySelector(`[data-k_grammar_mfeb="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.moral_mfeb);
                                    const nextCell = document.querySelector(`[data-moral_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.moral_mfeb);
                                    const nextCell = document.querySelector(`[data-moral_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.moral_mfeb);
                                    const nextCell = document.querySelector(`[data-moral_mfeb="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.hist_mfeb);
                                    const nextCell = document.querySelector(`[data-hist_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.hist_mfeb);
                                    const nextCell = document.querySelector(`[data-hist_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.hist_mfeb);
                                    const nextCell = document.querySelector(`[data-hist_mfeb="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.geor_mfeb);
                                    const nextCell = document.querySelector(`[data-geor_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.geor_mfeb);
                                    const nextCell = document.querySelector(`[data-geor_mfeb="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.geor_mfeb);
                                    const nextCell = document.querySelector(`[data-geor_mfeb="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });

                            show_hearder.innerHTML = h;
                            table.innerHTML += n;
                            show_hearder_print.innerHTML = h;
                            table_print.innerHTML += n;

                        }, 200);

                    })
                    //Sort array and get rank number
                    student_rank.sort((a, b) => {
                        if (a.st_average > b.st_average) return -1;
                        if (a.st_average < b.st_average) return 1;
                        return 0;
                    });

                    for (let i = 0; i < student_rank.length; i++) {
                        let avg = student_rank[i].st_average;


                        let studentsWithRank = student_rank.filter(
                            (student) => student.st_average === avg

                        );
                        for (let student of studentsWithRank) {
                            student.Rank = i + 1;
                        }
                        i += studentsWithRank.length - 1;
                    }
                    let num = "";
                    //get Data sort to new array and save to localStorage
                    student_rank.forEach((student) => {
                        var id = student.id;
                        var gender = student.gender;
                        var total_all_score = student.total_all_score;
                        var average = student.st_average;
                        var rank = student.Rank;
                        if (!total_all_score) {

                            total_all_score = total_all_score.toFixed(2);
                        }

                        num++;

                        //Mention average
                        let mention = '';
                        var my = parseFloat(average);
                        if (my <= 4.9) {
                            mention = "ខ្សោយ"
                        } else if (my <= 6.49) {
                            mention = "មធ្យម"
                        } else if (my <= 7.99) {
                            mention = "ល្អបង្គួរ";
                        } else if (my <= 9.49) {
                            mention = "ល្អ";
                        } else if (my <= 10) {
                            mention = "ល្អណាស់";
                        }
                        let mention_fail = '';
                        var my = parseFloat(average);
                        if (my <= 4.9) {
                            mention_fail = "Poor"
                        } else if (my <= 6.49) {
                            mention_fail = "Average"
                        } else if (my <= 7.99) {
                            mention_fail = "Fairly Good";
                        } else if (my <= 9.49) {
                            mention_fail = "Good";
                        } else if (my <= 10) {
                            mention_fail = "Very Good";
                        }
                        let sex = '';
                        if (gender == 'ស') { sex = 'F' };
                        if (gender == 'ប') { sex = 'M' };

                        let new_gender = '';
                        if (gender == 'ស') { new_gender = 'ស' };
                        if (gender == 'ប') { new_gender = 'ប' };

                        firebase
                            .database()
                            .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                            .update({
                                average_mfeb: average,
                                rank_mfeb: rank,
                            });
                        let h = `
                                        <th class="border-dark text_table">ល.រ</th>
                                        <th class="border-dark text_table" style="width:15vh;">គោត្តនាម-នាម</th>
                                        <th class="border-dark text_table">ភេទ</th>
                                        <th class="border-dark text_table">ពិន្ទុសរុប</th>
                                        <th class="border-dark text_table">មធ្យមភាគ</th>
                                        <th class="border-dark text_table" style="width:8vh;">ចំណាត់ថ្នាក់</th>
                                        <th class="border-dark text_table">និទ្ទេស</th>
                                        <th class="border-dark text_table">ផ្សេងៗ</th>
        
                                        `;
                        let n = `
                                        <td class="border-dark text-center text_table">${num}</td>
                                        <td class="border-dark text-start text_table" style="width:15vh;">${id}</td>
                                        <td class="border-dark text-center text_table">${new_gender}</td>
                                        <td class="border-dark text-center text_table fw-bold">${total_all_score}</td>
                                        <td class="border-dark text-center text_table fw-bold">${average}</td>
                                        <td class="border-dark text-center text_table" style="color:red;width:8vh;">${rank}</td>
                                        <td class="border-dark text-center text_table" style="color:red;">${mention}</td>
                                        <td class="border-dark text-center text_table"></td>
                                        <td class="border-dark text-center text_table" style="display: none;">${mention_fail}${sex}</td>
                                        `;
                        table_result.innerHTML += n;
                        show_hearder_result.innerHTML = h;
                    })


                }
            }

            if (dbMonth == 'March') {
                if (primary_g_p1.includes(dbGrade)) {

                    datas.forEach((d) => {

                        var id = d.val().id;
                        var user_grade = d.val().user_grade;
                        var gender = d.val().gender;
                        var average = d.val().average_mmarch;
                        var rank = d.val().rank_mmarch;

                        var k_listen_mmarch = d.val().k_listen_mmarch;
                        var k_speak_mmarch = d.val().k_speak_mmarch;
                        var k_reading_mmarch = d.val().k_reading_mmarch;
                        var k_dictation_mmarch = d.val().k_dictation_mmarch;
                        var k_writing_mmarch = d.val().k_writing_mmarch;
                        var k_grammar_mmarch = d.val().k_grammar_mmarch;
                        var k_homework_mmarch = d.val().k_homework_mmarch;

                        var math_speak_mmarch = d.val().math_speak_mmarch;
                        var math_mmarch = d.val().math_mmarch;
                        var math_h_mmarch = d.val().math_h_mmarch;

                        var sci_mmarch = d.val().sci_mmarch;
                        var sci_h_mmarch = d.val().sci_h_mmarch;

                        var soc_mmarch = d.val().soc_mmarch;
                        var soc_h_mmarch = d.val().soc_h_mmarch;

                        var e_mmarch = d.val().e_mmarch;
                        var e_h_mmarch = d.val().e_h_mmarch;

                        var pe_mmarch = d.val().pe_mmarch;

                        let noSp = id.replace(/\s+/g, "");

                        if (!k_listen_mmarch) { k_listen_mmarch = 0 };
                        if (!k_speak_mmarch) { k_speak_mmarch = 0 };
                        if (!k_reading_mmarch) { k_reading_mmarch = 0 };
                        if (!k_dictation_mmarch) { k_dictation_mmarch = 0 };
                        if (!k_writing_mmarch) { k_writing_mmarch = 0 };
                        if (!k_grammar_mmarch) { k_grammar_mmarch = 0 };
                        if (!k_homework_mmarch) { k_homework_mmarch = 0 };

                        if (!math_speak_mmarch) { math_speak_mmarch = 0 };
                        if (!math_mmarch) { math_mmarch = 0 };
                        if (!math_h_mmarch) { math_h_mmarch = 0 };

                        if (!sci_mmarch) { sci_mmarch = 0 };
                        if (!sci_h_mmarch) { sci_h_mmarch = 0 };

                        if (!soc_mmarch) { soc_mmarch = 0 };
                        if (!soc_h_mmarch) { soc_h_mmarch = 0 };

                        if (!e_mmarch) { e_mmarch = 0 };
                        if (!e_h_mmarch) { e_h_mmarch = 0 };

                        if (!pe_mmarch) { pe_mmarch = 0 };

                        //Total all score
                        var total_all_score =
                            parseFloat(k_listen_mmarch) +
                            parseFloat(k_speak_mmarch) +
                            parseFloat(k_reading_mmarch) +
                            parseFloat(k_dictation_mmarch) +
                            parseFloat(k_writing_mmarch) +
                            parseFloat(k_homework_mmarch) +
                            parseFloat(math_speak_mmarch) +
                            parseFloat(math_mmarch) +
                            parseFloat(math_h_mmarch) +
                            parseFloat(sci_mmarch) +
                            parseFloat(sci_h_mmarch) +
                            parseFloat(soc_mmarch) +
                            parseFloat(soc_h_mmarch) +
                            parseFloat(e_mmarch) +
                            parseFloat(e_h_mmarch) +
                            parseFloat(pe_mmarch);
                        if (!total_all_score) { total_all_score = "00" }
                        //មធ្យមភាគ
                        var st_average =
                            parseFloat(total_all_score) / dbdivid;
                        st_average = st_average.toFixed(2);

                        student_rank.push({
                            id,
                            user_grade,
                            st_average,
                            total_all_score,
                            gender,
                            k_listen_mmarch,
                            k_speak_mmarch,
                            k_reading_mmarch,
                            k_dictation_mmarch,
                            k_writing_mmarch,
                            k_homework_mmarch,
                            math_speak_mmarch,
                            math_mmarch,
                            math_h_mmarch,
                            sci_mmarch,
                            sci_h_mmarch,
                            soc_mmarch,
                            soc_h_mmarch,
                            e_mmarch,
                            e_h_mmarch,
                            pe_mmarch,
                        })
                        setTimeout(() => {
                            N0++;

                            //Mention average
                            let mention = '';
                            var my = parseFloat(average);
                            if (my <= 4.9) {
                                mention = "ខ្សោយ"
                            } else if (my <= 6.49) {
                                mention = "មធ្យម"
                            } else if (my <= 7.99) {
                                mention = "ល្អបង្គួរ";
                            } else if (my <= 9.49) {
                                mention = "ល្អ";
                            } else if (my <= 10) {
                                mention = "ល្អណាស់";
                            }

                            let h = `
                                        <th class="border-dark">ល.រ</th>
                                        <th class="border-dark">ឈ្មោះ</th>
                                        <th class="border-dark">ភេទ</th>
                                        <th class="border-dark">ការស្តាប់</th>
                                        <th class="border-dark">ការនិយាយ</th>
                                        <th class="border-dark">អំណាន</th>
                                        <th class="border-dark">សរសេរតាមអាន</th>
                                        <th class="border-dark">តែងសេចក្តី</th>
                                        <th class="border-dark">គ.ផ្ទាល់មាត់</th>
                                        <th class="border-dark">គណិតវិទ្យា</th>
                                        <th class="border-dark">គ.កិច្ចការផ្ទះ</th>
                                        <th class="border-dark">វិទ្យាសាស្ត្រ</th>
                                        <th class="border-dark">សិក្សាសង្គម</th>
                                        <th class="border-dark">កិ.(ខ្មែរ)</th>
                                        <th class="border-dark">កិ.(វិទ្យា)</th>
                                        <th class="border-dark">កិ.(សិក្សា)</th>
                                        <th class="border-dark">កិ.(អង់គ្លេស)</th>
                                        <th class="border-dark">កីឡា</th>
                                        <th class="border-dark">អង់គ្លេស</th>
                                        <th class="border-dark">ពិន្ទុសរុប</th>
                                        <th class="border-dark">មធ្យមភាគ</th>
                                        <th class="border-dark">ចំណាត់ថ្នាក់</th>
                                        <th class="border-dark">និទ្ទេស</th>
                                        
        
                                        `
                            let n = `
                                        <td class="border-dark text-center">${N0}</td>
                                        <td class="border-dark">${id}</td>
                                        <td class="border-dark text-center"">${gender}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_listen_mmarch="${N0}" id="${noSp}k_listen_mmarch">${k_listen_mmarch}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_speak_mmarch="${N0}" id="${noSp}k_speak_mmarch">${k_speak_mmarch}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_reading_mmarch="${N0}" id="${noSp}k_reading_mmarch">${k_reading_mmarch}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_dictation_mmarch="${N0}" id="${noSp}k_dictation_mmarch">${k_dictation_mmarch}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_writing_mmarch="${N0}" id="${noSp}k_writing_mmarch">${k_writing_mmarch}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_speak_mmarch="${N0}" id="${noSp}math_speak_mmarch">${math_speak_mmarch}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_mmarch="${N0}" id="${noSp}math_mmarch">${math_mmarch}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_h_mmarch="${N0}" id="${noSp}math_h_mmarch">${math_h_mmarch}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-sci_mmarch="${N0}" id="${noSp}sci_mmarch">${sci_mmarch}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-soc_mmarch="${N0}" id="${noSp}soc_mmarch">${soc_mmarch}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_homework_mmarch="${N0}" id="${noSp}k_homework_mmarch">${k_homework_mmarch}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-sci_h_mmarch="${N0}" id="${noSp}sci_h_mmarch">${sci_h_mmarch}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-soc_h_mmarch="${N0}" id="${noSp}soc_h_mmarch">${soc_h_mmarch}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-e_h_mmarch="${N0}" id="${noSp}e_h_mmarch">${e_h_mmarch}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-pe_mmarch="${N0}" id="${noSp}pe_mmarch">${pe_mmarch}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-e_mmarch="${N0}" id="${noSp}e_mmarch">${e_mmarch}</td>
                                        <td class="border-dark text-center fw-bold">${total_all_score}</td>
                                        <td class="border-dark text-center fw-bold">${average}</td>
                                        <td class="border-dark text-center" style="color:red;">${rank}</td>
                                        <td class="border-dark text-center" style="color:red;">${mention}</td>
                                        `;
                            //Update data
                            setTimeout(() => {
                                document.getElementById(`${noSp}e_mmarch`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}e_mmarch`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            e_mmarch: d,
                                        });
                                })
                                document.getElementById(`${noSp}pe_mmarch`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}pe_mmarch`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            pe_mmarch: d,
                                        });
                                })
                                document.getElementById(`${noSp}e_h_mmarch`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}e_h_mmarch`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            e_h_mmarch: d,
                                        });
                                })
                                document.getElementById(`${noSp}soc_h_mmarch`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}soc_h_mmarch`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            soc_h_mmarch: d,
                                        });
                                })
                                document.getElementById(`${noSp}sci_h_mmarch`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}sci_h_mmarch`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            sci_h_mmarch: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_homework_mmarch`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_homework_mmarch`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_homework_mmarch: d,
                                        });
                                })
                                document.getElementById(`${noSp}soc_mmarch`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}soc_mmarch`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            soc_mmarch: d,
                                        });
                                })
                                document.getElementById(`${noSp}sci_mmarch`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}sci_mmarch`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            sci_mmarch: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_h_mmarch`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_h_mmarch`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_h_mmarch: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_mmarch`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_mmarch`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_mmarch: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_speak_mmarch`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_speak_mmarch`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_speak_mmarch: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_writing_mmarch`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_writing_mmarch`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_writing_mmarch: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_dictation_mmarch`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_dictation_mmarch`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_dictation_mmarch: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_reading_mmarch`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_reading_mmarch`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_reading_mmarch: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_speak_mmarch`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_speak_mmarch`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_speak_mmarch: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_listen_mmarch`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_listen_mmarch`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_listen_mmarch: d,
                                        });
                                })

                            }, 200);
                            //Key select
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mmarch);
                                    const nextCell = document.querySelector(`[data-e_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mmarch);
                                    const nextCell = document.querySelector(`[data-e_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mmarch);
                                    const nextCell = document.querySelector(`[data-e_mmarch="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mmarch);
                                    const nextCell = document.querySelector(`[data-pe_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mmarch);
                                    const nextCell = document.querySelector(`[data-pe_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mmarch);
                                    const nextCell = document.querySelector(`[data-pe_mmarch="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mmarch);
                                    const nextCell = document.querySelector(`[data-e_h_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mmarch);
                                    const nextCell = document.querySelector(`[data-e_h_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mmarch);
                                    const nextCell = document.querySelector(`[data-e_h_mmarch="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mmarch);
                                    const nextCell = document.querySelector(`[data-soc_h_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mmarch);
                                    const nextCell = document.querySelector(`[data-soc_h_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mmarch);
                                    const nextCell = document.querySelector(`[data-soc_h_mmarch="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mmarch);
                                    const nextCell = document.querySelector(`[data-sci_h_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mmarch);
                                    const nextCell = document.querySelector(`[data-sci_h_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mmarch);
                                    const nextCell = document.querySelector(`[data-sci_h_mmarch="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mmarch);
                                    const nextCell = document.querySelector(`[data-k_homework_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mmarch);
                                    const nextCell = document.querySelector(`[data-k_homework_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mmarch);
                                    const nextCell = document.querySelector(`[data-k_homework_mmarch="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mmarch);
                                    const nextCell = document.querySelector(`[data-soc_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mmarch);
                                    const nextCell = document.querySelector(`[data-soc_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mmarch);
                                    const nextCell = document.querySelector(`[data-soc_mmarch="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mmarch);
                                    const nextCell = document.querySelector(`[data-sci_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mmarch);
                                    const nextCell = document.querySelector(`[data-sci_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mmarch);
                                    const nextCell = document.querySelector(`[data-sci_mmarch="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mmarch);
                                    const nextCell = document.querySelector(`[data-math_h_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mmarch);
                                    const nextCell = document.querySelector(`[data-math_h_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mmarch);
                                    const nextCell = document.querySelector(`[data-math_h_mmarch="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mmarch);
                                    const nextCell = document.querySelector(`[data-math_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mmarch);
                                    const nextCell = document.querySelector(`[data-math_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mmarch);
                                    const nextCell = document.querySelector(`[data-math_mmarch="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mmarch);
                                    const nextCell = document.querySelector(`[data-math_speak_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mmarch);
                                    const nextCell = document.querySelector(`[data-math_speak_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mmarch);
                                    const nextCell = document.querySelector(`[data-math_speak_mmarch="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mmarch);
                                    const nextCell = document.querySelector(`[data-k_writing_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mmarch);
                                    const nextCell = document.querySelector(`[data-k_writing_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mmarch);
                                    const nextCell = document.querySelector(`[data-k_writing_mmarch="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mmarch);
                                    const nextCell = document.querySelector(`[data-k_dictation_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mmarch);
                                    const nextCell = document.querySelector(`[data-k_dictation_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mmarch);
                                    const nextCell = document.querySelector(`[data-k_dictation_mmarch="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mmarch);
                                    const nextCell = document.querySelector(`[data-k_reading_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mmarch);
                                    const nextCell = document.querySelector(`[data-k_reading_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mmarch);
                                    const nextCell = document.querySelector(`[data-k_reading_mmarch="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_speak_mmarch);
                                    const nextCell = document.querySelector(`[data-k_speak_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_speak_mmarch);
                                    const nextCell = document.querySelector(`[data-k_speak_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_speak_mmarch);
                                    const nextCell = document.querySelector(`[data-k_speak_mmarch="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_listen_mmarch);
                                    const nextCell = document.querySelector(`[data-k_listen_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_listen_mmarch);
                                    const nextCell = document.querySelector(`[data-k_listen_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_listen_mmarch);
                                    const nextCell = document.querySelector(`[data-k_listen_mmarch="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });


                            show_hearder.innerHTML = h;
                            table.innerHTML += n;
                            show_hearder_print.innerHTML = h;
                            table_print.innerHTML += n;

                        }, 200);

                    })
                    //Sort array and get rank number
                    student_rank.sort((a, b) => {
                        if (a.st_average > b.st_average) return -1;
                        if (a.st_average < b.st_average) return 1;
                        return 0;
                    });

                    for (let i = 0; i < student_rank.length; i++) {
                        let avg = student_rank[i].st_average;


                        let studentsWithRank = student_rank.filter(
                            (student) => student.st_average === avg

                        );
                        for (let student of studentsWithRank) {
                            student.Rank = i + 1;
                        }
                        i += studentsWithRank.length - 1;
                    }
                    let num = "";
                    //get Data sort to new array and save to localStorage
                    student_rank.forEach((student) => {
                        var id = student.id;
                        var gender = student.gender;
                        var total_all_score = student.total_all_score;
                        var average = student.st_average;
                        var rank = student.Rank;
                        if (!total_all_score) {

                            total_all_score = total_all_score.toFixed(2);
                        }

                        num++;

                        //Mention average
                        let mention = '';
                        var my = parseFloat(average);
                        if (my <= 4.9) {
                            mention = "ខ្សោយ"
                        } else if (my <= 6.49) {
                            mention = "មធ្យម"
                        } else if (my <= 7.99) {
                            mention = "ល្អបង្គួរ";
                        } else if (my <= 9.49) {
                            mention = "ល្អ";
                        } else if (my <= 10) {
                            mention = "ល្អណាស់";
                        }
                        let mention_fail = '';
                        var my = parseFloat(average);
                        if (my <= 4.9) {
                            mention_fail = "Poor"
                        } else if (my <= 6.49) {
                            mention_fail = "Average"
                        } else if (my <= 7.99) {
                            mention_fail = "Fairly Good";
                        } else if (my <= 9.49) {
                            mention_fail = "Good";
                        } else if (my <= 10) {
                            mention_fail = "Very Good";
                        }
                        let sex = '';
                        if (gender == 'ស') { sex = 'F' };
                        if (gender == 'ប') { sex = 'M' };

                        let new_gender = '';
                        if (gender == 'ស') { new_gender = 'ស' };
                        if (gender == 'ប') { new_gender = 'ប' };

                        firebase
                            .database()
                            .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                            .update({
                                average_mmarch: average,
                                rank_mmarch: rank,
                            });
                        let h = `
                                        <th class="border-dark text_table">ល.រ</th>
                                        <th class="border-dark text_table" style="width:15vh;">គោត្តនាម-នាម</th>
                                        <th class="border-dark text_table">ភេទ</th>
                                        <th class="border-dark text_table">ពិន្ទុសរុប</th>
                                        <th class="border-dark text_table">មធ្យមភាគ</th>
                                        <th class="border-dark text_table" style="width:8vh;">ចំណាត់ថ្នាក់</th>
                                        <th class="border-dark text_table">និទ្ទេស</th>
                                        <th class="border-dark text_table">ផ្សេងៗ</th>
        
                                        `;
                        let n = `
                                        <td class="border-dark text-center text_table">${num}</td>
                                        <td class="border-dark text-start text_table" style="width:15vh;">${id}</td>
                                        <td class="border-dark text-center text_table">${new_gender}</td>
                                        <td class="border-dark text-center text_table fw-bold">${total_all_score}</td>
                                        <td class="border-dark text-center text_table fw-bold">${average}</td>
                                        <td class="border-dark text-center text_table" style="color:red;width:8vh;">${rank}</td>
                                        <td class="border-dark text-center text_table" style="color:red;">${mention}</td>
                                        <td class="border-dark text-center text_table"></td>
                                        <td class="border-dark text-center text_table" style="display: none;">${mention_fail}${sex}</td>
                                        `;
                        table_result.innerHTML += n;
                        show_hearder_result.innerHTML = h;

                    })
                }
                if (primary_g_p2.includes(dbGrade)) {
                    datas.forEach((d) => {
                        var id = d.val().id;
                        var user_grade = d.val().user_grade;
                        var gender = d.val().gender;
                        var average = d.val().average_mmarch;
                        var rank = d.val().rank_mmarch;

                        var k_reading_mmarch = d.val().k_reading_mmarch;
                        var k_dictation_mmarch = d.val().k_dictation_mmarch;
                        var k_writing_mmarch = d.val().k_writing_mmarch;
                        var k_grammar_mmarch = d.val().k_grammar_mmarch;
                        var k_homework_mmarch = d.val().k_homework_mmarch;

                        var math_speak_mmarch = d.val().math_speak_mmarch;
                        var math_mmarch = d.val().math_mmarch;
                        var math_h_mmarch = d.val().math_h_mmarch;

                        var sci_mmarch = d.val().sci_mmarch;
                        var sci_h_mmarch = d.val().sci_h_mmarch;

                        var soc_h_mmarch = d.val().soc_h_mmarch;

                        var e_mmarch = d.val().e_mmarch;
                        var e_h_mmarch = d.val().e_h_mmarch;

                        var pe_mmarch = d.val().pe_mmarch;
                        var geor_mmarch = d.val().geor_mmarch;
                        var hist_mmarch = d.val().hist_mmarch;
                        var moral_mmarch = d.val().moral_mmarch;

                        let noSp = id.replace(/\s+/g, "");

                        if (!k_reading_mmarch) { k_reading_mmarch = 0 };
                        if (!k_dictation_mmarch) { k_dictation_mmarch = 0 };
                        if (!k_writing_mmarch) { k_writing_mmarch = 0 };
                        if (!k_grammar_mmarch) { k_grammar_mmarch = 0 };
                        if (!k_homework_mmarch) { k_homework_mmarch = 0 };

                        if (!math_speak_mmarch) { math_speak_mmarch = 0 };
                        if (!math_mmarch) { math_mmarch = 0 };
                        if (!math_h_mmarch) { math_h_mmarch = 0 };

                        if (!sci_mmarch) { sci_mmarch = 0 };
                        if (!sci_h_mmarch) { sci_h_mmarch = 0 };

                        if (!soc_h_mmarch) { soc_h_mmarch = 0 };

                        if (!e_mmarch) { e_mmarch = 0 };
                        if (!e_h_mmarch) { e_h_mmarch = 0 };

                        if (!pe_mmarch) { pe_mmarch = 0 };
                        if (!geor_mmarch) { geor_mmarch = 0 };
                        if (!hist_mmarch) { hist_mmarch = 0 };
                        if (!moral_mmarch) { moral_mmarch = 0 };
                        //Total all score
                        var total_all_score =
                            parseFloat(k_reading_mmarch) +
                            parseFloat(k_dictation_mmarch) +
                            parseFloat(k_writing_mmarch) +
                            parseFloat(k_grammar_mmarch) +
                            parseFloat(k_homework_mmarch) +
                            parseFloat(math_speak_mmarch) +
                            parseFloat(math_mmarch) +
                            parseFloat(math_h_mmarch) +
                            parseFloat(sci_mmarch) +
                            parseFloat(sci_h_mmarch) +
                            parseFloat(soc_h_mmarch) +
                            parseFloat(geor_mmarch) +
                            parseFloat(hist_mmarch) +
                            parseFloat(moral_mmarch) +
                            parseFloat(e_mmarch) +
                            parseFloat(e_h_mmarch) +
                            parseFloat(pe_mmarch);
                        if (!total_all_score) { total_all_score = "00" }
                        //មធ្យមភាគ
                        var st_average =
                            parseFloat(total_all_score) / dbdivid;
                        st_average = st_average.toFixed(2);

                        student_rank.push({
                            id,
                            user_grade,
                            st_average,
                            total_all_score,
                            gender,
                            k_reading_mmarch,
                            k_dictation_mmarch,
                            k_writing_mmarch,
                            k_homework_mmarch,
                            math_speak_mmarch,
                            math_mmarch,
                            math_h_mmarch,
                            sci_mmarch,
                            sci_h_mmarch,
                            soc_h_mmarch,
                            e_mmarch,
                            e_h_mmarch,
                            pe_mmarch,
                        })
                        setTimeout(() => {
                            //Mention average
                            let mention = '';
                            var my = parseFloat(average);
                            if (my <= 4.9) {
                                mention = "ខ្សោយ"
                            } else if (my <= 6.49) {
                                mention = "មធ្យម"
                            } else if (my <= 7.99) {
                                mention = "ល្អបង្គួរ";
                            } else if (my <= 9.49) {
                                mention = "ល្អ";
                            } else if (my <= 10) {
                                mention = "ល្អណាស់";
                            }

                            N0++;
                            let h = `
                                        <th class="border-dark">ល.រ</th>
                                        <th class="border-dark">ឈ្មោះ</th>
                                        <th class="border-dark">ភេទ</th>
                                        <th class="border-dark">អំណាន</th>
                                        <th class="border-dark">សរសេរតាមអាន</th>
                                        <th class="border-dark">តែងសេចក្តី</th>
                                        <th class="border-dark">វេយ្យាករណ៍</th>
                                        <th class="border-dark">គ.ផ្ទាល់មាត់</th>
                                        <th class="border-dark">គណិតវិទ្យា</th>
                                        <th class="border-dark">គ.កិច្ចការផ្ទះ</th>
                                        <th class="border-dark">វិទ្យាសាស្រ្ត</th>
                                        <th class="border-dark">ភូមិវិទ្យា</th>
                                        <th class="border-dark">ប្រវត្តិវិទ្យា</th>
                                        <th class="border-dark">ពលរដ្ឋ</th>
                                        <th class="border-dark">កិ.(ខ្មែរ)</th>
                                        <th class="border-dark">កិ.(វិទ្យា)</th>
                                        <th class="border-dark">កិ.(សិក្សា)</th>
                                        <th class="border-dark">កិ.(អង់គ្លេស)</th>
                                        <th class="border-dark">កីឡា</th>
                                        <th class="border-dark">អង់គ្លេស</th>
                                        <th class="border-dark">ពិន្ទុសរុប</th>
                                        <th class="border-dark">មធ្យមភាគ</th>
                                        <th class="border-dark">ចំណាត់ថ្នាក់</th>
                                        <th class="border-dark">និទ្ទេស</th>
                                        
        
                                        `
                            let n = `
                                        <td class="border-dark text-center">${N0}</td>
                                        <td class="border-dark">${id}</td>
                                        <td class="border-dark text-center">${gender}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_reading_mmarch="${N0}" id="${noSp}k_reading_mmarch">${k_reading_mmarch}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_dictation_mmarch="${N0}" id="${noSp}k_dictation_mmarch">${k_dictation_mmarch}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_writing_mmarch="${N0}" id="${noSp}k_writing_mmarch">${k_writing_mmarch}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_grammar_mmarch="${N0}" id="${noSp}k_grammar_mmarch">${k_grammar_mmarch}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_speak_mmarch="${N0}" id="${noSp}math_speak_mmarch">${math_speak_mmarch}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_mmarch="${N0}" id="${noSp}math_mmarch">${math_mmarch}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_h_mmarch="${N0}" id="${noSp}math_h_mmarch">${math_h_mmarch}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-sci_mmarch="${N0}" id="${noSp}sci_mmarch">${sci_mmarch}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-geor_mmarch="${N0}" id="${noSp}geor_mmarch">${geor_mmarch}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-hist_mmarch="${N0}" id="${noSp}hist_mmarch">${hist_mmarch}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-moral_mmarch="${N0}" id="${noSp}moral_mmarch">${moral_mmarch}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_homework_mmarch="${N0}" id="${noSp}k_homework_mmarch">${k_homework_mmarch}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-sci_h_mmarch="${N0}" id="${noSp}sci_h_mmarch">${sci_h_mmarch}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-soc_h_mmarch="${N0}" id="${noSp}soc_h_mmarch">${soc_h_mmarch}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-e_h_mmarch="${N0}" id="${noSp}e_h_mmarch">${e_h_mmarch}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-pe_mmarch="${N0}" id="${noSp}pe_mmarch">${pe_mmarch}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-e_mmarch="${N0}" id="${noSp}e_mmarch">${e_mmarch}</td>
                                        <td class="border-dark text-center fw-bold">${total_all_score}</td>
                                        <td class="border-dark text-center fw-bold">${average}</td>
                                        <td class="border-dark text-center" style="color:red;">${rank}</td>
                                        <td class="border-dark text-center" style="color:red;">${mention}</td>
                                        `;
                            //Update data
                            setTimeout(() => {
                                document.getElementById(`${noSp}e_mmarch`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}e_mmarch`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            e_mmarch: d,
                                        });
                                })
                                document.getElementById(`${noSp}pe_mmarch`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}pe_mmarch`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            pe_mmarch: d,
                                        });
                                })
                                document.getElementById(`${noSp}e_h_mmarch`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}e_h_mmarch`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            e_h_mmarch: d,
                                        });
                                })
                                document.getElementById(`${noSp}soc_h_mmarch`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}soc_h_mmarch`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            soc_h_mmarch: d,
                                        });
                                })
                                document.getElementById(`${noSp}sci_h_mmarch`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}sci_h_mmarch`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            sci_h_mmarch: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_homework_mmarch`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_homework_mmarch`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_homework_mmarch: d,
                                        });
                                })
                                document.getElementById(`${noSp}sci_mmarch`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}sci_mmarch`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            sci_mmarch: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_h_mmarch`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_h_mmarch`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_h_mmarch: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_mmarch`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_mmarch`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_mmarch: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_speak_mmarch`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_speak_mmarch`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_speak_mmarch: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_grammar_mmarch`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_grammar_mmarch`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_grammar_mmarch: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_writing_mmarch`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_writing_mmarch`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_writing_mmarch: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_dictation_mmarch`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_dictation_mmarch`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_dictation_mmarch: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_reading_mmarch`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_reading_mmarch`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_reading_mmarch: d,
                                        });
                                })
                                document.getElementById(`${noSp}geor_mmarch`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}geor_mmarch`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            geor_mmarch: d,
                                        });
                                })
                                document.getElementById(`${noSp}hist_mmarch`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}hist_mmarch`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            hist_mmarch: d,
                                        });
                                })

                                document.getElementById(`${noSp}moral_mmarch`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}moral_mmarch`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            moral_mmarch: d,
                                        });
                                })

                            }, 200);
                            //Key select
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mmarch);
                                    const nextCell = document.querySelector(`[data-e_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mmarch);
                                    const nextCell = document.querySelector(`[data-e_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mmarch);
                                    const nextCell = document.querySelector(`[data-e_mmarch="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mmarch);
                                    const nextCell = document.querySelector(`[data-pe_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mmarch);
                                    const nextCell = document.querySelector(`[data-pe_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mmarch);
                                    const nextCell = document.querySelector(`[data-pe_mmarch="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mmarch);
                                    const nextCell = document.querySelector(`[data-e_h_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mmarch);
                                    const nextCell = document.querySelector(`[data-e_h_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mmarch);
                                    const nextCell = document.querySelector(`[data-e_h_mmarch="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mmarch);
                                    const nextCell = document.querySelector(`[data-soc_h_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mmarch);
                                    const nextCell = document.querySelector(`[data-soc_h_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mmarch);
                                    const nextCell = document.querySelector(`[data-soc_h_mmarch="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mmarch);
                                    const nextCell = document.querySelector(`[data-sci_h_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mmarch);
                                    const nextCell = document.querySelector(`[data-sci_h_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mmarch);
                                    const nextCell = document.querySelector(`[data-sci_h_mmarch="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mmarch);
                                    const nextCell = document.querySelector(`[data-k_homework_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mmarch);
                                    const nextCell = document.querySelector(`[data-k_homework_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mmarch);
                                    const nextCell = document.querySelector(`[data-k_homework_mmarch="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mmarch);
                                    const nextCell = document.querySelector(`[data-soc_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mmarch);
                                    const nextCell = document.querySelector(`[data-soc_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mmarch);
                                    const nextCell = document.querySelector(`[data-soc_mmarch="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mmarch);
                                    const nextCell = document.querySelector(`[data-sci_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mmarch);
                                    const nextCell = document.querySelector(`[data-sci_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mmarch);
                                    const nextCell = document.querySelector(`[data-sci_mmarch="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mmarch);
                                    const nextCell = document.querySelector(`[data-math_h_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mmarch);
                                    const nextCell = document.querySelector(`[data-math_h_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mmarch);
                                    const nextCell = document.querySelector(`[data-math_h_mmarch="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mmarch);
                                    const nextCell = document.querySelector(`[data-math_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mmarch);
                                    const nextCell = document.querySelector(`[data-math_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mmarch);
                                    const nextCell = document.querySelector(`[data-math_mmarch="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mmarch);
                                    const nextCell = document.querySelector(`[data-math_speak_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mmarch);
                                    const nextCell = document.querySelector(`[data-math_speak_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mmarch);
                                    const nextCell = document.querySelector(`[data-math_speak_mmarch="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mmarch);
                                    const nextCell = document.querySelector(`[data-k_writing_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mmarch);
                                    const nextCell = document.querySelector(`[data-k_writing_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mmarch);
                                    const nextCell = document.querySelector(`[data-k_writing_mmarch="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mmarch);
                                    const nextCell = document.querySelector(`[data-k_dictation_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mmarch);
                                    const nextCell = document.querySelector(`[data-k_dictation_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mmarch);
                                    const nextCell = document.querySelector(`[data-k_dictation_mmarch="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mmarch);
                                    const nextCell = document.querySelector(`[data-k_reading_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mmarch);
                                    const nextCell = document.querySelector(`[data-k_reading_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mmarch);
                                    const nextCell = document.querySelector(`[data-k_reading_mmarch="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_grammar_mmarch);
                                    const nextCell = document.querySelector(`[data-k_grammar_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_grammar_mmarch);
                                    const nextCell = document.querySelector(`[data-k_grammar_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_grammar_mmarch);
                                    const nextCell = document.querySelector(`[data-k_grammar_mmarch="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.moral_mmarch);
                                    const nextCell = document.querySelector(`[data-moral_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.moral_mmarch);
                                    const nextCell = document.querySelector(`[data-moral_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.moral_mmarch);
                                    const nextCell = document.querySelector(`[data-moral_mmarch="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.hist_mmarch);
                                    const nextCell = document.querySelector(`[data-hist_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.hist_mmarch);
                                    const nextCell = document.querySelector(`[data-hist_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.hist_mmarch);
                                    const nextCell = document.querySelector(`[data-hist_mmarch="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.geor_mmarch);
                                    const nextCell = document.querySelector(`[data-geor_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.geor_mmarch);
                                    const nextCell = document.querySelector(`[data-geor_mmarch="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.geor_mmarch);
                                    const nextCell = document.querySelector(`[data-geor_mmarch="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });

                            show_hearder.innerHTML = h;
                            table.innerHTML += n;
                            show_hearder_print.innerHTML = h;
                            table_print.innerHTML += n;

                        }, 200);

                    })
                    //Sort array and get rank number
                    student_rank.sort((a, b) => {
                        if (a.st_average > b.st_average) return -1;
                        if (a.st_average < b.st_average) return 1;
                        return 0;
                    });

                    for (let i = 0; i < student_rank.length; i++) {
                        let avg = student_rank[i].st_average;


                        let studentsWithRank = student_rank.filter(
                            (student) => student.st_average === avg

                        );
                        for (let student of studentsWithRank) {
                            student.Rank = i + 1;
                        }
                        i += studentsWithRank.length - 1;
                    }
                    let num = "";
                    //get Data sort to new array and save to localStorage
                    student_rank.forEach((student) => {
                        var id = student.id;
                        var gender = student.gender;
                        var total_all_score = student.total_all_score;
                        var average = student.st_average;
                        var rank = student.Rank;
                        if (!total_all_score) {

                            total_all_score = total_all_score.toFixed(2);
                        }

                        num++;

                        //Mention average
                        let mention = '';
                        var my = parseFloat(average);
                        if (my <= 4.9) {
                            mention = "ខ្សោយ"
                        } else if (my <= 6.49) {
                            mention = "មធ្យម"
                        } else if (my <= 7.99) {
                            mention = "ល្អបង្គួរ";
                        } else if (my <= 9.49) {
                            mention = "ល្អ";
                        } else if (my <= 10) {
                            mention = "ល្អណាស់";
                        }
                        let mention_fail = '';
                        var my = parseFloat(average);
                        if (my <= 4.9) {
                            mention_fail = "Poor"
                        } else if (my <= 6.49) {
                            mention_fail = "Average"
                        } else if (my <= 7.99) {
                            mention_fail = "Fairly Good";
                        } else if (my <= 9.49) {
                            mention_fail = "Good";
                        } else if (my <= 10) {
                            mention_fail = "Very Good";
                        }
                        let sex = '';
                        if (gender == 'ស') { sex = 'F' };
                        if (gender == 'ប') { sex = 'M' };

                        let new_gender = '';
                        if (gender == 'ស') { new_gender = 'ស' };
                        if (gender == 'ប') { new_gender = 'ប' };

                        firebase
                            .database()
                            .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                            .update({
                                average_mmarch: average,
                                rank_mmarch: rank,
                            });
                        let h = `
                                        <th class="border-dark text_table">ល.រ</th>
                                        <th class="border-dark text_table" style="width:15vh;">គោត្តនាម-នាម</th>
                                        <th class="border-dark text_table">ភេទ</th>
                                        <th class="border-dark text_table">ពិន្ទុសរុប</th>
                                        <th class="border-dark text_table">មធ្យមភាគ</th>
                                        <th class="border-dark text_table" style="width:8vh;">ចំណាត់ថ្នាក់</th>
                                        <th class="border-dark text_table">និទ្ទេស</th>
                                        <th class="border-dark text_table">ផ្សេងៗ</th>
        
                                        `;
                        let n = `
                                        <td class="border-dark text-center text_table">${num}</td>
                                        <td class="border-dark text-start text_table" style="width:15vh;">${id}</td>
                                        <td class="border-dark text-center text_table">${new_gender}</td>
                                        <td class="border-dark text-center text_table fw-bold">${total_all_score}</td>
                                        <td class="border-dark text-center text_table fw-bold">${average}</td>
                                        <td class="border-dark text-center text_table" style="color:red;width:8vh;">${rank}</td>
                                        <td class="border-dark text-center text_table" style="color:red;">${mention}</td>
                                        <td class="border-dark text-center text_table"></td>
                                        <td class="border-dark text-center text_table" style="display: none;">${mention_fail}${sex}</td>
                                        `;
                        table_result.innerHTML += n;
                        show_hearder_result.innerHTML = h;
                    })


                }
            }

            if (dbMonth == 'April-May') {
                if (primary_g_p1.includes(dbGrade)) {

                    datas.forEach((d) => {

                        var id = d.val().id;
                        var user_grade = d.val().user_grade;
                        var gender = d.val().gender;
                        var average = d.val().average_mapma;
                        var rank = d.val().rank_mapma;

                        var k_listen_mapma = d.val().k_listen_mapma;
                        var k_speak_mapma = d.val().k_speak_mapma;
                        var k_reading_mapma = d.val().k_reading_mapma;
                        var k_dictation_mapma = d.val().k_dictation_mapma;
                        var k_writing_mapma = d.val().k_writing_mapma;
                        var k_grammar_mapma = d.val().k_grammar_mapma;
                        var k_homework_mapma = d.val().k_homework_mapma;

                        var math_speak_mapma = d.val().math_speak_mapma;
                        var math_mapma = d.val().math_mapma;
                        var math_h_mapma = d.val().math_h_mapma;

                        var sci_mapma = d.val().sci_mapma;
                        var sci_h_mapma = d.val().sci_h_mapma;

                        var soc_mapma = d.val().soc_mapma;
                        var soc_h_mapma = d.val().soc_h_mapma;

                        var e_mapma = d.val().e_mapma;
                        var e_h_mapma = d.val().e_h_mapma;

                        var pe_mapma = d.val().pe_mapma;

                        let noSp = id.replace(/\s+/g, "");

                        if (!k_listen_mapma) { k_listen_mapma = 0 };
                        if (!k_speak_mapma) { k_speak_mapma = 0 };
                        if (!k_reading_mapma) { k_reading_mapma = 0 };
                        if (!k_dictation_mapma) { k_dictation_mapma = 0 };
                        if (!k_writing_mapma) { k_writing_mapma = 0 };
                        if (!k_grammar_mapma) { k_grammar_mapma = 0 };
                        if (!k_homework_mapma) { k_homework_mapma = 0 };

                        if (!math_speak_mapma) { math_speak_mapma = 0 };
                        if (!math_mapma) { math_mapma = 0 };
                        if (!math_h_mapma) { math_h_mapma = 0 };

                        if (!sci_mapma) { sci_mapma = 0 };
                        if (!sci_h_mapma) { sci_h_mapma = 0 };

                        if (!soc_mapma) { soc_mapma = 0 };
                        if (!soc_h_mapma) { soc_h_mapma = 0 };

                        if (!e_mapma) { e_mapma = 0 };
                        if (!e_h_mapma) { e_h_mapma = 0 };

                        if (!pe_mapma) { pe_mapma = 0 };

                        //Total all score
                        var total_all_score =
                            parseFloat(k_listen_mapma) +
                            parseFloat(k_speak_mapma) +
                            parseFloat(k_reading_mapma) +
                            parseFloat(k_dictation_mapma) +
                            parseFloat(k_writing_mapma) +
                            parseFloat(k_homework_mapma) +
                            parseFloat(math_speak_mapma) +
                            parseFloat(math_mapma) +
                            parseFloat(math_h_mapma) +
                            parseFloat(sci_mapma) +
                            parseFloat(sci_h_mapma) +
                            parseFloat(soc_mapma) +
                            parseFloat(soc_h_mapma) +
                            parseFloat(e_mapma) +
                            parseFloat(e_h_mapma) +
                            parseFloat(pe_mapma);
                        if (!total_all_score) { total_all_score = "00" }
                        //មធ្យមភាគ
                        var st_average =
                            parseFloat(total_all_score) / dbdivid;
                        st_average = st_average.toFixed(2);

                        student_rank.push({
                            id,
                            user_grade,
                            st_average,
                            total_all_score,
                            gender,
                            k_listen_mapma,
                            k_speak_mapma,
                            k_reading_mapma,
                            k_dictation_mapma,
                            k_writing_mapma,
                            k_homework_mapma,
                            math_speak_mapma,
                            math_mapma,
                            math_h_mapma,
                            sci_mapma,
                            sci_h_mapma,
                            soc_mapma,
                            soc_h_mapma,
                            e_mapma,
                            e_h_mapma,
                            pe_mapma,
                        })
                        setTimeout(() => {
                            N0++;

                            //Mention average
                            let mention = '';
                            var my = parseFloat(average);
                            if (my <= 4.9) {
                                mention = "ខ្សោយ"
                            } else if (my <= 6.49) {
                                mention = "មធ្យម"
                            } else if (my <= 7.99) {
                                mention = "ល្អបង្គួរ";
                            } else if (my <= 9.49) {
                                mention = "ល្អ";
                            } else if (my <= 10) {
                                mention = "ល្អណាស់";
                            }

                            let h = `
                                        <th class="border-dark">ល.រ</th>
                                        <th class="border-dark">ឈ្មោះ</th>
                                        <th class="border-dark">ភេទ</th>
                                        <th class="border-dark">ការស្តាប់</th>
                                        <th class="border-dark">ការនិយាយ</th>
                                        <th class="border-dark">អំណាន</th>
                                        <th class="border-dark">សរសេរតាមអាន</th>
                                        <th class="border-dark">តែងសេចក្តី</th>
                                        <th class="border-dark">គ.ផ្ទាល់មាត់</th>
                                        <th class="border-dark">គណិតវិទ្យា</th>
                                        <th class="border-dark">គ.កិច្ចការផ្ទះ</th>
                                        <th class="border-dark">វិទ្យាសាស្ត្រ</th>
                                        <th class="border-dark">សិក្សាសង្គម</th>
                                        <th class="border-dark">កិ.(ខ្មែរ)</th>
                                        <th class="border-dark">កិ.(វិទ្យា)</th>
                                        <th class="border-dark">កិ.(សិក្សា)</th>
                                        <th class="border-dark">កិ.(អង់គ្លេស)</th>
                                        <th class="border-dark">កីឡា</th>
                                        <th class="border-dark">អង់គ្លេស</th>
                                        <th class="border-dark">ពិន្ទុសរុប</th>
                                        <th class="border-dark">មធ្យមភាគ</th>
                                        <th class="border-dark">ចំណាត់ថ្នាក់</th>
                                        <th class="border-dark">និទ្ទេស</th>
                                        
        
                                        `
                            let n = `
                                        <td class="border-dark text-center">${N0}</td>
                                        <td class="border-dark">${id}</td>
                                        <td class="border-dark text-center"">${gender}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_listen_mapma="${N0}" id="${noSp}k_listen_mapma">${k_listen_mapma}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_speak_mapma="${N0}" id="${noSp}k_speak_mapma">${k_speak_mapma}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_reading_mapma="${N0}" id="${noSp}k_reading_mapma">${k_reading_mapma}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_dictation_mapma="${N0}" id="${noSp}k_dictation_mapma">${k_dictation_mapma}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_writing_mapma="${N0}" id="${noSp}k_writing_mapma">${k_writing_mapma}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_speak_mapma="${N0}" id="${noSp}math_speak_mapma">${math_speak_mapma}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_mapma="${N0}" id="${noSp}math_mapma">${math_mapma}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_h_mapma="${N0}" id="${noSp}math_h_mapma">${math_h_mapma}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-sci_mapma="${N0}" id="${noSp}sci_mapma">${sci_mapma}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-soc_mapma="${N0}" id="${noSp}soc_mapma">${soc_mapma}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_homework_mapma="${N0}" id="${noSp}k_homework_mapma">${k_homework_mapma}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-sci_h_mapma="${N0}" id="${noSp}sci_h_mapma">${sci_h_mapma}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-soc_h_mapma="${N0}" id="${noSp}soc_h_mapma">${soc_h_mapma}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-e_h_mapma="${N0}" id="${noSp}e_h_mapma">${e_h_mapma}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-pe_mapma="${N0}" id="${noSp}pe_mapma">${pe_mapma}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-e_mapma="${N0}" id="${noSp}e_mapma">${e_mapma}</td>
                                        <td class="border-dark text-center fw-bold">${total_all_score}</td>
                                        <td class="border-dark text-center fw-bold">${average}</td>
                                        <td class="border-dark text-center" style="color:red;">${rank}</td>
                                        <td class="border-dark text-center" style="color:red;">${mention}</td>
                                        `;
                            //Update data
                            setTimeout(() => {
                                document.getElementById(`${noSp}e_mapma`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}e_mapma`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            e_mapma: d,
                                        });
                                })
                                document.getElementById(`${noSp}pe_mapma`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}pe_mapma`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            pe_mapma: d,
                                        });
                                })
                                document.getElementById(`${noSp}e_h_mapma`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}e_h_mapma`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            e_h_mapma: d,
                                        });
                                })
                                document.getElementById(`${noSp}soc_h_mapma`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}soc_h_mapma`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            soc_h_mapma: d,
                                        });
                                })
                                document.getElementById(`${noSp}sci_h_mapma`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}sci_h_mapma`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            sci_h_mapma: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_homework_mapma`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_homework_mapma`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_homework_mapma: d,
                                        });
                                })
                                document.getElementById(`${noSp}soc_mapma`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}soc_mapma`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            soc_mapma: d,
                                        });
                                })
                                document.getElementById(`${noSp}sci_mapma`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}sci_mapma`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            sci_mapma: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_h_mapma`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_h_mapma`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_h_mapma: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_mapma`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_mapma`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_mapma: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_speak_mapma`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_speak_mapma`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_speak_mapma: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_writing_mapma`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_writing_mapma`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_writing_mapma: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_dictation_mapma`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_dictation_mapma`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_dictation_mapma: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_reading_mapma`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_reading_mapma`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_reading_mapma: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_speak_mapma`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_speak_mapma`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_speak_mapma: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_listen_mapma`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_listen_mapma`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_listen_mapma: d,
                                        });
                                })

                            }, 200);
                            //Key select
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mapma);
                                    const nextCell = document.querySelector(`[data-e_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mapma);
                                    const nextCell = document.querySelector(`[data-e_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mapma);
                                    const nextCell = document.querySelector(`[data-e_mapma="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mapma);
                                    const nextCell = document.querySelector(`[data-pe_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mapma);
                                    const nextCell = document.querySelector(`[data-pe_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mapma);
                                    const nextCell = document.querySelector(`[data-pe_mapma="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mapma);
                                    const nextCell = document.querySelector(`[data-e_h_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mapma);
                                    const nextCell = document.querySelector(`[data-e_h_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mapma);
                                    const nextCell = document.querySelector(`[data-e_h_mapma="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mapma);
                                    const nextCell = document.querySelector(`[data-soc_h_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mapma);
                                    const nextCell = document.querySelector(`[data-soc_h_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mapma);
                                    const nextCell = document.querySelector(`[data-soc_h_mapma="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mapma);
                                    const nextCell = document.querySelector(`[data-sci_h_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mapma);
                                    const nextCell = document.querySelector(`[data-sci_h_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mapma);
                                    const nextCell = document.querySelector(`[data-sci_h_mapma="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mapma);
                                    const nextCell = document.querySelector(`[data-k_homework_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mapma);
                                    const nextCell = document.querySelector(`[data-k_homework_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mapma);
                                    const nextCell = document.querySelector(`[data-k_homework_mapma="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mapma);
                                    const nextCell = document.querySelector(`[data-soc_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mapma);
                                    const nextCell = document.querySelector(`[data-soc_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mapma);
                                    const nextCell = document.querySelector(`[data-soc_mapma="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mapma);
                                    const nextCell = document.querySelector(`[data-sci_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mapma);
                                    const nextCell = document.querySelector(`[data-sci_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mapma);
                                    const nextCell = document.querySelector(`[data-sci_mapma="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mapma);
                                    const nextCell = document.querySelector(`[data-math_h_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mapma);
                                    const nextCell = document.querySelector(`[data-math_h_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mapma);
                                    const nextCell = document.querySelector(`[data-math_h_mapma="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mapma);
                                    const nextCell = document.querySelector(`[data-math_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mapma);
                                    const nextCell = document.querySelector(`[data-math_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mapma);
                                    const nextCell = document.querySelector(`[data-math_mapma="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mapma);
                                    const nextCell = document.querySelector(`[data-math_speak_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mapma);
                                    const nextCell = document.querySelector(`[data-math_speak_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mapma);
                                    const nextCell = document.querySelector(`[data-math_speak_mapma="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mapma);
                                    const nextCell = document.querySelector(`[data-k_writing_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mapma);
                                    const nextCell = document.querySelector(`[data-k_writing_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mapma);
                                    const nextCell = document.querySelector(`[data-k_writing_mapma="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mapma);
                                    const nextCell = document.querySelector(`[data-k_dictation_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mapma);
                                    const nextCell = document.querySelector(`[data-k_dictation_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mapma);
                                    const nextCell = document.querySelector(`[data-k_dictation_mapma="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mapma);
                                    const nextCell = document.querySelector(`[data-k_reading_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mapma);
                                    const nextCell = document.querySelector(`[data-k_reading_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mapma);
                                    const nextCell = document.querySelector(`[data-k_reading_mapma="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_speak_mapma);
                                    const nextCell = document.querySelector(`[data-k_speak_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_speak_mapma);
                                    const nextCell = document.querySelector(`[data-k_speak_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_speak_mapma);
                                    const nextCell = document.querySelector(`[data-k_speak_mapma="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_listen_mapma);
                                    const nextCell = document.querySelector(`[data-k_listen_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_listen_mapma);
                                    const nextCell = document.querySelector(`[data-k_listen_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_listen_mapma);
                                    const nextCell = document.querySelector(`[data-k_listen_mapma="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });


                            show_hearder.innerHTML = h;
                            table.innerHTML += n;
                            show_hearder_print.innerHTML = h;
                            table_print.innerHTML += n;

                        }, 200);

                    })
                    //Sort array and get rank number
                    student_rank.sort((a, b) => {
                        if (a.st_average > b.st_average) return -1;
                        if (a.st_average < b.st_average) return 1;
                        return 0;
                    });

                    for (let i = 0; i < student_rank.length; i++) {
                        let avg = student_rank[i].st_average;


                        let studentsWithRank = student_rank.filter(
                            (student) => student.st_average === avg

                        );
                        for (let student of studentsWithRank) {
                            student.Rank = i + 1;
                        }
                        i += studentsWithRank.length - 1;
                    }
                    let num = "";
                    //get Data sort to new array and save to localStorage
                    student_rank.forEach((student) => {
                        var id = student.id;
                        var gender = student.gender;
                        var total_all_score = student.total_all_score;
                        var average = student.st_average;
                        var rank = student.Rank;
                        if (!total_all_score) {

                            total_all_score = total_all_score.toFixed(2);
                        }

                        num++;

                        //Mention average
                        let mention = '';
                        var my = parseFloat(average);
                        if (my <= 4.9) {
                            mention = "ខ្សោយ"
                        } else if (my <= 6.49) {
                            mention = "មធ្យម"
                        } else if (my <= 7.99) {
                            mention = "ល្អបង្គួរ";
                        } else if (my <= 9.49) {
                            mention = "ល្អ";
                        } else if (my <= 10) {
                            mention = "ល្អណាស់";
                        }
                        let mention_fail = '';
                        var my = parseFloat(average);
                        if (my <= 4.9) {
                            mention_fail = "Poor"
                        } else if (my <= 6.49) {
                            mention_fail = "Average"
                        } else if (my <= 7.99) {
                            mention_fail = "Fairly Good";
                        } else if (my <= 9.49) {
                            mention_fail = "Good";
                        } else if (my <= 10) {
                            mention_fail = "Very Good";
                        }
                        let sex = '';
                        if (gender == 'ស') { sex = 'F' };
                        if (gender == 'ប') { sex = 'M' };

                        let new_gender = '';
                        if (gender == 'ស') { new_gender = 'ស' };
                        if (gender == 'ប') { new_gender = 'ប' };

                        firebase
                            .database()
                            .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                            .update({
                                average_mapma: average,
                                rank_mapma: rank,
                            });
                        let h = `
                                        <th class="border-dark text_table">ល.រ</th>
                                        <th class="border-dark text_table" style="width:15vh;">គោត្តនាម-នាម</th>
                                        <th class="border-dark text_table">ភេទ</th>
                                        <th class="border-dark text_table">ពិន្ទុសរុប</th>
                                        <th class="border-dark text_table">មធ្យមភាគ</th>
                                        <th class="border-dark text_table" style="width:8vh;">ចំណាត់ថ្នាក់</th>
                                        <th class="border-dark text_table">និទ្ទេស</th>
                                        <th class="border-dark text_table">ផ្សេងៗ</th>
        
                                        `;
                        let n = `
                                        <td class="border-dark text-center text_table">${num}</td>
                                        <td class="border-dark text-start text_table" style="width:15vh;">${id}</td>
                                        <td class="border-dark text-center text_table">${new_gender}</td>
                                        <td class="border-dark text-center text_table fw-bold">${total_all_score}</td>
                                        <td class="border-dark text-center text_table fw-bold">${average}</td>
                                        <td class="border-dark text-center text_table" style="color:red;width:8vh;">${rank}</td>
                                        <td class="border-dark text-center text_table" style="color:red;">${mention}</td>
                                        <td class="border-dark text-center text_table"></td>
                                        <td class="border-dark text-center text_table" style="display: none;">${mention_fail}${sex}</td>
                                        `;
                        table_result.innerHTML += n;
                        show_hearder_result.innerHTML = h;

                    })
                }
                if (primary_g_p2.includes(dbGrade)) {
                    datas.forEach((d) => {
                        var id = d.val().id;
                        var user_grade = d.val().user_grade;
                        var gender = d.val().gender;
                        var average = d.val().average_mapma;
                        var rank = d.val().rank_mapma;

                        var k_reading_mapma = d.val().k_reading_mapma;
                        var k_dictation_mapma = d.val().k_dictation_mapma;
                        var k_writing_mapma = d.val().k_writing_mapma;
                        var k_grammar_mapma = d.val().k_grammar_mapma;
                        var k_homework_mapma = d.val().k_homework_mapma;

                        var math_speak_mapma = d.val().math_speak_mapma;
                        var math_mapma = d.val().math_mapma;
                        var math_h_mapma = d.val().math_h_mapma;

                        var sci_mapma = d.val().sci_mapma;
                        var sci_h_mapma = d.val().sci_h_mapma;

                        var soc_h_mapma = d.val().soc_h_mapma;

                        var e_mapma = d.val().e_mapma;
                        var e_h_mapma = d.val().e_h_mapma;

                        var pe_mapma = d.val().pe_mapma;
                        var geor_mapma = d.val().geor_mapma;
                        var hist_mapma = d.val().hist_mapma;
                        var moral_mapma = d.val().moral_mapma;

                        let noSp = id.replace(/\s+/g, "");

                        if (!k_reading_mapma) { k_reading_mapma = 0 };
                        if (!k_dictation_mapma) { k_dictation_mapma = 0 };
                        if (!k_writing_mapma) { k_writing_mapma = 0 };
                        if (!k_grammar_mapma) { k_grammar_mapma = 0 };
                        if (!k_homework_mapma) { k_homework_mapma = 0 };

                        if (!math_speak_mapma) { math_speak_mapma = 0 };
                        if (!math_mapma) { math_mapma = 0 };
                        if (!math_h_mapma) { math_h_mapma = 0 };

                        if (!sci_mapma) { sci_mapma = 0 };
                        if (!sci_h_mapma) { sci_h_mapma = 0 };

                        if (!soc_h_mapma) { soc_h_mapma = 0 };

                        if (!e_mapma) { e_mapma = 0 };
                        if (!e_h_mapma) { e_h_mapma = 0 };

                        if (!pe_mapma) { pe_mapma = 0 };
                        if (!geor_mapma) { geor_mapma = 0 };
                        if (!hist_mapma) { hist_mapma = 0 };
                        if (!moral_mapma) { moral_mapma = 0 };
                        //Total all score
                        var total_all_score =
                            parseFloat(k_reading_mapma) +
                            parseFloat(k_dictation_mapma) +
                            parseFloat(k_writing_mapma) +
                            parseFloat(k_grammar_mapma) +
                            parseFloat(k_homework_mapma) +
                            parseFloat(math_speak_mapma) +
                            parseFloat(math_mapma) +
                            parseFloat(math_h_mapma) +
                            parseFloat(sci_mapma) +
                            parseFloat(sci_h_mapma) +
                            parseFloat(soc_h_mapma) +
                            parseFloat(geor_mapma) +
                            parseFloat(hist_mapma) +
                            parseFloat(moral_mapma) +
                            parseFloat(e_mapma) +
                            parseFloat(e_h_mapma) +
                            parseFloat(pe_mapma);
                        if (!total_all_score) { total_all_score = "00" }
                        //មធ្យមភាគ
                        var st_average =
                            parseFloat(total_all_score) / dbdivid;
                        st_average = st_average.toFixed(2);

                        student_rank.push({
                            id,
                            user_grade,
                            st_average,
                            total_all_score,
                            gender,
                            k_reading_mapma,
                            k_dictation_mapma,
                            k_writing_mapma,
                            k_homework_mapma,
                            math_speak_mapma,
                            math_mapma,
                            math_h_mapma,
                            sci_mapma,
                            sci_h_mapma,
                            soc_h_mapma,
                            e_mapma,
                            e_h_mapma,
                            pe_mapma,
                        })
                        setTimeout(() => {
                            //Mention average
                            let mention = '';
                            var my = parseFloat(average);
                            if (my <= 4.9) {
                                mention = "ខ្សោយ"
                            } else if (my <= 6.49) {
                                mention = "មធ្យម"
                            } else if (my <= 7.99) {
                                mention = "ល្អបង្គួរ";
                            } else if (my <= 9.49) {
                                mention = "ល្អ";
                            } else if (my <= 10) {
                                mention = "ល្អណាស់";
                            }

                            N0++;
                            let h = `
                                        <th class="border-dark">ល.រ</th>
                                        <th class="border-dark">ឈ្មោះ</th>
                                        <th class="border-dark">ភេទ</th>
                                        <th class="border-dark">អំណាន</th>
                                        <th class="border-dark">សរសេរតាមអាន</th>
                                        <th class="border-dark">តែងសេចក្តី</th>
                                        <th class="border-dark">វេយ្យាករណ៍</th>
                                        <th class="border-dark">គ.ផ្ទាល់មាត់</th>
                                        <th class="border-dark">គណិតវិទ្យា</th>
                                        <th class="border-dark">គ.កិច្ចការផ្ទះ</th>
                                        <th class="border-dark">វិទ្យាសាស្រ្ត</th>
                                        <th class="border-dark">ភូមិវិទ្យា</th>
                                        <th class="border-dark">ប្រវត្តិវិទ្យា</th>
                                        <th class="border-dark">ពលរដ្ឋ</th>
                                        <th class="border-dark">កិ.(ខ្មែរ)</th>
                                        <th class="border-dark">កិ.(វិទ្យា)</th>
                                        <th class="border-dark">កិ.(សិក្សា)</th>
                                        <th class="border-dark">កិ.(អង់គ្លេស)</th>
                                        <th class="border-dark">កីឡា</th>
                                        <th class="border-dark">អង់គ្លេស</th>
                                        <th class="border-dark">ពិន្ទុសរុប</th>
                                        <th class="border-dark">មធ្យមភាគ</th>
                                        <th class="border-dark">ចំណាត់ថ្នាក់</th>
                                        <th class="border-dark">និទ្ទេស</th>
                                        
        
                                        `
                            let n = `
                                        <td class="border-dark text-center">${N0}</td>
                                        <td class="border-dark">${id}</td>
                                        <td class="border-dark text-center">${gender}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_reading_mapma="${N0}" id="${noSp}k_reading_mapma">${k_reading_mapma}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_dictation_mapma="${N0}" id="${noSp}k_dictation_mapma">${k_dictation_mapma}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_writing_mapma="${N0}" id="${noSp}k_writing_mapma">${k_writing_mapma}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_grammar_mapma="${N0}" id="${noSp}k_grammar_mapma">${k_grammar_mapma}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_speak_mapma="${N0}" id="${noSp}math_speak_mapma">${math_speak_mapma}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_mapma="${N0}" id="${noSp}math_mapma">${math_mapma}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_h_mapma="${N0}" id="${noSp}math_h_mapma">${math_h_mapma}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-sci_mapma="${N0}" id="${noSp}sci_mapma">${sci_mapma}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-geor_mapma="${N0}" id="${noSp}geor_mapma">${geor_mapma}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-hist_mapma="${N0}" id="${noSp}hist_mapma">${hist_mapma}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-moral_mapma="${N0}" id="${noSp}moral_mapma">${moral_mapma}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_homework_mapma="${N0}" id="${noSp}k_homework_mapma">${k_homework_mapma}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-sci_h_mapma="${N0}" id="${noSp}sci_h_mapma">${sci_h_mapma}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-soc_h_mapma="${N0}" id="${noSp}soc_h_mapma">${soc_h_mapma}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-e_h_mapma="${N0}" id="${noSp}e_h_mapma">${e_h_mapma}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-pe_mapma="${N0}" id="${noSp}pe_mapma">${pe_mapma}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-e_mapma="${N0}" id="${noSp}e_mapma">${e_mapma}</td>
                                        <td class="border-dark text-center fw-bold">${total_all_score}</td>
                                        <td class="border-dark text-center fw-bold">${average}</td>
                                        <td class="border-dark text-center" style="color:red;">${rank}</td>
                                        <td class="border-dark text-center" style="color:red;">${mention}</td>
                                        `;
                            //Update data
                            setTimeout(() => {
                                document.getElementById(`${noSp}e_mapma`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}e_mapma`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            e_mapma: d,
                                        });
                                })
                                document.getElementById(`${noSp}pe_mapma`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}pe_mapma`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            pe_mapma: d,
                                        });
                                })
                                document.getElementById(`${noSp}e_h_mapma`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}e_h_mapma`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            e_h_mapma: d,
                                        });
                                })
                                document.getElementById(`${noSp}soc_h_mapma`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}soc_h_mapma`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            soc_h_mapma: d,
                                        });
                                })
                                document.getElementById(`${noSp}sci_h_mapma`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}sci_h_mapma`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            sci_h_mapma: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_homework_mapma`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_homework_mapma`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_homework_mapma: d,
                                        });
                                })
                                document.getElementById(`${noSp}sci_mapma`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}sci_mapma`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            sci_mapma: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_h_mapma`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_h_mapma`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_h_mapma: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_mapma`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_mapma`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_mapma: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_speak_mapma`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_speak_mapma`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_speak_mapma: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_grammar_mapma`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_grammar_mapma`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_grammar_mapma: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_writing_mapma`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_writing_mapma`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_writing_mapma: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_dictation_mapma`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_dictation_mapma`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_dictation_mapma: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_reading_mapma`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_reading_mapma`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_reading_mapma: d,
                                        });
                                })
                                document.getElementById(`${noSp}geor_mapma`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}geor_mapma`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            geor_mapma: d,
                                        });
                                })
                                document.getElementById(`${noSp}hist_mapma`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}hist_mapma`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            hist_mapma: d,
                                        });
                                })

                                document.getElementById(`${noSp}moral_mapma`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}moral_mapma`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            moral_mapma: d,
                                        });
                                })

                            }, 200);
                            //Key select
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mapma);
                                    const nextCell = document.querySelector(`[data-e_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mapma);
                                    const nextCell = document.querySelector(`[data-e_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mapma);
                                    const nextCell = document.querySelector(`[data-e_mapma="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mapma);
                                    const nextCell = document.querySelector(`[data-pe_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mapma);
                                    const nextCell = document.querySelector(`[data-pe_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mapma);
                                    const nextCell = document.querySelector(`[data-pe_mapma="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mapma);
                                    const nextCell = document.querySelector(`[data-e_h_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mapma);
                                    const nextCell = document.querySelector(`[data-e_h_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mapma);
                                    const nextCell = document.querySelector(`[data-e_h_mapma="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mapma);
                                    const nextCell = document.querySelector(`[data-soc_h_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mapma);
                                    const nextCell = document.querySelector(`[data-soc_h_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mapma);
                                    const nextCell = document.querySelector(`[data-soc_h_mapma="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mapma);
                                    const nextCell = document.querySelector(`[data-sci_h_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mapma);
                                    const nextCell = document.querySelector(`[data-sci_h_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mapma);
                                    const nextCell = document.querySelector(`[data-sci_h_mapma="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mapma);
                                    const nextCell = document.querySelector(`[data-k_homework_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mapma);
                                    const nextCell = document.querySelector(`[data-k_homework_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mapma);
                                    const nextCell = document.querySelector(`[data-k_homework_mapma="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mapma);
                                    const nextCell = document.querySelector(`[data-soc_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mapma);
                                    const nextCell = document.querySelector(`[data-soc_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mapma);
                                    const nextCell = document.querySelector(`[data-soc_mapma="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mapma);
                                    const nextCell = document.querySelector(`[data-sci_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mapma);
                                    const nextCell = document.querySelector(`[data-sci_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mapma);
                                    const nextCell = document.querySelector(`[data-sci_mapma="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mapma);
                                    const nextCell = document.querySelector(`[data-math_h_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mapma);
                                    const nextCell = document.querySelector(`[data-math_h_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mapma);
                                    const nextCell = document.querySelector(`[data-math_h_mapma="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mapma);
                                    const nextCell = document.querySelector(`[data-math_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mapma);
                                    const nextCell = document.querySelector(`[data-math_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mapma);
                                    const nextCell = document.querySelector(`[data-math_mapma="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mapma);
                                    const nextCell = document.querySelector(`[data-math_speak_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mapma);
                                    const nextCell = document.querySelector(`[data-math_speak_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mapma);
                                    const nextCell = document.querySelector(`[data-math_speak_mapma="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mapma);
                                    const nextCell = document.querySelector(`[data-k_writing_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mapma);
                                    const nextCell = document.querySelector(`[data-k_writing_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mapma);
                                    const nextCell = document.querySelector(`[data-k_writing_mapma="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mapma);
                                    const nextCell = document.querySelector(`[data-k_dictation_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mapma);
                                    const nextCell = document.querySelector(`[data-k_dictation_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mapma);
                                    const nextCell = document.querySelector(`[data-k_dictation_mapma="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mapma);
                                    const nextCell = document.querySelector(`[data-k_reading_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mapma);
                                    const nextCell = document.querySelector(`[data-k_reading_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mapma);
                                    const nextCell = document.querySelector(`[data-k_reading_mapma="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_grammar_mapma);
                                    const nextCell = document.querySelector(`[data-k_grammar_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_grammar_mapma);
                                    const nextCell = document.querySelector(`[data-k_grammar_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_grammar_mapma);
                                    const nextCell = document.querySelector(`[data-k_grammar_mapma="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.moral_mapma);
                                    const nextCell = document.querySelector(`[data-moral_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.moral_mapma);
                                    const nextCell = document.querySelector(`[data-moral_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.moral_mapma);
                                    const nextCell = document.querySelector(`[data-moral_mapma="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.hist_mapma);
                                    const nextCell = document.querySelector(`[data-hist_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.hist_mapma);
                                    const nextCell = document.querySelector(`[data-hist_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.hist_mapma);
                                    const nextCell = document.querySelector(`[data-hist_mapma="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.geor_mapma);
                                    const nextCell = document.querySelector(`[data-geor_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.geor_mapma);
                                    const nextCell = document.querySelector(`[data-geor_mapma="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.geor_mapma);
                                    const nextCell = document.querySelector(`[data-geor_mapma="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });

                            show_hearder.innerHTML = h;
                            table.innerHTML += n;
                            show_hearder_print.innerHTML = h;
                            table_print.innerHTML += n;

                        }, 200);

                    })
                    //Sort array and get rank number
                    student_rank.sort((a, b) => {
                        if (a.st_average > b.st_average) return -1;
                        if (a.st_average < b.st_average) return 1;
                        return 0;
                    });

                    for (let i = 0; i < student_rank.length; i++) {
                        let avg = student_rank[i].st_average;


                        let studentsWithRank = student_rank.filter(
                            (student) => student.st_average === avg

                        );
                        for (let student of studentsWithRank) {
                            student.Rank = i + 1;
                        }
                        i += studentsWithRank.length - 1;
                    }
                    let num = "";
                    //get Data sort to new array and save to localStorage
                    student_rank.forEach((student) => {
                        var id = student.id;
                        var gender = student.gender;
                        var total_all_score = student.total_all_score;
                        var average = student.st_average;
                        var rank = student.Rank;
                        if (!total_all_score) {

                            total_all_score = total_all_score.toFixed(2);
                        }

                        num++;

                        //Mention average
                        let mention = '';
                        var my = parseFloat(average);
                        if (my <= 4.9) {
                            mention = "ខ្សោយ"
                        } else if (my <= 6.49) {
                            mention = "មធ្យម"
                        } else if (my <= 7.99) {
                            mention = "ល្អបង្គួរ";
                        } else if (my <= 9.49) {
                            mention = "ល្អ";
                        } else if (my <= 10) {
                            mention = "ល្អណាស់";
                        }
                        let mention_fail = '';
                        var my = parseFloat(average);
                        if (my <= 4.9) {
                            mention_fail = "Poor"
                        } else if (my <= 6.49) {
                            mention_fail = "Average"
                        } else if (my <= 7.99) {
                            mention_fail = "Fairly Good";
                        } else if (my <= 9.49) {
                            mention_fail = "Good";
                        } else if (my <= 10) {
                            mention_fail = "Very Good";
                        }
                        let sex = '';
                        if (gender == 'ស') { sex = 'F' };
                        if (gender == 'ប') { sex = 'M' };

                        let new_gender = '';
                        if (gender == 'ស') { new_gender = 'ស' };
                        if (gender == 'ប') { new_gender = 'ប' };

                        firebase
                            .database()
                            .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                            .update({
                                average_mapma: average,
                                rank_mapma: rank,
                            });
                        let h = `
                                        <th class="border-dark text_table">ល.រ</th>
                                        <th class="border-dark text_table" style="width:15vh;">គោត្តនាម-នាម</th>
                                        <th class="border-dark text_table">ភេទ</th>
                                        <th class="border-dark text_table">ពិន្ទុសរុប</th>
                                        <th class="border-dark text_table">មធ្យមភាគ</th>
                                        <th class="border-dark text_table" style="width:8vh;">ចំណាត់ថ្នាក់</th>
                                        <th class="border-dark text_table">និទ្ទេស</th>
                                        <th class="border-dark text_table">ផ្សេងៗ</th>
        
                                        `;
                        let n = `
                                        <td class="border-dark text-center text_table">${num}</td>
                                        <td class="border-dark text-start text_table" style="width:15vh;">${id}</td>
                                        <td class="border-dark text-center text_table">${new_gender}</td>
                                        <td class="border-dark text-center text_table fw-bold">${total_all_score}</td>
                                        <td class="border-dark text-center text_table fw-bold">${average}</td>
                                        <td class="border-dark text-center text_table" style="color:red;width:8vh;">${rank}</td>
                                        <td class="border-dark text-center text_table" style="color:red;">${mention}</td>
                                        <td class="border-dark text-center text_table"></td>
                                        <td class="border-dark text-center text_table" style="display: none;">${mention_fail}${sex}</td>
                                        `;
                        table_result.innerHTML += n;
                        show_hearder_result.innerHTML = h;
                    })


                }
            }

            if (dbMonth == 'June') {
                if (primary_g_p1.includes(dbGrade)) {

                    datas.forEach((d) => {

                        var id = d.val().id;
                        var user_grade = d.val().user_grade;
                        var gender = d.val().gender;
                        var average = d.val().average_mjun;
                        var rank = d.val().rank_mjun;

                        var k_listen_mjun = d.val().k_listen_mjun;
                        var k_speak_mjun = d.val().k_speak_mjun;
                        var k_reading_mjun = d.val().k_reading_mjun;
                        var k_dictation_mjun = d.val().k_dictation_mjun;
                        var k_writing_mjun = d.val().k_writing_mjun;
                        var k_grammar_mjun = d.val().k_grammar_mjun;
                        var k_homework_mjun = d.val().k_homework_mjun;

                        var math_speak_mjun = d.val().math_speak_mjun;
                        var math_mjun = d.val().math_mjun;
                        var math_h_mjun = d.val().math_h_mjun;

                        var sci_mjun = d.val().sci_mjun;
                        var sci_h_mjun = d.val().sci_h_mjun;

                        var soc_mjun = d.val().soc_mjun;
                        var soc_h_mjun = d.val().soc_h_mjun;

                        var e_mjun = d.val().e_mjun;
                        var e_h_mjun = d.val().e_h_mjun;

                        var pe_mjun = d.val().pe_mjun;

                        let noSp = id.replace(/\s+/g, "");

                        if (!k_listen_mjun) { k_listen_mjun = 0 };
                        if (!k_speak_mjun) { k_speak_mjun = 0 };
                        if (!k_reading_mjun) { k_reading_mjun = 0 };
                        if (!k_dictation_mjun) { k_dictation_mjun = 0 };
                        if (!k_writing_mjun) { k_writing_mjun = 0 };
                        if (!k_grammar_mjun) { k_grammar_mjun = 0 };
                        if (!k_homework_mjun) { k_homework_mjun = 0 };

                        if (!math_speak_mjun) { math_speak_mjun = 0 };
                        if (!math_mjun) { math_mjun = 0 };
                        if (!math_h_mjun) { math_h_mjun = 0 };

                        if (!sci_mjun) { sci_mjun = 0 };
                        if (!sci_h_mjun) { sci_h_mjun = 0 };

                        if (!soc_mjun) { soc_mjun = 0 };
                        if (!soc_h_mjun) { soc_h_mjun = 0 };

                        if (!e_mjun) { e_mjun = 0 };
                        if (!e_h_mjun) { e_h_mjun = 0 };

                        if (!pe_mjun) { pe_mjun = 0 };

                        //Total all score
                        var total_all_score =
                            parseFloat(k_listen_mjun) +
                            parseFloat(k_speak_mjun) +
                            parseFloat(k_reading_mjun) +
                            parseFloat(k_dictation_mjun) +
                            parseFloat(k_writing_mjun) +
                            parseFloat(k_homework_mjun) +
                            parseFloat(math_speak_mjun) +
                            parseFloat(math_mjun) +
                            parseFloat(math_h_mjun) +
                            parseFloat(sci_mjun) +
                            parseFloat(sci_h_mjun) +
                            parseFloat(soc_mjun) +
                            parseFloat(soc_h_mjun) +
                            parseFloat(e_mjun) +
                            parseFloat(e_h_mjun) +
                            parseFloat(pe_mjun);
                        if (!total_all_score) { total_all_score = "00" }
                        //មធ្យមភាគ
                        var st_average =
                            parseFloat(total_all_score) / dbdivid;
                        st_average = st_average.toFixed(2);

                        student_rank.push({
                            id,
                            user_grade,
                            st_average,
                            total_all_score,
                            gender,
                            k_listen_mjun,
                            k_speak_mjun,
                            k_reading_mjun,
                            k_dictation_mjun,
                            k_writing_mjun,
                            k_homework_mjun,
                            math_speak_mjun,
                            math_mjun,
                            math_h_mjun,
                            sci_mjun,
                            sci_h_mjun,
                            soc_mjun,
                            soc_h_mjun,
                            e_mjun,
                            e_h_mjun,
                            pe_mjun,
                        })
                        setTimeout(() => {
                            N0++;

                            //Mention average
                            let mention = '';
                            var my = parseFloat(average);
                            if (my <= 4.9) {
                                mention = "ខ្សោយ"
                            } else if (my <= 6.49) {
                                mention = "មធ្យម"
                            } else if (my <= 7.99) {
                                mention = "ល្អបង្គួរ";
                            } else if (my <= 9.49) {
                                mention = "ល្អ";
                            } else if (my <= 10) {
                                mention = "ល្អណាស់";
                            }

                            let h = `
                                        <th class="border-dark">ល.រ</th>
                                        <th class="border-dark">ឈ្មោះ</th>
                                        <th class="border-dark">ភេទ</th>
                                        <th class="border-dark">ការស្តាប់</th>
                                        <th class="border-dark">ការនិយាយ</th>
                                        <th class="border-dark">អំណាន</th>
                                        <th class="border-dark">សរសេរតាមអាន</th>
                                        <th class="border-dark">តែងសេចក្តី</th>
                                        <th class="border-dark">គ.ផ្ទាល់មាត់</th>
                                        <th class="border-dark">គណិតវិទ្យា</th>
                                        <th class="border-dark">គ.កិច្ចការផ្ទះ</th>
                                        <th class="border-dark">វិទ្យាសាស្ត្រ</th>
                                        <th class="border-dark">សិក្សាសង្គម</th>
                                        <th class="border-dark">កិ.(ខ្មែរ)</th>
                                        <th class="border-dark">កិ.(វិទ្យា)</th>
                                        <th class="border-dark">កិ.(សិក្សា)</th>
                                        <th class="border-dark">កិ.(អង់គ្លេស)</th>
                                        <th class="border-dark">កីឡា</th>
                                        <th class="border-dark">អង់គ្លេស</th>
                                        <th class="border-dark">ពិន្ទុសរុប</th>
                                        <th class="border-dark">មធ្យមភាគ</th>
                                        <th class="border-dark">ចំណាត់ថ្នាក់</th>
                                        <th class="border-dark">និទ្ទេស</th>
                                        
        
                                        `
                            let n = `
                                        <td class="border-dark text-center">${N0}</td>
                                        <td class="border-dark">${id}</td>
                                        <td class="border-dark text-center"">${gender}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_listen_mjun="${N0}" id="${noSp}k_listen_mjun">${k_listen_mjun}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_speak_mjun="${N0}" id="${noSp}k_speak_mjun">${k_speak_mjun}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_reading_mjun="${N0}" id="${noSp}k_reading_mjun">${k_reading_mjun}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_dictation_mjun="${N0}" id="${noSp}k_dictation_mjun">${k_dictation_mjun}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_writing_mjun="${N0}" id="${noSp}k_writing_mjun">${k_writing_mjun}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_speak_mjun="${N0}" id="${noSp}math_speak_mjun">${math_speak_mjun}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_mjun="${N0}" id="${noSp}math_mjun">${math_mjun}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_h_mjun="${N0}" id="${noSp}math_h_mjun">${math_h_mjun}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-sci_mjun="${N0}" id="${noSp}sci_mjun">${sci_mjun}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-soc_mjun="${N0}" id="${noSp}soc_mjun">${soc_mjun}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_homework_mjun="${N0}" id="${noSp}k_homework_mjun">${k_homework_mjun}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-sci_h_mjun="${N0}" id="${noSp}sci_h_mjun">${sci_h_mjun}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-soc_h_mjun="${N0}" id="${noSp}soc_h_mjun">${soc_h_mjun}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-e_h_mjun="${N0}" id="${noSp}e_h_mjun">${e_h_mjun}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-pe_mjun="${N0}" id="${noSp}pe_mjun">${pe_mjun}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-e_mjun="${N0}" id="${noSp}e_mjun">${e_mjun}</td>
                                        <td class="border-dark text-center fw-bold">${total_all_score}</td>
                                        <td class="border-dark text-center fw-bold">${average}</td>
                                        <td class="border-dark text-center" style="color:red;">${rank}</td>
                                        <td class="border-dark text-center" style="color:red;">${mention}</td>
                                        `;
                            //Update data
                            setTimeout(() => {
                                document.getElementById(`${noSp}e_mjun`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}e_mjun`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            e_mjun: d,
                                        });
                                })
                                document.getElementById(`${noSp}pe_mjun`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}pe_mjun`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            pe_mjun: d,
                                        });
                                })
                                document.getElementById(`${noSp}e_h_mjun`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}e_h_mjun`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            e_h_mjun: d,
                                        });
                                })
                                document.getElementById(`${noSp}soc_h_mjun`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}soc_h_mjun`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            soc_h_mjun: d,
                                        });
                                })
                                document.getElementById(`${noSp}sci_h_mjun`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}sci_h_mjun`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            sci_h_mjun: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_homework_mjun`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_homework_mjun`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_homework_mjun: d,
                                        });
                                })
                                document.getElementById(`${noSp}soc_mjun`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}soc_mjun`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            soc_mjun: d,
                                        });
                                })
                                document.getElementById(`${noSp}sci_mjun`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}sci_mjun`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            sci_mjun: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_h_mjun`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_h_mjun`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_h_mjun: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_mjun`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_mjun`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_mjun: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_speak_mjun`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_speak_mjun`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_speak_mjun: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_writing_mjun`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_writing_mjun`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_writing_mjun: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_dictation_mjun`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_dictation_mjun`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_dictation_mjun: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_reading_mjun`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_reading_mjun`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_reading_mjun: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_speak_mjun`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_speak_mjun`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_speak_mjun: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_listen_mjun`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_listen_mjun`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_listen_mjun: d,
                                        });
                                })

                            }, 200);
                            //Key select
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mjun);
                                    const nextCell = document.querySelector(`[data-e_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mjun);
                                    const nextCell = document.querySelector(`[data-e_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mjun);
                                    const nextCell = document.querySelector(`[data-e_mjun="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mjun);
                                    const nextCell = document.querySelector(`[data-pe_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mjun);
                                    const nextCell = document.querySelector(`[data-pe_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mjun);
                                    const nextCell = document.querySelector(`[data-pe_mjun="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mjun);
                                    const nextCell = document.querySelector(`[data-e_h_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mjun);
                                    const nextCell = document.querySelector(`[data-e_h_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mjun);
                                    const nextCell = document.querySelector(`[data-e_h_mjun="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mjun);
                                    const nextCell = document.querySelector(`[data-soc_h_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mjun);
                                    const nextCell = document.querySelector(`[data-soc_h_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mjun);
                                    const nextCell = document.querySelector(`[data-soc_h_mjun="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mjun);
                                    const nextCell = document.querySelector(`[data-sci_h_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mjun);
                                    const nextCell = document.querySelector(`[data-sci_h_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mjun);
                                    const nextCell = document.querySelector(`[data-sci_h_mjun="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mjun);
                                    const nextCell = document.querySelector(`[data-k_homework_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mjun);
                                    const nextCell = document.querySelector(`[data-k_homework_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mjun);
                                    const nextCell = document.querySelector(`[data-k_homework_mjun="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mjun);
                                    const nextCell = document.querySelector(`[data-soc_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mjun);
                                    const nextCell = document.querySelector(`[data-soc_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mjun);
                                    const nextCell = document.querySelector(`[data-soc_mjun="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mjun);
                                    const nextCell = document.querySelector(`[data-sci_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mjun);
                                    const nextCell = document.querySelector(`[data-sci_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mjun);
                                    const nextCell = document.querySelector(`[data-sci_mjun="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mjun);
                                    const nextCell = document.querySelector(`[data-math_h_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mjun);
                                    const nextCell = document.querySelector(`[data-math_h_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mjun);
                                    const nextCell = document.querySelector(`[data-math_h_mjun="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mjun);
                                    const nextCell = document.querySelector(`[data-math_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mjun);
                                    const nextCell = document.querySelector(`[data-math_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mjun);
                                    const nextCell = document.querySelector(`[data-math_mjun="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mjun);
                                    const nextCell = document.querySelector(`[data-math_speak_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mjun);
                                    const nextCell = document.querySelector(`[data-math_speak_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mjun);
                                    const nextCell = document.querySelector(`[data-math_speak_mjun="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mjun);
                                    const nextCell = document.querySelector(`[data-k_writing_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mjun);
                                    const nextCell = document.querySelector(`[data-k_writing_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mjun);
                                    const nextCell = document.querySelector(`[data-k_writing_mjun="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mjun);
                                    const nextCell = document.querySelector(`[data-k_dictation_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mjun);
                                    const nextCell = document.querySelector(`[data-k_dictation_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mjun);
                                    const nextCell = document.querySelector(`[data-k_dictation_mjun="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mjun);
                                    const nextCell = document.querySelector(`[data-k_reading_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mjun);
                                    const nextCell = document.querySelector(`[data-k_reading_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mjun);
                                    const nextCell = document.querySelector(`[data-k_reading_mjun="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_speak_mjun);
                                    const nextCell = document.querySelector(`[data-k_speak_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_speak_mjun);
                                    const nextCell = document.querySelector(`[data-k_speak_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_speak_mjun);
                                    const nextCell = document.querySelector(`[data-k_speak_mjun="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_listen_mjun);
                                    const nextCell = document.querySelector(`[data-k_listen_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_listen_mjun);
                                    const nextCell = document.querySelector(`[data-k_listen_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_listen_mjun);
                                    const nextCell = document.querySelector(`[data-k_listen_mjun="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });


                            show_hearder.innerHTML = h;
                            table.innerHTML += n;
                            show_hearder_print.innerHTML = h;
                            table_print.innerHTML += n;

                        }, 200);

                    })
                    //Sort array and get rank number
                    student_rank.sort((a, b) => {
                        if (a.st_average > b.st_average) return -1;
                        if (a.st_average < b.st_average) return 1;
                        return 0;
                    });

                    for (let i = 0; i < student_rank.length; i++) {
                        let avg = student_rank[i].st_average;


                        let studentsWithRank = student_rank.filter(
                            (student) => student.st_average === avg

                        );
                        for (let student of studentsWithRank) {
                            student.Rank = i + 1;
                        }
                        i += studentsWithRank.length - 1;
                    }
                    let num = "";
                    //get Data sort to new array and save to localStorage
                    student_rank.forEach((student) => {
                        var id = student.id;
                        var gender = student.gender;
                        var total_all_score = student.total_all_score;
                        var average = student.st_average;
                        var rank = student.Rank;
                        if (!total_all_score) {

                            total_all_score = total_all_score.toFixed(2);
                        }

                        num++;

                        //Mention average
                        let mention = '';
                        var my = parseFloat(average);
                        if (my <= 4.9) {
                            mention = "ខ្សោយ"
                        } else if (my <= 6.49) {
                            mention = "មធ្យម"
                        } else if (my <= 7.99) {
                            mention = "ល្អបង្គួរ";
                        } else if (my <= 9.49) {
                            mention = "ល្អ";
                        } else if (my <= 10) {
                            mention = "ល្អណាស់";
                        }
                        let mention_fail = '';
                        var my = parseFloat(average);
                        if (my <= 4.9) {
                            mention_fail = "Poor"
                        } else if (my <= 6.49) {
                            mention_fail = "Average"
                        } else if (my <= 7.99) {
                            mention_fail = "Fairly Good";
                        } else if (my <= 9.49) {
                            mention_fail = "Good";
                        } else if (my <= 10) {
                            mention_fail = "Very Good";
                        }
                        let sex = '';
                        if (gender == 'ស') { sex = 'F' };
                        if (gender == 'ប') { sex = 'M' };

                        let new_gender = '';
                        if (gender == 'ស') { new_gender = 'ស' };
                        if (gender == 'ប') { new_gender = 'ប' };

                        firebase
                            .database()
                            .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                            .update({
                                average_mjun: average,
                                rank_mjun: rank,
                            });
                        let h = `
                                        <th class="border-dark text_table">ល.រ</th>
                                        <th class="border-dark text_table" style="width:15vh;">គោត្តនាម-នាម</th>
                                        <th class="border-dark text_table">ភេទ</th>
                                        <th class="border-dark text_table">ពិន្ទុសរុប</th>
                                        <th class="border-dark text_table">មធ្យមភាគ</th>
                                        <th class="border-dark text_table" style="width:8vh;">ចំណាត់ថ្នាក់</th>
                                        <th class="border-dark text_table">និទ្ទេស</th>
                                        <th class="border-dark text_table">ផ្សេងៗ</th>
        
                                        `;
                        let n = `
                                        <td class="border-dark text-center text_table">${num}</td>
                                        <td class="border-dark text-start text_table" style="width:15vh;">${id}</td>
                                        <td class="border-dark text-center text_table">${new_gender}</td>
                                        <td class="border-dark text-center text_table fw-bold">${total_all_score}</td>
                                        <td class="border-dark text-center text_table fw-bold">${average}</td>
                                        <td class="border-dark text-center text_table" style="color:red;width:8vh;">${rank}</td>
                                        <td class="border-dark text-center text_table" style="color:red;">${mention}</td>
                                        <td class="border-dark text-center text_table"></td>
                                        <td class="border-dark text-center text_table" style="display: none;">${mention_fail}${sex}</td>
                                        `;
                        table_result.innerHTML += n;
                        show_hearder_result.innerHTML = h;

                    })
                }
                if (primary_g_p2.includes(dbGrade)) {
                    datas.forEach((d) => {
                        var id = d.val().id;
                        var user_grade = d.val().user_grade;
                        var gender = d.val().gender;
                        var average = d.val().average_mjun;
                        var rank = d.val().rank_mjun;

                        var k_reading_mjun = d.val().k_reading_mjun;
                        var k_dictation_mjun = d.val().k_dictation_mjun;
                        var k_writing_mjun = d.val().k_writing_mjun;
                        var k_grammar_mjun = d.val().k_grammar_mjun;
                        var k_homework_mjun = d.val().k_homework_mjun;

                        var math_speak_mjun = d.val().math_speak_mjun;
                        var math_mjun = d.val().math_mjun;
                        var math_h_mjun = d.val().math_h_mjun;

                        var sci_mjun = d.val().sci_mjun;
                        var sci_h_mjun = d.val().sci_h_mjun;

                        var soc_h_mjun = d.val().soc_h_mjun;

                        var e_mjun = d.val().e_mjun;
                        var e_h_mjun = d.val().e_h_mjun;

                        var pe_mjun = d.val().pe_mjun;
                        var geor_mjun = d.val().geor_mjun;
                        var hist_mjun = d.val().hist_mjun;
                        var moral_mjun = d.val().moral_mjun;

                        let noSp = id.replace(/\s+/g, "");

                        if (!k_reading_mjun) { k_reading_mjun = 0 };
                        if (!k_dictation_mjun) { k_dictation_mjun = 0 };
                        if (!k_writing_mjun) { k_writing_mjun = 0 };
                        if (!k_grammar_mjun) { k_grammar_mjun = 0 };
                        if (!k_homework_mjun) { k_homework_mjun = 0 };

                        if (!math_speak_mjun) { math_speak_mjun = 0 };
                        if (!math_mjun) { math_mjun = 0 };
                        if (!math_h_mjun) { math_h_mjun = 0 };

                        if (!sci_mjun) { sci_mjun = 0 };
                        if (!sci_h_mjun) { sci_h_mjun = 0 };

                        if (!soc_h_mjun) { soc_h_mjun = 0 };

                        if (!e_mjun) { e_mjun = 0 };
                        if (!e_h_mjun) { e_h_mjun = 0 };

                        if (!pe_mjun) { pe_mjun = 0 };
                        if (!geor_mjun) { geor_mjun = 0 };
                        if (!hist_mjun) { hist_mjun = 0 };
                        if (!moral_mjun) { moral_mjun = 0 };
                        //Total all score
                        var total_all_score =
                            parseFloat(k_reading_mjun) +
                            parseFloat(k_dictation_mjun) +
                            parseFloat(k_writing_mjun) +
                            parseFloat(k_grammar_mjun) +
                            parseFloat(k_homework_mjun) +
                            parseFloat(math_speak_mjun) +
                            parseFloat(math_mjun) +
                            parseFloat(math_h_mjun) +
                            parseFloat(sci_mjun) +
                            parseFloat(sci_h_mjun) +
                            parseFloat(soc_h_mjun) +
                            parseFloat(geor_mjun) +
                            parseFloat(hist_mjun) +
                            parseFloat(moral_mjun) +
                            parseFloat(e_mjun) +
                            parseFloat(e_h_mjun) +
                            parseFloat(pe_mjun);
                        if (!total_all_score) { total_all_score = "00" }
                        //មធ្យមភាគ
                        var st_average =
                            parseFloat(total_all_score) / dbdivid;
                        st_average = st_average.toFixed(2);

                        student_rank.push({
                            id,
                            user_grade,
                            st_average,
                            total_all_score,
                            gender,
                            k_reading_mjun,
                            k_dictation_mjun,
                            k_writing_mjun,
                            k_homework_mjun,
                            math_speak_mjun,
                            math_mjun,
                            math_h_mjun,
                            sci_mjun,
                            sci_h_mjun,
                            soc_h_mjun,
                            e_mjun,
                            e_h_mjun,
                            pe_mjun,
                        })
                        setTimeout(() => {
                            //Mention average
                            let mention = '';
                            var my = parseFloat(average);
                            if (my <= 4.9) {
                                mention = "ខ្សោយ"
                            } else if (my <= 6.49) {
                                mention = "មធ្យម"
                            } else if (my <= 7.99) {
                                mention = "ល្អបង្គួរ";
                            } else if (my <= 9.49) {
                                mention = "ល្អ";
                            } else if (my <= 10) {
                                mention = "ល្អណាស់";
                            }

                            N0++;
                            let h = `
                                        <th class="border-dark">ល.រ</th>
                                        <th class="border-dark">ឈ្មោះ</th>
                                        <th class="border-dark">ភេទ</th>
                                        <th class="border-dark">អំណាន</th>
                                        <th class="border-dark">សរសេរតាមអាន</th>
                                        <th class="border-dark">តែងសេចក្តី</th>
                                        <th class="border-dark">វេយ្យាករណ៍</th>
                                        <th class="border-dark">គ.ផ្ទាល់មាត់</th>
                                        <th class="border-dark">គណិតវិទ្យា</th>
                                        <th class="border-dark">គ.កិច្ចការផ្ទះ</th>
                                        <th class="border-dark">វិទ្យាសាស្រ្ត</th>
                                        <th class="border-dark">ភូមិវិទ្យា</th>
                                        <th class="border-dark">ប្រវត្តិវិទ្យា</th>
                                        <th class="border-dark">ពលរដ្ឋ</th>
                                        <th class="border-dark">កិ.(ខ្មែរ)</th>
                                        <th class="border-dark">កិ.(វិទ្យា)</th>
                                        <th class="border-dark">កិ.(សិក្សា)</th>
                                        <th class="border-dark">កិ.(អង់គ្លេស)</th>
                                        <th class="border-dark">កីឡា</th>
                                        <th class="border-dark">អង់គ្លេស</th>
                                        <th class="border-dark">ពិន្ទុសរុប</th>
                                        <th class="border-dark">មធ្យមភាគ</th>
                                        <th class="border-dark">ចំណាត់ថ្នាក់</th>
                                        <th class="border-dark">និទ្ទេស</th>
                                        
        
                                        `
                            let n = `
                                        <td class="border-dark text-center">${N0}</td>
                                        <td class="border-dark">${id}</td>
                                        <td class="border-dark text-center">${gender}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_reading_mjun="${N0}" id="${noSp}k_reading_mjun">${k_reading_mjun}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_dictation_mjun="${N0}" id="${noSp}k_dictation_mjun">${k_dictation_mjun}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_writing_mjun="${N0}" id="${noSp}k_writing_mjun">${k_writing_mjun}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_grammar_mjun="${N0}" id="${noSp}k_grammar_mjun">${k_grammar_mjun}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_speak_mjun="${N0}" id="${noSp}math_speak_mjun">${math_speak_mjun}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_mjun="${N0}" id="${noSp}math_mjun">${math_mjun}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_h_mjun="${N0}" id="${noSp}math_h_mjun">${math_h_mjun}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-sci_mjun="${N0}" id="${noSp}sci_mjun">${sci_mjun}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-geor_mjun="${N0}" id="${noSp}geor_mjun">${geor_mjun}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-hist_mjun="${N0}" id="${noSp}hist_mjun">${hist_mjun}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-moral_mjun="${N0}" id="${noSp}moral_mjun">${moral_mjun}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_homework_mjun="${N0}" id="${noSp}k_homework_mjun">${k_homework_mjun}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-sci_h_mjun="${N0}" id="${noSp}sci_h_mjun">${sci_h_mjun}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-soc_h_mjun="${N0}" id="${noSp}soc_h_mjun">${soc_h_mjun}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-e_h_mjun="${N0}" id="${noSp}e_h_mjun">${e_h_mjun}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-pe_mjun="${N0}" id="${noSp}pe_mjun">${pe_mjun}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-e_mjun="${N0}" id="${noSp}e_mjun">${e_mjun}</td>
                                        <td class="border-dark text-center fw-bold">${total_all_score}</td>
                                        <td class="border-dark text-center fw-bold">${average}</td>
                                        <td class="border-dark text-center" style="color:red;">${rank}</td>
                                        <td class="border-dark text-center" style="color:red;">${mention}</td>
                                        `;
                            //Update data
                            setTimeout(() => {
                                document.getElementById(`${noSp}e_mjun`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}e_mjun`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            e_mjun: d,
                                        });
                                })
                                document.getElementById(`${noSp}pe_mjun`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}pe_mjun`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            pe_mjun: d,
                                        });
                                })
                                document.getElementById(`${noSp}e_h_mjun`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}e_h_mjun`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            e_h_mjun: d,
                                        });
                                })
                                document.getElementById(`${noSp}soc_h_mjun`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}soc_h_mjun`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            soc_h_mjun: d,
                                        });
                                })
                                document.getElementById(`${noSp}sci_h_mjun`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}sci_h_mjun`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            sci_h_mjun: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_homework_mjun`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_homework_mjun`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_homework_mjun: d,
                                        });
                                })
                                document.getElementById(`${noSp}sci_mjun`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}sci_mjun`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            sci_mjun: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_h_mjun`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_h_mjun`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_h_mjun: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_mjun`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_mjun`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_mjun: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_speak_mjun`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_speak_mjun`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_speak_mjun: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_grammar_mjun`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_grammar_mjun`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_grammar_mjun: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_writing_mjun`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_writing_mjun`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_writing_mjun: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_dictation_mjun`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_dictation_mjun`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_dictation_mjun: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_reading_mjun`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_reading_mjun`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_reading_mjun: d,
                                        });
                                })
                                document.getElementById(`${noSp}geor_mjun`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}geor_mjun`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            geor_mjun: d,
                                        });
                                })
                                document.getElementById(`${noSp}hist_mjun`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}hist_mjun`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            hist_mjun: d,
                                        });
                                })

                                document.getElementById(`${noSp}moral_mjun`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}moral_mjun`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            moral_mjun: d,
                                        });
                                })

                            }, 200);
                            //Key select
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mjun);
                                    const nextCell = document.querySelector(`[data-e_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mjun);
                                    const nextCell = document.querySelector(`[data-e_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mjun);
                                    const nextCell = document.querySelector(`[data-e_mjun="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mjun);
                                    const nextCell = document.querySelector(`[data-pe_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mjun);
                                    const nextCell = document.querySelector(`[data-pe_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mjun);
                                    const nextCell = document.querySelector(`[data-pe_mjun="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mjun);
                                    const nextCell = document.querySelector(`[data-e_h_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mjun);
                                    const nextCell = document.querySelector(`[data-e_h_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mjun);
                                    const nextCell = document.querySelector(`[data-e_h_mjun="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mjun);
                                    const nextCell = document.querySelector(`[data-soc_h_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mjun);
                                    const nextCell = document.querySelector(`[data-soc_h_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mjun);
                                    const nextCell = document.querySelector(`[data-soc_h_mjun="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mjun);
                                    const nextCell = document.querySelector(`[data-sci_h_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mjun);
                                    const nextCell = document.querySelector(`[data-sci_h_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mjun);
                                    const nextCell = document.querySelector(`[data-sci_h_mjun="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mjun);
                                    const nextCell = document.querySelector(`[data-k_homework_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mjun);
                                    const nextCell = document.querySelector(`[data-k_homework_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mjun);
                                    const nextCell = document.querySelector(`[data-k_homework_mjun="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mjun);
                                    const nextCell = document.querySelector(`[data-soc_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mjun);
                                    const nextCell = document.querySelector(`[data-soc_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mjun);
                                    const nextCell = document.querySelector(`[data-soc_mjun="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mjun);
                                    const nextCell = document.querySelector(`[data-sci_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mjun);
                                    const nextCell = document.querySelector(`[data-sci_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mjun);
                                    const nextCell = document.querySelector(`[data-sci_mjun="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mjun);
                                    const nextCell = document.querySelector(`[data-math_h_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mjun);
                                    const nextCell = document.querySelector(`[data-math_h_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mjun);
                                    const nextCell = document.querySelector(`[data-math_h_mjun="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mjun);
                                    const nextCell = document.querySelector(`[data-math_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mjun);
                                    const nextCell = document.querySelector(`[data-math_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mjun);
                                    const nextCell = document.querySelector(`[data-math_mjun="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mjun);
                                    const nextCell = document.querySelector(`[data-math_speak_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mjun);
                                    const nextCell = document.querySelector(`[data-math_speak_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mjun);
                                    const nextCell = document.querySelector(`[data-math_speak_mjun="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mjun);
                                    const nextCell = document.querySelector(`[data-k_writing_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mjun);
                                    const nextCell = document.querySelector(`[data-k_writing_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mjun);
                                    const nextCell = document.querySelector(`[data-k_writing_mjun="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mjun);
                                    const nextCell = document.querySelector(`[data-k_dictation_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mjun);
                                    const nextCell = document.querySelector(`[data-k_dictation_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mjun);
                                    const nextCell = document.querySelector(`[data-k_dictation_mjun="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mjun);
                                    const nextCell = document.querySelector(`[data-k_reading_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mjun);
                                    const nextCell = document.querySelector(`[data-k_reading_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mjun);
                                    const nextCell = document.querySelector(`[data-k_reading_mjun="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_grammar_mjun);
                                    const nextCell = document.querySelector(`[data-k_grammar_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_grammar_mjun);
                                    const nextCell = document.querySelector(`[data-k_grammar_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_grammar_mjun);
                                    const nextCell = document.querySelector(`[data-k_grammar_mjun="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.moral_mjun);
                                    const nextCell = document.querySelector(`[data-moral_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.moral_mjun);
                                    const nextCell = document.querySelector(`[data-moral_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.moral_mjun);
                                    const nextCell = document.querySelector(`[data-moral_mjun="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.hist_mjun);
                                    const nextCell = document.querySelector(`[data-hist_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.hist_mjun);
                                    const nextCell = document.querySelector(`[data-hist_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.hist_mjun);
                                    const nextCell = document.querySelector(`[data-hist_mjun="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.geor_mjun);
                                    const nextCell = document.querySelector(`[data-geor_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.geor_mjun);
                                    const nextCell = document.querySelector(`[data-geor_mjun="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.geor_mjun);
                                    const nextCell = document.querySelector(`[data-geor_mjun="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });

                            show_hearder.innerHTML = h;
                            table.innerHTML += n;
                            show_hearder_print.innerHTML = h;
                            table_print.innerHTML += n;

                        }, 200);

                    })
                    //Sort array and get rank number
                    student_rank.sort((a, b) => {
                        if (a.st_average > b.st_average) return -1;
                        if (a.st_average < b.st_average) return 1;
                        return 0;
                    });

                    for (let i = 0; i < student_rank.length; i++) {
                        let avg = student_rank[i].st_average;


                        let studentsWithRank = student_rank.filter(
                            (student) => student.st_average === avg

                        );
                        for (let student of studentsWithRank) {
                            student.Rank = i + 1;
                        }
                        i += studentsWithRank.length - 1;
                    }
                    let num = "";
                    //get Data sort to new array and save to localStorage
                    student_rank.forEach((student) => {
                        var id = student.id;
                        var gender = student.gender;
                        var total_all_score = student.total_all_score;
                        var average = student.st_average;
                        var rank = student.Rank;
                        if (!total_all_score) {

                            total_all_score = total_all_score.toFixed(2);
                        }

                        num++;

                        //Mention average
                        let mention = '';
                        var my = parseFloat(average);
                        if (my <= 4.9) {
                            mention = "ខ្សោយ"
                        } else if (my <= 6.49) {
                            mention = "មធ្យម"
                        } else if (my <= 7.99) {
                            mention = "ល្អបង្គួរ";
                        } else if (my <= 9.49) {
                            mention = "ល្អ";
                        } else if (my <= 10) {
                            mention = "ល្អណាស់";
                        }
                        let mention_fail = '';
                        var my = parseFloat(average);
                        if (my <= 4.9) {
                            mention_fail = "Poor"
                        } else if (my <= 6.49) {
                            mention_fail = "Average"
                        } else if (my <= 7.99) {
                            mention_fail = "Fairly Good";
                        } else if (my <= 9.49) {
                            mention_fail = "Good";
                        } else if (my <= 10) {
                            mention_fail = "Very Good";
                        }
                        let sex = '';
                        if (gender == 'ស') { sex = 'F' };
                        if (gender == 'ប') { sex = 'M' };

                        let new_gender = '';
                        if (gender == 'ស') { new_gender = 'ស' };
                        if (gender == 'ប') { new_gender = 'ប' };

                        firebase
                            .database()
                            .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                            .update({
                                average_mjun: average,
                                rank_mjun: rank,
                            });
                        let h = `
                                        <th class="border-dark text_table">ល.រ</th>
                                        <th class="border-dark text_table" style="width:15vh;">គោត្តនាម-នាម</th>
                                        <th class="border-dark text_table">ភេទ</th>
                                        <th class="border-dark text_table">ពិន្ទុសរុប</th>
                                        <th class="border-dark text_table">មធ្យមភាគ</th>
                                        <th class="border-dark text_table" style="width:8vh;">ចំណាត់ថ្នាក់</th>
                                        <th class="border-dark text_table">និទ្ទេស</th>
                                        <th class="border-dark text_table">ផ្សេងៗ</th>
        
                                        `;
                        let n = `
                                        <td class="border-dark text-center text_table">${num}</td>
                                        <td class="border-dark text-start text_table" style="width:15vh;">${id}</td>
                                        <td class="border-dark text-center text_table">${new_gender}</td>
                                        <td class="border-dark text-center text_table fw-bold">${total_all_score}</td>
                                        <td class="border-dark text-center text_table fw-bold">${average}</td>
                                        <td class="border-dark text-center text_table" style="color:red;width:8vh;">${rank}</td>
                                        <td class="border-dark text-center text_table" style="color:red;">${mention}</td>
                                        <td class="border-dark text-center text_table"></td>
                                        <td class="border-dark text-center text_table" style="display: none;">${mention_fail}${sex}</td>
                                        `;
                        table_result.innerHTML += n;
                        show_hearder_result.innerHTML = h;
                    })


                }
            }

            if (dbMonth == 'July') {
                if (primary_g_p1.includes(dbGrade)) {

                    datas.forEach((d) => {

                        var id = d.val().id;
                        var user_grade = d.val().user_grade;
                        var gender = d.val().gender;
                        var average = d.val().average_mjul;
                        var rank = d.val().rank_mjul;

                        var k_listen_mfee_mjul = d.val().k_listen_mfee_mjul;
                        var k_speak_mfee_mjul = d.val().k_speak_mfee_mjul;
                        var k_reading_mfee_mjul = d.val().k_reading_mfee_mjul;
                        var k_dictation_mfee_mjul = d.val().k_dictation_mfee_mjul;
                        var k_writing_mfee_mjul = d.val().k_writing_mfee_mjul;
                        var k_grammar_mfee_mjul = d.val().k_grammar_mfee_mjul;
                        var k_homework_mfee_mjul = d.val().k_homework_mfee_mjul;

                        var math_speak_mfee_mjul = d.val().math_speak_mfee_mjul;
                        var math_mfee_mjul = d.val().math_mfee_mjul;
                        var math_h_mfee_mjul = d.val().math_h_mfee_mjul;

                        var sci_mfee_mjul = d.val().sci_mfee_mjul;
                        var sci_h_mfee_mjul = d.val().sci_h_mfee_mjul;

                        var soc_mfee_mjul = d.val().soc_mfee_mjul;
                        var soc_h_mfee_mjul = d.val().soc_h_mfee_mjul;

                        var e_mjul = d.val().e_mjul;
                        var e_h_mfee_mjul = d.val().e_h_mfee_mjul;

                        var pe_mjul = d.val().pe_mjul;

                        let noSp = id.replace(/\s+/g, "");

                        if (!k_listen_mfee_mjul) { k_listen_mfee_mjul = 0 };
                        if (!k_speak_mfee_mjul) { k_speak_mfee_mjul = 0 };
                        if (!k_reading_mfee_mjul) { k_reading_mfee_mjul = 0 };
                        if (!k_dictation_mfee_mjul) { k_dictation_mfee_mjul = 0 };
                        if (!k_writing_mfee_mjul) { k_writing_mfee_mjul = 0 };
                        if (!k_grammar_mfee_mjul) { k_grammar_mfee_mjul = 0 };
                        if (!k_homework_mfee_mjul) { k_homework_mfee_mjul = 0 };

                        if (!math_speak_mfee_mjul) { math_speak_mfee_mjul = 0 };
                        if (!math_mfee_mjul) { math_mfee_mjul = 0 };
                        if (!math_h_mfee_mjul) { math_h_mfee_mjul = 0 };

                        if (!sci_mfee_mjul) { sci_mfee_mjul = 0 };
                        if (!sci_h_mfee_mjul) { sci_h_mfee_mjul = 0 };

                        if (!soc_mfee_mjul) { soc_mfee_mjul = 0 };
                        if (!soc_h_mfee_mjul) { soc_h_mfee_mjul = 0 };

                        if (!e_mjul) { e_mjul = 0 };
                        if (!e_h_mfee_mjul) { e_h_mfee_mjul = 0 };

                        if (!pe_mjul) { pe_mjul = 0 };

                        //Total all score
                        var total_all_score =
                            parseFloat(k_listen_mfee_mjul) +
                            parseFloat(k_speak_mfee_mjul) +
                            parseFloat(k_reading_mfee_mjul) +
                            parseFloat(k_dictation_mfee_mjul) +
                            parseFloat(k_writing_mfee_mjul) +
                            parseFloat(k_homework_mfee_mjul) +
                            parseFloat(math_speak_mfee_mjul) +
                            parseFloat(math_mfee_mjul) +
                            parseFloat(math_h_mfee_mjul) +
                            parseFloat(sci_mfee_mjul) +
                            parseFloat(sci_h_mfee_mjul) +
                            parseFloat(soc_mfee_mjul) +
                            parseFloat(soc_h_mfee_mjul) +
                            parseFloat(e_mjul) +
                            parseFloat(e_h_mfee_mjul) +
                            parseFloat(pe_mjul);
                        total_all_score = total_all_score.toFixed(2)

                        if (!total_all_score) { total_all_score = "00" }
                        //មធ្យមភាគ
                        var st_average =
                            parseFloat(total_all_score) / dbdivid;
                        st_average = st_average.toFixed(2);

                        student_rank.push({
                            id,
                            user_grade,
                            st_average,
                            total_all_score,
                            gender,
                            k_listen_mfee_mjul,
                            k_speak_mfee_mjul,
                            k_reading_mfee_mjul,
                            k_dictation_mfee_mjul,
                            k_writing_mfee_mjul,
                            k_homework_mfee_mjul,
                            math_speak_mfee_mjul,
                            math_mfee_mjul,
                            math_h_mfee_mjul,
                            sci_mfee_mjul,
                            sci_h_mfee_mjul,
                            soc_mfee_mjul,
                            soc_h_mfee_mjul,
                            e_mjul,
                            e_h_mfee_mjul,
                            pe_mjul,
                        })
                        setTimeout(() => {
                            N0++;

                            //Mention average
                            let mention = '';
                            var my = parseFloat(average);
                            if (my <= 4.9) {
                                mention = "ខ្សោយ"
                            } else if (my <= 6.49) {
                                mention = "មធ្យម"
                            } else if (my <= 7.99) {
                                mention = "ល្អបង្គួរ";
                            } else if (my <= 9.49) {
                                mention = "ល្អ";
                            } else if (my <= 10) {
                                mention = "ល្អណាស់";
                            }

                            let h = `
                                        <th class="border-dark">ល.រ</th>
                                        <th class="border-dark">ឈ្មោះ</th>
                                        <th class="border-dark">ភេទ</th>
                                        <th class="border-dark">ការស្តាប់</th>
                                        <th class="border-dark">ការនិយាយ</th>
                                        <th class="border-dark">អំណាន</th>
                                        <th class="border-dark">សរសេរតាមអាន</th>
                                        <th class="border-dark">តែងសេចក្តី</th>
                                        <th class="border-dark">គ.ផ្ទាល់មាត់</th>
                                        <th class="border-dark">គណិតវិទ្យា</th>
                                        <th class="border-dark">គ.កិច្ចការផ្ទះ</th>
                                        <th class="border-dark">វិទ្យាសាស្ត្រ</th>
                                        <th class="border-dark">សិក្សាសង្គម</th>
                                        <th class="border-dark">កិ.(ខ្មែរ)</th>
                                        <th class="border-dark">កិ.(វិទ្យា)</th>
                                        <th class="border-dark">កិ.(សិក្សា)</th>
                                        <th class="border-dark">កិ.(អង់គ្លេស)</th>
                                        <th class="border-dark">កីឡា</th>
                                        <th class="border-dark">អង់គ្លេស</th>
                                        <th class="border-dark">ពិន្ទុសរុប</th>
                                        <th class="border-dark">មធ្យមភាគ</th>
                                        <th class="border-dark">ចំណាត់ថ្នាក់</th>
                                        <th class="border-dark">និទ្ទេស</th>
                                        
        
                                        `
                            let n = `
                                        <td class="border-dark text-center">${N0}</td>
                                        <td class="border-dark">${id}</td>
                                        <td class="border-dark text-center"">${gender}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_listen_mfee_mjul="${N0}" id="${noSp}k_listen_mfee_mjul">${k_listen_mfee_mjul}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_speak_mfee_mjul="${N0}" id="${noSp}k_speak_mfee_mjul">${k_speak_mfee_mjul}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_reading_mfee_mjul="${N0}" id="${noSp}k_reading_mfee_mjul">${k_reading_mfee_mjul}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_dictation_mfee_mjul="${N0}" id="${noSp}k_dictation_mfee_mjul">${k_dictation_mfee_mjul}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_writing_mfee_mjul="${N0}" id="${noSp}k_writing_mfee_mjul">${k_writing_mfee_mjul}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_speak_mfee_mjul="${N0}" id="${noSp}math_speak_mfee_mjul">${math_speak_mfee_mjul}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_mfee_mjul="${N0}" id="${noSp}math_mfee_mjul">${math_mfee_mjul}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_h_mfee_mjul="${N0}" id="${noSp}math_h_mfee_mjul">${math_h_mfee_mjul}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-sci_mfee_mjul="${N0}" id="${noSp}sci_mfee_mjul">${sci_mfee_mjul}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-soc_mfee_mjul="${N0}" id="${noSp}soc_mfee_mjul">${soc_mfee_mjul}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_homework_mfee_mjul="${N0}" id="${noSp}k_homework_mfee_mjul">${k_homework_mfee_mjul}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-sci_h_mfee_mjul="${N0}" id="${noSp}sci_h_mfee_mjul">${sci_h_mfee_mjul}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-soc_h_mfee_mjul="${N0}" id="${noSp}soc_h_mfee_mjul">${soc_h_mfee_mjul}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-e_h_mfee_mjul="${N0}" id="${noSp}e_h_mfee_mjul">${e_h_mfee_mjul}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-pe_mjul="${N0}" id="${noSp}pe_mjul">${pe_mjul}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-e_mjul="${N0}" id="${noSp}e_mjul">${e_mjul}</td>
                                        <td class="border-dark text-center fw-bold">${total_all_score}</td>
                                        <td class="border-dark text-center fw-bold">${average}</td>
                                        <td class="border-dark text-center" style="color:red;">${rank}</td>
                                        <td class="border-dark text-center" style="color:red;">${mention}</td>
                                        `;
                            //Update data
                            setTimeout(() => {
                                document.getElementById(`${noSp}e_mjul`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}e_mjul`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            e_mjul: d,
                                        });
                                })
                                document.getElementById(`${noSp}pe_mjul`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}pe_mjul`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            pe_mjul: d,
                                        });
                                })
                                document.getElementById(`${noSp}e_h_mfee_mjul`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}e_h_mfee_mjul`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            e_h_mfee_mjul: d,
                                        });
                                })
                                document.getElementById(`${noSp}soc_h_mfee_mjul`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}soc_h_mfee_mjul`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            soc_h_mfee_mjul: d,
                                        });
                                })
                                document.getElementById(`${noSp}sci_h_mfee_mjul`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}sci_h_mfee_mjul`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            sci_h_mfee_mjul: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_homework_mfee_mjul`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_homework_mfee_mjul`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_homework_mfee_mjul: d,
                                        });
                                })
                                document.getElementById(`${noSp}soc_mfee_mjul`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}soc_mfee_mjul`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            soc_mfee_mjul: d,
                                        });
                                })
                                document.getElementById(`${noSp}sci_mfee_mjul`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}sci_mfee_mjul`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            sci_mfee_mjul: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_h_mfee_mjul`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_h_mfee_mjul`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_h_mfee_mjul: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_mfee_mjul`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_mfee_mjul`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_mfee_mjul: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_speak_mfee_mjul`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_speak_mfee_mjul`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_speak_mfee_mjul: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_writing_mfee_mjul`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_writing_mfee_mjul`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_writing_mfee_mjul: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_dictation_mfee_mjul`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_dictation_mfee_mjul`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_dictation_mfee_mjul: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_reading_mfee_mjul`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_reading_mfee_mjul`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_reading_mfee_mjul: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_speak_mfee_mjul`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_speak_mfee_mjul`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_speak_mfee_mjul: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_listen_mfee_mjul`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_listen_mfee_mjul`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_listen_mfee_mjul: d,
                                        });
                                })

                            }, 200);
                            //Key select
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mjul);
                                    const nextCell = document.querySelector(`[data-e_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mjul);
                                    const nextCell = document.querySelector(`[data-e_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mjul);
                                    const nextCell = document.querySelector(`[data-e_mjul="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mjul);
                                    const nextCell = document.querySelector(`[data-pe_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mjul);
                                    const nextCell = document.querySelector(`[data-pe_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mjul);
                                    const nextCell = document.querySelector(`[data-pe_mjul="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-e_h_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-e_h_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-e_h_mfee_mjul="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-soc_h_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-soc_h_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-soc_h_mfee_mjul="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-sci_h_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-sci_h_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-sci_h_mfee_mjul="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-k_homework_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-k_homework_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-k_homework_mfee_mjul="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-soc_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-soc_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-soc_mfee_mjul="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-sci_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-sci_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-sci_mfee_mjul="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-math_h_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-math_h_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-math_h_mfee_mjul="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-math_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-math_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-math_mfee_mjul="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-math_speak_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-math_speak_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-math_speak_mfee_mjul="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-k_writing_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-k_writing_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-k_writing_mfee_mjul="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-k_dictation_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-k_dictation_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-k_dictation_mfee_mjul="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-k_reading_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-k_reading_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-k_reading_mfee_mjul="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_speak_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-k_speak_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_speak_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-k_speak_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_speak_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-k_speak_mfee_mjul="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_listen_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-k_listen_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_listen_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-k_listen_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_listen_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-k_listen_mfee_mjul="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });


                            show_hearder.innerHTML = h;
                            table.innerHTML += n;
                            show_hearder_print.innerHTML = h;
                            table_print.innerHTML += n;

                        }, 200);

                    })
                    //Sort array and get rank number
                    student_rank.sort((a, b) => {
                        if (a.st_average > b.st_average) return -1;
                        if (a.st_average < b.st_average) return 1;
                        return 0;
                    });

                    for (let i = 0; i < student_rank.length; i++) {
                        let avg = student_rank[i].st_average;


                        let studentsWithRank = student_rank.filter(
                            (student) => student.st_average === avg

                        );
                        for (let student of studentsWithRank) {
                            student.Rank = i + 1;
                        }
                        i += studentsWithRank.length - 1;
                    }
                    let num = "";
                    //get Data sort to new array and save to localStorage
                    student_rank.forEach((student) => {
                        var id = student.id;
                        var gender = student.gender;
                        var total_all_score = student.total_all_score;
                        var average = student.st_average;
                        var rank = student.Rank;
                 
                        if (!total_all_score) {

                            total_all_score = total_all_score.toFixed(2);
                        }

                        num++;

                        //Mention average
                        let mention = '';
                        var my = parseFloat(average);
                        if (my <= 4.9) {
                            mention = "ខ្សោយ"
                        } else if (my <= 6.49) {
                            mention = "មធ្យម"
                        } else if (my <= 7.99) {
                            mention = "ល្អបង្គួរ";
                        } else if (my <= 9.49) {
                            mention = "ល្អ";
                        } else if (my <= 10) {
                            mention = "ល្អណាស់";
                        }
                        let mention_fail = '';
                        var my = parseFloat(average);
                        if (my <= 4.9) {
                            mention_fail = "Poor"
                        } else if (my <= 6.49) {
                            mention_fail = "Average"
                        } else if (my <= 7.99) {
                            mention_fail = "Fairly Good";
                        } else if (my <= 9.49) {
                            mention_fail = "Good";
                        } else if (my <= 10) {
                            mention_fail = "Very Good";
                        }
                        let sex = '';
                        if (gender == 'ស') { sex = 'F' };
                        if (gender == 'ប') { sex = 'M' };

                        let new_gender = '';
                        if (gender == 'ស') { new_gender = 'ស' };
                        if (gender == 'ប') { new_gender = 'ប' };

                        firebase
                            .database()
                            .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                            .update({
                                average_mjul: average,
                                rank_mjul: rank,
                            });
                        let h = `
                                        <th class="border-dark text_table">ល.រ</th>
                                        <th class="border-dark text_table" style="width:15vh;">គោត្តនាម-នាម</th>
                                        <th class="border-dark text_table">ភេទ</th>
                                        <th class="border-dark text_table">ពិន្ទុសរុប</th>
                                        <th class="border-dark text_table">មធ្យមភាគ</th>
                                        <th class="border-dark text_table" style="width:8vh;">ចំណាត់ថ្នាក់</th>
                                        <th class="border-dark text_table">និទ្ទេស</th>
                                        <th class="border-dark text_table">ផ្សេងៗ</th>
        
                                        `;
                        let n = `
                                        <td class="border-dark text-center text_table">${num}</td>
                                        <td class="border-dark text-start text_table" style="width:15vh;">${id}</td>
                                        <td class="border-dark text-center text_table">${new_gender}</td>
                                        <td class="border-dark text-center text_table fw-bold">${total_all_score}</td>
                                        <td class="border-dark text-center text_table fw-bold">${average}</td>
                                        <td class="border-dark text-center text_table" style="color:red;width:8vh;">${rank}</td>
                                        <td class="border-dark text-center text_table" style="color:red;">${mention}</td>
                                        <td class="border-dark text-center text_table"></td>
                                        <td class="border-dark text-center text_table" style="display: none;">${mention_fail}${sex}</td>
                                        `;
                        table_result.innerHTML += n;
                        show_hearder_result.innerHTML = h;

                    })
                }
                if (primary_g_p2.includes(dbGrade)) {
                    datas.forEach((d) => {
                        var id = d.val().id;
                        var user_grade = d.val().user_grade;
                        var gender = d.val().gender;
                        var average = d.val().average_mjul;
                        var rank = d.val().rank_mjul;

                        var k_reading_mfee_mjul = d.val().k_reading_mfee_mjul;
                        var k_dictation_mfee_mjul = d.val().k_dictation_mfee_mjul;
                        var k_writing_mfee_mjul = d.val().k_writing_mfee_mjul;
                        var k_grammar_mfee_mjul = d.val().k_grammar_mfee_mjul;
                        var k_homework_mfee_mjul = d.val().k_homework_mfee_mjul;

                        var math_speak_mfee_mjul = d.val().math_speak_mfee_mjul;
                        var math_mfee_mjul = d.val().math_mfee_mjul;
                        var math_h_mfee_mjul = d.val().math_h_mfee_mjul;

                        var sci_mfee_mjul = d.val().sci_mfee_mjul;
                        var sci_h_mfee_mjul = d.val().sci_h_mfee_mjul;

                        var soc_h_mfee_mjul = d.val().soc_h_mfee_mjul;

                        var e_mjul = d.val().e_mjul;
                        var e_h_mfee_mjul = d.val().e_h_mfee_mjul;

                        var pe_mjul = d.val().pe_mjul;
                        var geor_mfee_mjul = d.val().geor_mfee_mjul;
                        var hist_mfee_mjul = d.val().hist_mfee_mjul;
                        var moral_mfee_mjul = d.val().moral_mfee_mjul;

                        let noSp = id.replace(/\s+/g, "");

                        if (!k_reading_mfee_mjul) { k_reading_mfee_mjul = 0 };
                        if (!k_dictation_mfee_mjul) { k_dictation_mfee_mjul = 0 };
                        if (!k_writing_mfee_mjul) { k_writing_mfee_mjul = 0 };
                        if (!k_grammar_mfee_mjul) { k_grammar_mfee_mjul = 0 };
                        if (!k_homework_mfee_mjul) { k_homework_mfee_mjul = 0 };

                        if (!math_speak_mfee_mjul) { math_speak_mfee_mjul = 0 };
                        if (!math_mfee_mjul) { math_mfee_mjul = 0 };
                        if (!math_h_mfee_mjul) { math_h_mfee_mjul = 0 };

                        if (!sci_mfee_mjul) { sci_mfee_mjul = 0 };
                        if (!sci_h_mfee_mjul) { sci_h_mfee_mjul = 0 };

                        if (!soc_h_mfee_mjul) { soc_h_mfee_mjul = 0 };

                        if (!e_mjul) { e_mjul = 0 };
                        if (!e_h_mfee_mjul) { e_h_mfee_mjul = 0 };

                        if (!pe_mjul) { pe_mjul = 0 };
                        if (!geor_mfee_mjul) { geor_mfee_mjul = 0 };
                        if (!hist_mfee_mjul) { hist_mfee_mjul = 0 };
                        if (!moral_mfee_mjul) { moral_mfee_mjul = 0 };
                        //Total all score
                        var total_all_score =
                            parseFloat(k_reading_mfee_mjul) +
                            parseFloat(k_dictation_mfee_mjul) +
                            parseFloat(k_writing_mfee_mjul) +
                            parseFloat(k_grammar_mfee_mjul) +
                            parseFloat(k_homework_mfee_mjul) +
                            parseFloat(math_speak_mfee_mjul) +
                            parseFloat(math_mfee_mjul) +
                            parseFloat(math_h_mfee_mjul) +
                            parseFloat(sci_mfee_mjul) +
                            parseFloat(sci_h_mfee_mjul) +
                            parseFloat(soc_h_mfee_mjul) +
                            parseFloat(geor_mfee_mjul) +
                            parseFloat(hist_mfee_mjul) +
                            parseFloat(moral_mfee_mjul) +
                            parseFloat(e_mjul) +
                            parseFloat(e_h_mfee_mjul) +
                            parseFloat(pe_mjul);
                        total_all_score = total_all_score.toFixed(2)
                        if (!total_all_score) { total_all_score = "00" }
                        //មធ្យមភាគ
                        var st_average =
                            parseFloat(total_all_score) / dbdivid;
                        st_average = st_average.toFixed(2);
                        student_rank.push({
                            id,
                            user_grade,
                            st_average,
                            total_all_score,
                            gender,
                            k_reading_mfee_mjul,
                            k_dictation_mfee_mjul,
                            k_writing_mfee_mjul,
                            k_homework_mfee_mjul,
                            math_speak_mfee_mjul,
                            math_mfee_mjul,
                            math_h_mfee_mjul,
                            sci_mfee_mjul,
                            sci_h_mfee_mjul,
                            soc_h_mfee_mjul,
                            e_mjul,
                            e_h_mfee_mjul,
                            pe_mjul,
                        })
                        setTimeout(() => {
                            //Mention average
                            let mention = '';
                            var my = parseFloat(average);
                            if (my <= 4.9) {
                                mention = "ខ្សោយ"
                            } else if (my <= 6.49) {
                                mention = "មធ្យម"
                            } else if (my <= 7.99) {
                                mention = "ល្អបង្គួរ";
                            } else if (my <= 9.49) {
                                mention = "ល្អ";
                            } else if (my <= 10) {
                                mention = "ល្អណាស់";
                            }

                            N0++;
                            let h = `
                                        <th class="border-dark">ល.រ</th>
                                        <th class="border-dark">ឈ្មោះ</th>
                                        <th class="border-dark">ភេទ</th>
                                        <th class="border-dark">អំណាន</th>
                                        <th class="border-dark">សរសេរតាមអាន</th>
                                        <th class="border-dark">តែងសេចក្តី</th>
                                        <th class="border-dark">វេយ្យាករណ៍</th>
                                        <th class="border-dark">គ.ផ្ទាល់មាត់</th>
                                        <th class="border-dark">គណិតវិទ្យា</th>
                                        <th class="border-dark">គ.កិច្ចការផ្ទះ</th>
                                        <th class="border-dark">វិទ្យាសាស្រ្ត</th>
                                        <th class="border-dark">ភូមិវិទ្យា</th>
                                        <th class="border-dark">ប្រវត្តិវិទ្យា</th>
                                        <th class="border-dark">ពលរដ្ឋ</th>
                                        <th class="border-dark">កិ.(ខ្មែរ)</th>
                                        <th class="border-dark">កិ.(វិទ្យា)</th>
                                        <th class="border-dark">កិ.(សិក្សា)</th>
                                        <th class="border-dark">កិ.(អង់គ្លេស)</th>
                                        <th class="border-dark">កីឡា</th>
                                        <th class="border-dark">អង់គ្លេស</th>
                                        <th class="border-dark">ពិន្ទុសរុប</th>
                                        <th class="border-dark">មធ្យមភាគ</th>
                                        <th class="border-dark">ចំណាត់ថ្នាក់</th>
                                        <th class="border-dark">និទ្ទេស</th>
                                        
        
                                        `
                            let n = `
                                        <td class="border-dark text-center">${N0}</td>
                                        <td class="border-dark">${id}</td>
                                        <td class="border-dark text-center">${gender}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_reading_mfee_mjul="${N0}" id="${noSp}k_reading_mfee_mjul">${k_reading_mfee_mjul}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_dictation_mfee_mjul="${N0}" id="${noSp}k_dictation_mfee_mjul">${k_dictation_mfee_mjul}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_writing_mfee_mjul="${N0}" id="${noSp}k_writing_mfee_mjul">${k_writing_mfee_mjul}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_grammar_mfee_mjul="${N0}" id="${noSp}k_grammar_mfee_mjul">${k_grammar_mfee_mjul}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_speak_mfee_mjul="${N0}" id="${noSp}math_speak_mfee_mjul">${math_speak_mfee_mjul}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_mfee_mjul="${N0}" id="${noSp}math_mfee_mjul">${math_mfee_mjul}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_h_mfee_mjul="${N0}" id="${noSp}math_h_mfee_mjul">${math_h_mfee_mjul}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-sci_mfee_mjul="${N0}" id="${noSp}sci_mfee_mjul">${sci_mfee_mjul}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-geor_mfee_mjul="${N0}" id="${noSp}geor_mfee_mjul">${geor_mfee_mjul}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-hist_mfee_mjul="${N0}" id="${noSp}hist_mfee_mjul">${hist_mfee_mjul}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-moral_mfee_mjul="${N0}" id="${noSp}moral_mfee_mjul">${moral_mfee_mjul}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_homework_mfee_mjul="${N0}" id="${noSp}k_homework_mfee_mjul">${k_homework_mfee_mjul}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-sci_h_mfee_mjul="${N0}" id="${noSp}sci_h_mfee_mjul">${sci_h_mfee_mjul}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-soc_h_mfee_mjul="${N0}" id="${noSp}soc_h_mfee_mjul">${soc_h_mfee_mjul}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-e_h_mfee_mjul="${N0}" id="${noSp}e_h_mfee_mjul">${e_h_mfee_mjul}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-pe_mjul="${N0}" id="${noSp}pe_mjul">${pe_mjul}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-e_mjul="${N0}" id="${noSp}e_mjul">${e_mjul}</td>
                                        <td class="border-dark text-center fw-bold">${total_all_score}</td>
                                        <td class="border-dark text-center fw-bold">${average}</td>
                                        <td class="border-dark text-center" style="color:red;">${rank}</td>
                                        <td class="border-dark text-center" style="color:red;">${mention}</td>
                                        `;
                            //Update data
                            setTimeout(() => {
                                document.getElementById(`${noSp}e_mjul`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}e_mjul`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            e_mjul: d,
                                        });
                                })
                                document.getElementById(`${noSp}pe_mjul`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}pe_mjul`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            pe_mjul: d,
                                        });
                                })
                                document.getElementById(`${noSp}e_h_mfee_mjul`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}e_h_mfee_mjul`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            e_h_mfee_mjul: d,
                                        });
                                })
                                document.getElementById(`${noSp}soc_h_mfee_mjul`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}soc_h_mfee_mjul`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            soc_h_mfee_mjul: d,
                                        });
                                })
                                document.getElementById(`${noSp}sci_h_mfee_mjul`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}sci_h_mfee_mjul`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            sci_h_mfee_mjul: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_homework_mfee_mjul`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_homework_mfee_mjul`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_homework_mfee_mjul: d,
                                        });
                                })
                                document.getElementById(`${noSp}sci_mfee_mjul`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}sci_mfee_mjul`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            sci_mfee_mjul: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_h_mfee_mjul`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_h_mfee_mjul`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_h_mfee_mjul: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_mfee_mjul`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_mfee_mjul`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_mfee_mjul: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_speak_mfee_mjul`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_speak_mfee_mjul`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_speak_mfee_mjul: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_grammar_mfee_mjul`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_grammar_mfee_mjul`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_grammar_mfee_mjul: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_writing_mfee_mjul`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_writing_mfee_mjul`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_writing_mfee_mjul: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_dictation_mfee_mjul`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_dictation_mfee_mjul`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_dictation_mfee_mjul: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_reading_mfee_mjul`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_reading_mfee_mjul`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_reading_mfee_mjul: d,
                                        });
                                })
                                document.getElementById(`${noSp}geor_mfee_mjul`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}geor_mfee_mjul`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            geor_mfee_mjul: d,
                                        });
                                })
                                document.getElementById(`${noSp}hist_mfee_mjul`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}hist_mfee_mjul`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            hist_mfee_mjul: d,
                                        });
                                })

                                document.getElementById(`${noSp}moral_mfee_mjul`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}moral_mfee_mjul`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            moral_mfee_mjul: d,
                                        });
                                })

                            }, 200);
                            //Key select
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mjul);
                                    const nextCell = document.querySelector(`[data-e_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mjul);
                                    const nextCell = document.querySelector(`[data-e_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_mjul);
                                    const nextCell = document.querySelector(`[data-e_mjul="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mjul);
                                    const nextCell = document.querySelector(`[data-pe_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mjul);
                                    const nextCell = document.querySelector(`[data-pe_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_mjul);
                                    const nextCell = document.querySelector(`[data-pe_mjul="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-e_h_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-e_h_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-e_h_mfee_mjul="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-soc_h_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-soc_h_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-soc_h_mfee_mjul="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-sci_h_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-sci_h_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-sci_h_mfee_mjul="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-k_homework_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-k_homework_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-k_homework_mfee_mjul="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-soc_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-soc_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-soc_mfee_mjul="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-sci_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-sci_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-sci_mfee_mjul="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-math_h_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-math_h_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-math_h_mfee_mjul="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-math_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-math_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-math_mfee_mjul="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-math_speak_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-math_speak_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-math_speak_mfee_mjul="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-k_writing_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-k_writing_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-k_writing_mfee_mjul="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-k_dictation_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-k_dictation_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-k_dictation_mfee_mjul="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-k_reading_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-k_reading_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-k_reading_mfee_mjul="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_grammar_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-k_grammar_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_grammar_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-k_grammar_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_grammar_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-k_grammar_mfee_mjul="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.moral_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-moral_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.moral_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-moral_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.moral_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-moral_mfee_mjul="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.hist_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-hist_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.hist_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-hist_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.hist_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-hist_mfee_mjul="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.geor_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-geor_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.geor_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-geor_mfee_mjul="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.geor_mfee_mjul);
                                    const nextCell = document.querySelector(`[data-geor_mfee_mjul="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });

                            show_hearder.innerHTML = h;
                            table.innerHTML += n;
                            show_hearder_print.innerHTML = h;
                            table_print.innerHTML += n;

                        }, 200);

                    })
                    //Sort array and get rank number
                    student_rank.sort((a, b) => {
                        if (a.st_average > b.st_average) return -1;
                        if (a.st_average < b.st_average) return 1;
                        return 0;
                    });

                    for (let i = 0; i < student_rank.length; i++) {
                        let avg = student_rank[i].st_average;


                        let studentsWithRank = student_rank.filter(
                            (student) => student.st_average === avg

                        );
                        for (let student of studentsWithRank) {
                            student.Rank = i + 1;
                        }
                        i += studentsWithRank.length - 1;
                    }
                    let num = "";
                    //get Data sort to new array and save to localStorage
                    student_rank.forEach((student) => {
                        var id = student.id;
                        var gender = student.gender;
                        var total_all_score = student.total_all_score;
                        var average = student.st_average;
                        var rank = student.Rank;
                        if (!total_all_score) {

                            total_all_score = total_all_score.toFixed(2);
                        }

                        num++;

                        //Mention average
                        let mention = '';
                        var my = parseFloat(average);
                        if (my <= 4.9) {
                            mention = "ខ្សោយ"
                        } else if (my <= 6.49) {
                            mention = "មធ្យម"
                        } else if (my <= 7.99) {
                            mention = "ល្អបង្គួរ";
                        } else if (my <= 9.49) {
                            mention = "ល្អ";
                        } else if (my <= 10) {
                            mention = "ល្អណាស់";
                        }
                        let mention_fail = '';
                        var my = parseFloat(average);
                        if (my <= 4.9) {
                            mention_fail = "Poor"
                        } else if (my <= 6.49) {
                            mention_fail = "Average"
                        } else if (my <= 7.99) {
                            mention_fail = "Fairly Good";
                        } else if (my <= 9.49) {
                            mention_fail = "Good";
                        } else if (my <= 10) {
                            mention_fail = "Very Good";
                        }
                        let sex = '';
                        if (gender == 'ស') { sex = 'F' };
                        if (gender == 'ប') { sex = 'M' };

                        let new_gender = '';
                        if (gender == 'ស') { new_gender = 'ស' };
                        if (gender == 'ប') { new_gender = 'ប' };

                        firebase
                            .database()
                            .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                            .update({
                                average_mjul: average,
                                rank_mjul: rank,
                            });
                        let h = `
                                        <th class="border-dark text_table">ល.រ</th>
                                        <th class="border-dark text_table" style="width:15vh;">គោត្តនាម-នាម</th>
                                        <th class="border-dark text_table">ភេទ</th>
                                        <th class="border-dark text_table">ពិន្ទុសរុប</th>
                                        <th class="border-dark text_table">មធ្យមភាគ</th>
                                        <th class="border-dark text_table" style="width:8vh;">ចំណាត់ថ្នាក់</th>
                                        <th class="border-dark text_table">និទ្ទេស</th>
                                        <th class="border-dark text_table">ផ្សេងៗ</th>
        
                                        `;
                        let n = `
                                        <td class="border-dark text-center text_table">${num}</td>
                                        <td class="border-dark text-start text_table" style="width:15vh;">${id}</td>
                                        <td class="border-dark text-center text_table">${new_gender}</td>
                                        <td class="border-dark text-center text_table fw-bold">${total_all_score}</td>
                                        <td class="border-dark text-center text_table fw-bold">${average}</td>
                                        <td class="border-dark text-center text_table" style="color:red;width:8vh;">${rank}</td>
                                        <td class="border-dark text-center text_table" style="color:red;">${mention}</td>
                                        <td class="border-dark text-center text_table"></td>
                                        <td class="border-dark text-center text_table" style="display: none;">${mention_fail}${sex}</td>
                                        `;
                        table_result.innerHTML += n;
                        show_hearder_result.innerHTML = h;
                    })


                }
            }

            if (dbMonth == '1st Semester') {
                if (primary_g_p1.includes(dbGrade)) {

                    datas.forEach((d) => {

                        var id = d.val().id;
                        var user_grade = d.val().user_grade;
                        var gender = d.val().gender;
                        var average = d.val().average_m1semester;
                        var rank = d.val().rank_m1semester;

                        var k_listen_m1semester = d.val().k_listen_m1semester;
                        var k_speak_m1semester = d.val().k_speak_m1semester;
                        var k_reading_m1semester = d.val().k_reading_m1semester;
                        var k_dictation_m1semester = d.val().k_dictation_m1semester;
                        var k_writing_m1semester = d.val().k_writing_m1semester;
                        var k_grammar_m1semester = d.val().k_grammar_m1semester;
                        var k_homework_m1semester = d.val().k_homework_m1semester;

                        var math_speak_m1semester = d.val().math_speak_m1semester;
                        var math_m1semester = d.val().math_m1semester;
                        var math_h_m1semester = d.val().math_h_m1semester;

                        var sci_m1semester = d.val().sci_m1semester;
                        var sci_h_m1semester = d.val().sci_h_m1semester;

                        var soc_m1semester = d.val().soc_m1semester;
                        var soc_h_m1semester = d.val().soc_h_m1semester;

                        var e_m1semester = d.val().e_m1semester;
                        var e_h_m1semester = d.val().e_h_m1semester;

                        var pe_m1semester = d.val().pe_m1semester;

                        let noSp = id.replace(/\s+/g, "");

                        if (!k_listen_m1semester) { k_listen_m1semester = 0 };
                        if (!k_speak_m1semester) { k_speak_m1semester = 0 };
                        if (!k_reading_m1semester) { k_reading_m1semester = 0 };
                        if (!k_dictation_m1semester) { k_dictation_m1semester = 0 };
                        if (!k_writing_m1semester) { k_writing_m1semester = 0 };
                        if (!k_grammar_m1semester) { k_grammar_m1semester = 0 };
                        if (!k_homework_m1semester) { k_homework_m1semester = 0 };

                        if (!math_speak_m1semester) { math_speak_m1semester = 0 };
                        if (!math_m1semester) { math_m1semester = 0 };
                        if (!math_h_m1semester) { math_h_m1semester = 0 };

                        if (!sci_m1semester) { sci_m1semester = 0 };
                        if (!sci_h_m1semester) { sci_h_m1semester = 0 };

                        if (!soc_m1semester) { soc_m1semester = 0 };
                        if (!soc_h_m1semester) { soc_h_m1semester = 0 };

                        if (!e_m1semester) { e_m1semester = 0 };
                        if (!e_h_m1semester) { e_h_m1semester = 0 };

                        if (!pe_m1semester) { pe_m1semester = 0 };

                        //Total all score
                        var total_all_score =
                            parseFloat(k_listen_m1semester) +
                            parseFloat(k_speak_m1semester) +
                            parseFloat(k_reading_m1semester) +
                            parseFloat(k_dictation_m1semester) +
                            parseFloat(k_writing_m1semester) +
                            parseFloat(k_homework_m1semester) +
                            parseFloat(math_speak_m1semester) +
                            parseFloat(math_m1semester) +
                            parseFloat(math_h_m1semester) +
                            parseFloat(sci_m1semester) +
                            parseFloat(sci_h_m1semester) +
                            parseFloat(soc_m1semester) +
                            parseFloat(soc_h_m1semester) +
                            parseFloat(e_m1semester) +
                            parseFloat(e_h_m1semester) +
                            parseFloat(pe_m1semester);
                        if (!total_all_score) { total_all_score = "00" }
                        //មធ្យមភាគ
                        var st_average =
                            parseFloat(total_all_score) / dbdivid;
                        st_average = st_average.toFixed(2);

                        student_rank.push({
                            id,
                            user_grade,
                            st_average,
                            total_all_score,
                            gender,
                            k_listen_m1semester,
                            k_speak_m1semester,
                            k_reading_m1semester,
                            k_dictation_m1semester,
                            k_writing_m1semester,
                            k_homework_m1semester,
                            math_speak_m1semester,
                            math_m1semester,
                            math_h_m1semester,
                            sci_m1semester,
                            sci_h_m1semester,
                            soc_m1semester,
                            soc_h_m1semester,
                            e_m1semester,
                            e_h_m1semester,
                            pe_m1semester,
                        })
                        setTimeout(() => {
                            N0++;

                            //Mention average
                            let mention = '';
                            var my = parseFloat(average);
                            if (my <= 4.9) {
                                mention = "ខ្សោយ"
                            } else if (my <= 6.49) {
                                mention = "មធ្យម"
                            } else if (my <= 7.99) {
                                mention = "ល្អបង្គួរ";
                            } else if (my <= 9.49) {
                                mention = "ល្អ";
                            } else if (my <= 10) {
                                mention = "ល្អណាស់";
                            }

                            let h = `
                                        <th class="border-dark">ល.រ</th>
                                        <th class="border-dark">ឈ្មោះ</th>
                                        <th class="border-dark">ភេទ</th>
                                        <th class="border-dark">ការស្តាប់</th>
                                        <th class="border-dark">ការនិយាយ</th>
                                        <th class="border-dark">អំណាន</th>
                                        <th class="border-dark">សរសេរតាមអាន</th>
                                        <th class="border-dark">តែងសេចក្តី</th>
                                        <th class="border-dark">គ.ផ្ទាល់មាត់</th>
                                        <th class="border-dark">គណិតវិទ្យា</th>
                                        <th class="border-dark">គ.កិច្ចការផ្ទះ</th>
                                        <th class="border-dark">វិទ្យាសាស្ត្រ</th>
                                        <th class="border-dark">សិក្សាសង្គម</th>
                                        <th class="border-dark">កិ.(ខ្មែរ)</th>
                                        <th class="border-dark">កិ.(វិទ្យា)</th>
                                        <th class="border-dark">កិ.(សិក្សា)</th>
                                        <th class="border-dark">កិ.(អង់គ្លេស)</th>
                                        <th class="border-dark">កីឡា</th>
                                        <th class="border-dark">អង់គ្លេស</th>
                                        <th class="border-dark">ពិន្ទុសរុប</th>
                                        <th class="border-dark">មធ្យមភាគ</th>
                                        <th class="border-dark">ចំណាត់ថ្នាក់</th>
                                        <th class="border-dark">និទ្ទេស</th>
                                        
        
                                        `
                            let n = `
                                        <td class="border-dark text-center">${N0}</td>
                                        <td class="border-dark">${id}</td>
                                        <td class="border-dark text-center"">${gender}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_listen_m1semester="${N0}" id="${noSp}k_listen_m1semester">${k_listen_m1semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_speak_m1semester="${N0}" id="${noSp}k_speak_m1semester">${k_speak_m1semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_reading_m1semester="${N0}" id="${noSp}k_reading_m1semester">${k_reading_m1semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_dictation_m1semester="${N0}" id="${noSp}k_dictation_m1semester">${k_dictation_m1semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_writing_m1semester="${N0}" id="${noSp}k_writing_m1semester">${k_writing_m1semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_speak_m1semester="${N0}" id="${noSp}math_speak_m1semester">${math_speak_m1semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_m1semester="${N0}" id="${noSp}math_m1semester">${math_m1semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_h_m1semester="${N0}" id="${noSp}math_h_m1semester">${math_h_m1semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-sci_m1semester="${N0}" id="${noSp}sci_m1semester">${sci_m1semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-soc_m1semester="${N0}" id="${noSp}soc_m1semester">${soc_m1semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_homework_m1semester="${N0}" id="${noSp}k_homework_m1semester">${k_homework_m1semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-sci_h_m1semester="${N0}" id="${noSp}sci_h_m1semester">${sci_h_m1semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-soc_h_m1semester="${N0}" id="${noSp}soc_h_m1semester">${soc_h_m1semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-e_h_m1semester="${N0}" id="${noSp}e_h_m1semester">${e_h_m1semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-pe_m1semester="${N0}" id="${noSp}pe_m1semester">${pe_m1semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-e_m1semester="${N0}" id="${noSp}e_m1semester">${e_m1semester}</td>
                                        <td class="border-dark text-center fw-bold">${total_all_score}</td>
                                        <td class="border-dark text-center fw-bold">${average}</td>
                                        <td class="border-dark text-center" style="color:red;">${rank}</td>
                                        <td class="border-dark text-center" style="color:red;">${mention}</td>
                                        `;
                            //Update data
                            setTimeout(() => {
                                document.getElementById(`${noSp}e_m1semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}e_m1semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            e_m1semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}pe_m1semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}pe_m1semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            pe_m1semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}e_h_m1semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}e_h_m1semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            e_h_m1semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}soc_h_m1semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}soc_h_m1semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            soc_h_m1semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}sci_h_m1semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}sci_h_m1semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            sci_h_m1semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_homework_m1semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_homework_m1semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_homework_m1semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}soc_m1semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}soc_m1semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            soc_m1semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}sci_m1semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}sci_m1semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            sci_m1semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_h_m1semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_h_m1semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_h_m1semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_m1semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_m1semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_m1semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_speak_m1semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_speak_m1semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_speak_m1semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_writing_m1semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_writing_m1semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_writing_m1semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_dictation_m1semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_dictation_m1semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_dictation_m1semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_reading_m1semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_reading_m1semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_reading_m1semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_speak_m1semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_speak_m1semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_speak_m1semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_listen_m1semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_listen_m1semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_listen_m1semester: d,
                                        });
                                })

                            }, 200);
                            //Key select
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_m1semester);
                                    const nextCell = document.querySelector(`[data-e_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_m1semester);
                                    const nextCell = document.querySelector(`[data-e_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_m1semester);
                                    const nextCell = document.querySelector(`[data-e_m1semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_m1semester);
                                    const nextCell = document.querySelector(`[data-pe_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_m1semester);
                                    const nextCell = document.querySelector(`[data-pe_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_m1semester);
                                    const nextCell = document.querySelector(`[data-pe_m1semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_m1semester);
                                    const nextCell = document.querySelector(`[data-e_h_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_m1semester);
                                    const nextCell = document.querySelector(`[data-e_h_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_m1semester);
                                    const nextCell = document.querySelector(`[data-e_h_m1semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_m1semester);
                                    const nextCell = document.querySelector(`[data-soc_h_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_m1semester);
                                    const nextCell = document.querySelector(`[data-soc_h_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_m1semester);
                                    const nextCell = document.querySelector(`[data-soc_h_m1semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_m1semester);
                                    const nextCell = document.querySelector(`[data-sci_h_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_m1semester);
                                    const nextCell = document.querySelector(`[data-sci_h_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_m1semester);
                                    const nextCell = document.querySelector(`[data-sci_h_m1semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_m1semester);
                                    const nextCell = document.querySelector(`[data-k_homework_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_m1semester);
                                    const nextCell = document.querySelector(`[data-k_homework_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_m1semester);
                                    const nextCell = document.querySelector(`[data-k_homework_m1semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_m1semester);
                                    const nextCell = document.querySelector(`[data-soc_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_m1semester);
                                    const nextCell = document.querySelector(`[data-soc_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_m1semester);
                                    const nextCell = document.querySelector(`[data-soc_m1semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_m1semester);
                                    const nextCell = document.querySelector(`[data-sci_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_m1semester);
                                    const nextCell = document.querySelector(`[data-sci_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_m1semester);
                                    const nextCell = document.querySelector(`[data-sci_m1semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_m1semester);
                                    const nextCell = document.querySelector(`[data-math_h_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_m1semester);
                                    const nextCell = document.querySelector(`[data-math_h_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_m1semester);
                                    const nextCell = document.querySelector(`[data-math_h_m1semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_m1semester);
                                    const nextCell = document.querySelector(`[data-math_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_m1semester);
                                    const nextCell = document.querySelector(`[data-math_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_m1semester);
                                    const nextCell = document.querySelector(`[data-math_m1semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_m1semester);
                                    const nextCell = document.querySelector(`[data-math_speak_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_m1semester);
                                    const nextCell = document.querySelector(`[data-math_speak_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_m1semester);
                                    const nextCell = document.querySelector(`[data-math_speak_m1semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_m1semester);
                                    const nextCell = document.querySelector(`[data-k_writing_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_m1semester);
                                    const nextCell = document.querySelector(`[data-k_writing_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_m1semester);
                                    const nextCell = document.querySelector(`[data-k_writing_m1semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_m1semester);
                                    const nextCell = document.querySelector(`[data-k_dictation_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_m1semester);
                                    const nextCell = document.querySelector(`[data-k_dictation_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_m1semester);
                                    const nextCell = document.querySelector(`[data-k_dictation_m1semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_m1semester);
                                    const nextCell = document.querySelector(`[data-k_reading_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_m1semester);
                                    const nextCell = document.querySelector(`[data-k_reading_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_m1semester);
                                    const nextCell = document.querySelector(`[data-k_reading_m1semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_speak_m1semester);
                                    const nextCell = document.querySelector(`[data-k_speak_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_speak_m1semester);
                                    const nextCell = document.querySelector(`[data-k_speak_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_speak_m1semester);
                                    const nextCell = document.querySelector(`[data-k_speak_m1semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_listen_m1semester);
                                    const nextCell = document.querySelector(`[data-k_listen_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_listen_m1semester);
                                    const nextCell = document.querySelector(`[data-k_listen_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_listen_m1semester);
                                    const nextCell = document.querySelector(`[data-k_listen_m1semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });


                            show_hearder.innerHTML = h;
                            table.innerHTML += n;
                            show_hearder_print.innerHTML = h;
                            table_print.innerHTML += n;

                        }, 200);

                    })
                    //Sort array and get rank number
                    student_rank.sort((a, b) => {
                        if (a.st_average > b.st_average) return -1;
                        if (a.st_average < b.st_average) return 1;
                        return 0;
                    });

                    for (let i = 0; i < student_rank.length; i++) {
                        let avg = student_rank[i].st_average;


                        let studentsWithRank = student_rank.filter(
                            (student) => student.st_average === avg

                        );
                        for (let student of studentsWithRank) {
                            student.Rank = i + 1;
                        }
                        i += studentsWithRank.length - 1;
                    }
                    let num = "";
                    //get Data sort to new array and save to localStorage
                    student_rank.forEach((student) => {
                        var id = student.id;
                        var gender = student.gender;
                        var total_all_score = student.total_all_score;
                        var average = student.st_average;
                        var rank = student.Rank;
                        if (!total_all_score) {

                            total_all_score = total_all_score.toFixed(2);
                        }

                        num++;

                        //Mention average
                        let mention = '';
                        var my = parseFloat(average);
                        if (my <= 4.9) {
                            mention = "ខ្សោយ"
                        } else if (my <= 6.49) {
                            mention = "មធ្យម"
                        } else if (my <= 7.99) {
                            mention = "ល្អបង្គួរ";
                        } else if (my <= 9.49) {
                            mention = "ល្អ";
                        } else if (my <= 10) {
                            mention = "ល្អណាស់";
                        }
                        let mention_fail = '';
                        var my = parseFloat(average);
                        if (my <= 4.9) {
                            mention_fail = "Poor"
                        } else if (my <= 6.49) {
                            mention_fail = "Average"
                        } else if (my <= 7.99) {
                            mention_fail = "Fairly Good";
                        } else if (my <= 9.49) {
                            mention_fail = "Good";
                        } else if (my <= 10) {
                            mention_fail = "Very Good";
                        }
                        let sex = '';
                        if (gender == 'ស') { sex = 'F' };
                        if (gender == 'ប') { sex = 'M' };

                        let new_gender = '';
                        if (gender == 'ស') { new_gender = 'ស' };
                        if (gender == 'ប') { new_gender = 'ប' };

                        firebase
                            .database()
                            .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                            .update({
                                average_m1semester: average,
                                rank_m1semester: rank,
                            });
                        let h = `
                                        <th class="border-dark text_table">ល.រ</th>
                                        <th class="border-dark text_table" style="width:15vh;">គោត្តនាម-នាម</th>
                                        <th class="border-dark text_table">ភេទ</th>
                                        <th class="border-dark text_table">ពិន្ទុសរុប</th>
                                        <th class="border-dark text_table">មធ្យមភាគ</th>
                                        <th class="border-dark text_table" style="width:8vh;">ចំណាត់ថ្នាក់</th>
                                        <th class="border-dark text_table">និទ្ទេស</th>
                                        <th class="border-dark text_table">ផ្សេងៗ</th>
        
                                        `;
                        let n = `
                                        <td class="border-dark text-center text_table">${num}</td>
                                        <td class="border-dark text-start text_table" style="width:15vh;">${id}</td>
                                        <td class="border-dark text-center text_table">${new_gender}</td>
                                        <td class="border-dark text-center text_table fw-bold">${total_all_score}</td>
                                        <td class="border-dark text-center text_table fw-bold">${average}</td>
                                        <td class="border-dark text-center text_table" style="color:red;width:8vh;">${rank}</td>
                                        <td class="border-dark text-center text_table" style="color:red;">${mention}</td>
                                        <td class="border-dark text-center text_table"></td>
                                        <td class="border-dark text-center text_table" style="display: none;">${mention_fail}${sex}</td>
                                        `;
                        table_result.innerHTML += n;
                        show_hearder_result.innerHTML = h;

                    })
                }
                if (primary_g_p2.includes(dbGrade)) {
                    datas.forEach((d) => {
                        var id = d.val().id;
                        var user_grade = d.val().user_grade;
                        var gender = d.val().gender;
                        var average = d.val().average_m1semester;
                        var rank = d.val().rank_m1semester;

                        var k_reading_m1semester = d.val().k_reading_m1semester;
                        var k_dictation_m1semester = d.val().k_dictation_m1semester;
                        var k_writing_m1semester = d.val().k_writing_m1semester;
                        var k_grammar_m1semester = d.val().k_grammar_m1semester;
                        var k_homework_m1semester = d.val().k_homework_m1semester;

                        var math_speak_m1semester = d.val().math_speak_m1semester;
                        var math_m1semester = d.val().math_m1semester;
                        var math_h_m1semester = d.val().math_h_m1semester;

                        var sci_m1semester = d.val().sci_m1semester;
                        var sci_h_m1semester = d.val().sci_h_m1semester;

                        var soc_h_m1semester = d.val().soc_h_m1semester;

                        var e_m1semester = d.val().e_m1semester;
                        var e_h_m1semester = d.val().e_h_m1semester;

                        var pe_m1semester = d.val().pe_m1semester;
                        var geor_m1semester = d.val().geor_m1semester;
                        var hist_m1semester = d.val().hist_m1semester;
                        var moral_m1semester = d.val().moral_m1semester;

                        let noSp = id.replace(/\s+/g, "");

                        if (!k_reading_m1semester) { k_reading_m1semester = 0 };
                        if (!k_dictation_m1semester) { k_dictation_m1semester = 0 };
                        if (!k_writing_m1semester) { k_writing_m1semester = 0 };
                        if (!k_grammar_m1semester) { k_grammar_m1semester = 0 };
                        if (!k_homework_m1semester) { k_homework_m1semester = 0 };

                        if (!math_speak_m1semester) { math_speak_m1semester = 0 };
                        if (!math_m1semester) { math_m1semester = 0 };
                        if (!math_h_m1semester) { math_h_m1semester = 0 };

                        if (!sci_m1semester) { sci_m1semester = 0 };
                        if (!sci_h_m1semester) { sci_h_m1semester = 0 };

                        if (!soc_h_m1semester) { soc_h_m1semester = 0 };

                        if (!e_m1semester) { e_m1semester = 0 };
                        if (!e_h_m1semester) { e_h_m1semester = 0 };

                        if (!pe_m1semester) { pe_m1semester = 0 };
                        if (!geor_m1semester) { geor_m1semester = 0 };
                        if (!hist_m1semester) { hist_m1semester = 0 };
                        if (!moral_m1semester) { moral_m1semester = 0 };
                        //Total all score
                        var total_all_score =
                            parseFloat(k_reading_m1semester) +
                            parseFloat(k_dictation_m1semester) +
                            parseFloat(k_writing_m1semester) +
                            parseFloat(k_grammar_m1semester) +
                            parseFloat(k_homework_m1semester) +
                            parseFloat(math_speak_m1semester) +
                            parseFloat(math_m1semester) +
                            parseFloat(math_h_m1semester) +
                            parseFloat(sci_m1semester) +
                            parseFloat(sci_h_m1semester) +
                            parseFloat(soc_h_m1semester) +
                            parseFloat(geor_m1semester) +
                            parseFloat(hist_m1semester) +
                            parseFloat(moral_m1semester) +
                            parseFloat(e_m1semester) +
                            parseFloat(e_h_m1semester) +
                            parseFloat(pe_m1semester);
                        if (!total_all_score) { total_all_score = "00" }
                        //មធ្យមភាគ
                        var st_average =
                            parseFloat(total_all_score) / dbdivid;
                        st_average = st_average.toFixed(2);

                        student_rank.push({
                            id,
                            user_grade,
                            st_average,
                            total_all_score,
                            gender,
                            k_reading_m1semester,
                            k_dictation_m1semester,
                            k_writing_m1semester,
                            k_homework_m1semester,
                            math_speak_m1semester,
                            math_m1semester,
                            math_h_m1semester,
                            sci_m1semester,
                            sci_h_m1semester,
                            soc_h_m1semester,
                            e_m1semester,
                            e_h_m1semester,
                            pe_m1semester,
                        })
                        setTimeout(() => {
                            //Mention average
                            let mention = '';
                            var my = parseFloat(average);
                            if (my <= 4.9) {
                                mention = "ខ្សោយ"
                            } else if (my <= 6.49) {
                                mention = "មធ្យម"
                            } else if (my <= 7.99) {
                                mention = "ល្អបង្គួរ";
                            } else if (my <= 9.49) {
                                mention = "ល្អ";
                            } else if (my <= 10) {
                                mention = "ល្អណាស់";
                            }

                            N0++;
                            let h = `
                                        <th class="border-dark">ល.រ</th>
                                        <th class="border-dark">ឈ្មោះ</th>
                                        <th class="border-dark">ភេទ</th>
                                        <th class="border-dark">អំណាន</th>
                                        <th class="border-dark">សរសេរតាមអាន</th>
                                        <th class="border-dark">តែងសេចក្តី</th>
                                        <th class="border-dark">វេយ្យាករណ៍</th>
                                        <th class="border-dark">គ.ផ្ទាល់មាត់</th>
                                        <th class="border-dark">គណិតវិទ្យា</th>
                                        <th class="border-dark">គ.កិច្ចការផ្ទះ</th>
                                        <th class="border-dark">វិទ្យាសាស្រ្ត</th>
                                        <th class="border-dark">ភូមិវិទ្យា</th>
                                        <th class="border-dark">ប្រវត្តិវិទ្យា</th>
                                        <th class="border-dark">ពលរដ្ឋ</th>
                                        <th class="border-dark">កិ.(ខ្មែរ)</th>
                                        <th class="border-dark">កិ.(វិទ្យា)</th>
                                        <th class="border-dark">កិ.(សិក្សា)</th>
                                        <th class="border-dark">កិ.(អង់គ្លេស)</th>
                                        <th class="border-dark">កីឡា</th>
                                        <th class="border-dark">អង់គ្លេស</th>
                                        <th class="border-dark">ពិន្ទុសរុប</th>
                                        <th class="border-dark">មធ្យមភាគ</th>
                                        <th class="border-dark">ចំណាត់ថ្នាក់</th>
                                        <th class="border-dark">និទ្ទេស</th>
                                        
        
                                        `
                            let n = `
                                        <td class="border-dark text-center">${N0}</td>
                                        <td class="border-dark">${id}</td>
                                        <td class="border-dark text-center">${gender}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_reading_m1semester="${N0}" id="${noSp}k_reading_m1semester">${k_reading_m1semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_dictation_m1semester="${N0}" id="${noSp}k_dictation_m1semester">${k_dictation_m1semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_writing_m1semester="${N0}" id="${noSp}k_writing_m1semester">${k_writing_m1semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_grammar_m1semester="${N0}" id="${noSp}k_grammar_m1semester">${k_grammar_m1semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_speak_m1semester="${N0}" id="${noSp}math_speak_m1semester">${math_speak_m1semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_m1semester="${N0}" id="${noSp}math_m1semester">${math_m1semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_h_m1semester="${N0}" id="${noSp}math_h_m1semester">${math_h_m1semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-sci_m1semester="${N0}" id="${noSp}sci_m1semester">${sci_m1semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-geor_m1semester="${N0}" id="${noSp}geor_m1semester">${geor_m1semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-hist_m1semester="${N0}" id="${noSp}hist_m1semester">${hist_m1semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-moral_m1semester="${N0}" id="${noSp}moral_m1semester">${moral_m1semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_homework_m1semester="${N0}" id="${noSp}k_homework_m1semester">${k_homework_m1semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-sci_h_m1semester="${N0}" id="${noSp}sci_h_m1semester">${sci_h_m1semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-soc_h_m1semester="${N0}" id="${noSp}soc_h_m1semester">${soc_h_m1semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-e_h_m1semester="${N0}" id="${noSp}e_h_m1semester">${e_h_m1semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-pe_m1semester="${N0}" id="${noSp}pe_m1semester">${pe_m1semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-e_m1semester="${N0}" id="${noSp}e_m1semester">${e_m1semester}</td>
                                        <td class="border-dark text-center fw-bold">${total_all_score}</td>
                                        <td class="border-dark text-center fw-bold">${average}</td>
                                        <td class="border-dark text-center" style="color:red;">${rank}</td>
                                        <td class="border-dark text-center" style="color:red;">${mention}</td>
                                        `;
                            //Update data
                            setTimeout(() => {
                                document.getElementById(`${noSp}e_m1semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}e_m1semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            e_m1semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}pe_m1semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}pe_m1semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            pe_m1semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}e_h_m1semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}e_h_m1semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            e_h_m1semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}soc_h_m1semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}soc_h_m1semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            soc_h_m1semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}sci_h_m1semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}sci_h_m1semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            sci_h_m1semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_homework_m1semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_homework_m1semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_homework_m1semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}sci_m1semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}sci_m1semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            sci_m1semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_h_m1semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_h_m1semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_h_m1semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_m1semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_m1semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_m1semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_speak_m1semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_speak_m1semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_speak_m1semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_grammar_m1semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_grammar_m1semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_grammar_m1semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_writing_m1semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_writing_m1semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_writing_m1semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_dictation_m1semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_dictation_m1semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_dictation_m1semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_reading_m1semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_reading_m1semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_reading_m1semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}geor_m1semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}geor_m1semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            geor_m1semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}hist_m1semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}hist_m1semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            hist_m1semester: d,
                                        });
                                })

                                document.getElementById(`${noSp}moral_m1semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}moral_m1semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            moral_m1semester: d,
                                        });
                                })

                            }, 200);
                            //Key select
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_m1semester);
                                    const nextCell = document.querySelector(`[data-e_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_m1semester);
                                    const nextCell = document.querySelector(`[data-e_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_m1semester);
                                    const nextCell = document.querySelector(`[data-e_m1semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_m1semester);
                                    const nextCell = document.querySelector(`[data-pe_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_m1semester);
                                    const nextCell = document.querySelector(`[data-pe_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_m1semester);
                                    const nextCell = document.querySelector(`[data-pe_m1semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_m1semester);
                                    const nextCell = document.querySelector(`[data-e_h_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_m1semester);
                                    const nextCell = document.querySelector(`[data-e_h_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_m1semester);
                                    const nextCell = document.querySelector(`[data-e_h_m1semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_m1semester);
                                    const nextCell = document.querySelector(`[data-soc_h_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_m1semester);
                                    const nextCell = document.querySelector(`[data-soc_h_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_m1semester);
                                    const nextCell = document.querySelector(`[data-soc_h_m1semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_m1semester);
                                    const nextCell = document.querySelector(`[data-sci_h_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_m1semester);
                                    const nextCell = document.querySelector(`[data-sci_h_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_m1semester);
                                    const nextCell = document.querySelector(`[data-sci_h_m1semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_m1semester);
                                    const nextCell = document.querySelector(`[data-k_homework_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_m1semester);
                                    const nextCell = document.querySelector(`[data-k_homework_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_m1semester);
                                    const nextCell = document.querySelector(`[data-k_homework_m1semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_m1semester);
                                    const nextCell = document.querySelector(`[data-soc_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_m1semester);
                                    const nextCell = document.querySelector(`[data-soc_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_m1semester);
                                    const nextCell = document.querySelector(`[data-soc_m1semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_m1semester);
                                    const nextCell = document.querySelector(`[data-sci_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_m1semester);
                                    const nextCell = document.querySelector(`[data-sci_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_m1semester);
                                    const nextCell = document.querySelector(`[data-sci_m1semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_m1semester);
                                    const nextCell = document.querySelector(`[data-math_h_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_m1semester);
                                    const nextCell = document.querySelector(`[data-math_h_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_m1semester);
                                    const nextCell = document.querySelector(`[data-math_h_m1semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_m1semester);
                                    const nextCell = document.querySelector(`[data-math_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_m1semester);
                                    const nextCell = document.querySelector(`[data-math_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_m1semester);
                                    const nextCell = document.querySelector(`[data-math_m1semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_m1semester);
                                    const nextCell = document.querySelector(`[data-math_speak_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_m1semester);
                                    const nextCell = document.querySelector(`[data-math_speak_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_m1semester);
                                    const nextCell = document.querySelector(`[data-math_speak_m1semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_m1semester);
                                    const nextCell = document.querySelector(`[data-k_writing_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_m1semester);
                                    const nextCell = document.querySelector(`[data-k_writing_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_m1semester);
                                    const nextCell = document.querySelector(`[data-k_writing_m1semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_m1semester);
                                    const nextCell = document.querySelector(`[data-k_dictation_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_m1semester);
                                    const nextCell = document.querySelector(`[data-k_dictation_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_m1semester);
                                    const nextCell = document.querySelector(`[data-k_dictation_m1semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_m1semester);
                                    const nextCell = document.querySelector(`[data-k_reading_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_m1semester);
                                    const nextCell = document.querySelector(`[data-k_reading_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_m1semester);
                                    const nextCell = document.querySelector(`[data-k_reading_m1semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_grammar_m1semester);
                                    const nextCell = document.querySelector(`[data-k_grammar_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_grammar_m1semester);
                                    const nextCell = document.querySelector(`[data-k_grammar_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_grammar_m1semester);
                                    const nextCell = document.querySelector(`[data-k_grammar_m1semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.moral_m1semester);
                                    const nextCell = document.querySelector(`[data-moral_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.moral_m1semester);
                                    const nextCell = document.querySelector(`[data-moral_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.moral_m1semester);
                                    const nextCell = document.querySelector(`[data-moral_m1semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.hist_m1semester);
                                    const nextCell = document.querySelector(`[data-hist_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.hist_m1semester);
                                    const nextCell = document.querySelector(`[data-hist_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.hist_m1semester);
                                    const nextCell = document.querySelector(`[data-hist_m1semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.geor_m1semester);
                                    const nextCell = document.querySelector(`[data-geor_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.geor_m1semester);
                                    const nextCell = document.querySelector(`[data-geor_m1semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.geor_m1semester);
                                    const nextCell = document.querySelector(`[data-geor_m1semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });

                            show_hearder.innerHTML = h;
                            table.innerHTML += n;
                            show_hearder_print.innerHTML = h;
                            table_print.innerHTML += n;

                        }, 200);

                    })
                    //Sort array and get rank number
                    student_rank.sort((a, b) => {
                        if (a.st_average > b.st_average) return -1;
                        if (a.st_average < b.st_average) return 1;
                        return 0;
                    });

                    for (let i = 0; i < student_rank.length; i++) {
                        let avg = student_rank[i].st_average;


                        let studentsWithRank = student_rank.filter(
                            (student) => student.st_average === avg

                        );
                        for (let student of studentsWithRank) {
                            student.Rank = i + 1;
                        }
                        i += studentsWithRank.length - 1;
                    }
                    let num = "";
                    //get Data sort to new array and save to localStorage
                    student_rank.forEach((student) => {
                        var id = student.id;
                        var gender = student.gender;
                        var total_all_score = student.total_all_score;
                        var average = student.st_average;
                        var rank = student.Rank;
                        if (!total_all_score) {

                            total_all_score = total_all_score.toFixed(2);
                        }

                        num++;

                        //Mention average
                        let mention = '';
                        var my = parseFloat(average);
                        if (my <= 4.9) {
                            mention = "ខ្សោយ"
                        } else if (my <= 6.49) {
                            mention = "មធ្យម"
                        } else if (my <= 7.99) {
                            mention = "ល្អបង្គួរ";
                        } else if (my <= 9.49) {
                            mention = "ល្អ";
                        } else if (my <= 10) {
                            mention = "ល្អណាស់";
                        }
                        let mention_fail = '';
                        var my = parseFloat(average);
                        if (my <= 4.9) {
                            mention_fail = "Poor"
                        } else if (my <= 6.49) {
                            mention_fail = "Average"
                        } else if (my <= 7.99) {
                            mention_fail = "Fairly Good";
                        } else if (my <= 9.49) {
                            mention_fail = "Good";
                        } else if (my <= 10) {
                            mention_fail = "Very Good";
                        }
                        let sex = '';
                        if (gender == 'ស') { sex = 'F' };
                        if (gender == 'ប') { sex = 'M' };

                        let new_gender = '';
                        if (gender == 'ស') { new_gender = 'ស' };
                        if (gender == 'ប') { new_gender = 'ប' };

                        firebase
                            .database()
                            .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                            .update({
                                average_m1semester: average,
                                rank_m1semester: rank,
                            });
                        let h = `
                                        <th class="border-dark text_table">ល.រ</th>
                                        <th class="border-dark text_table" style="width:15vh;">គោត្តនាម-នាម</th>
                                        <th class="border-dark text_table">ភេទ</th>
                                        <th class="border-dark text_table">ពិន្ទុសរុប</th>
                                        <th class="border-dark text_table">មធ្យមភាគ</th>
                                        <th class="border-dark text_table" style="width:8vh;">ចំណាត់ថ្នាក់</th>
                                        <th class="border-dark text_table">និទ្ទេស</th>
                                        <th class="border-dark text_table">ផ្សេងៗ</th>
        
                                        `;
                        let n = `
                                        <td class="border-dark text-center text_table">${num}</td>
                                        <td class="border-dark text-start text_table" style="width:15vh;">${id}</td>
                                        <td class="border-dark text-center text_table">${new_gender}</td>
                                        <td class="border-dark text-center text_table fw-bold">${total_all_score}</td>
                                        <td class="border-dark text-center text_table fw-bold">${average}</td>
                                        <td class="border-dark text-center text_table" style="color:red;width:8vh;">${rank}</td>
                                        <td class="border-dark text-center text_table" style="color:red;">${mention}</td>
                                        <td class="border-dark text-center text_table"></td>
                                        <td class="border-dark text-center text_table" style="display: none;">${mention_fail}${sex}</td>
                                        `;
                        table_result.innerHTML += n;
                        show_hearder_result.innerHTML = h;
                    })


                }
            }

            if (dbMonth == '2nd Semester') {
                if (primary_g_p1.includes(dbGrade)) {

                    datas.forEach((d) => {

                        var id = d.val().id;
                        var user_grade = d.val().user_grade;
                        var gender = d.val().gender;
                        var average = d.val().average_m2semester;
                        var rank = d.val().rank_m2semester;

                        var k_listen_m2semester = d.val().k_listen_m2semester;
                        var k_speak_m2semester = d.val().k_speak_m2semester;
                        var k_reading_m2semester = d.val().k_reading_m2semester;
                        var k_dictation_m2semester = d.val().k_dictation_m2semester;
                        var k_writing_m2semester = d.val().k_writing_m2semester;
                        var k_grammar_m2semester = d.val().k_grammar_m2semester;
                        var k_homework_m2semester = d.val().k_homework_m2semester;

                        var math_speak_m2semester = d.val().math_speak_m2semester;
                        var math_m2semester = d.val().math_m2semester;
                        var math_h_m2semester = d.val().math_h_m2semester;

                        var sci_m2semester = d.val().sci_m2semester;
                        var sci_h_m2semester = d.val().sci_h_m2semester;

                        var soc_m2semester = d.val().soc_m2semester;
                        var soc_h_m2semester = d.val().soc_h_m2semester;

                        var e_m2semester = d.val().e_m2semester;
                        var e_h_m2semester = d.val().e_h_m2semester;

                        var pe_m2semester = d.val().pe_m2semester;

                        let noSp = id.replace(/\s+/g, "");

                        if (!k_listen_m2semester) { k_listen_m2semester = 0 };
                        if (!k_speak_m2semester) { k_speak_m2semester = 0 };
                        if (!k_reading_m2semester) { k_reading_m2semester = 0 };
                        if (!k_dictation_m2semester) { k_dictation_m2semester = 0 };
                        if (!k_writing_m2semester) { k_writing_m2semester = 0 };
                        if (!k_grammar_m2semester) { k_grammar_m2semester = 0 };
                        if (!k_homework_m2semester) { k_homework_m2semester = 0 };

                        if (!math_speak_m2semester) { math_speak_m2semester = 0 };
                        if (!math_m2semester) { math_m2semester = 0 };
                        if (!math_h_m2semester) { math_h_m2semester = 0 };

                        if (!sci_m2semester) { sci_m2semester = 0 };
                        if (!sci_h_m2semester) { sci_h_m2semester = 0 };

                        if (!soc_m2semester) { soc_m2semester = 0 };
                        if (!soc_h_m2semester) { soc_h_m2semester = 0 };

                        if (!e_m2semester) { e_m2semester = 0 };
                        if (!e_h_m2semester) { e_h_m2semester = 0 };

                        if (!pe_m2semester) { pe_m2semester = 0 };

                        //Total all score
                        var total_all_score =
                            parseFloat(k_listen_m2semester) +
                            parseFloat(k_speak_m2semester) +
                            parseFloat(k_reading_m2semester) +
                            parseFloat(k_dictation_m2semester) +
                            parseFloat(k_writing_m2semester) +
                            parseFloat(k_homework_m2semester) +
                            parseFloat(math_speak_m2semester) +
                            parseFloat(math_m2semester) +
                            parseFloat(math_h_m2semester) +
                            parseFloat(sci_m2semester) +
                            parseFloat(sci_h_m2semester) +
                            parseFloat(soc_m2semester) +
                            parseFloat(soc_h_m2semester) +
                            parseFloat(e_m2semester) +
                            parseFloat(e_h_m2semester) +
                            parseFloat(pe_m2semester);
                        if (!total_all_score) { total_all_score = "00" }
                        //មធ្យមភាគ
                        var st_average =
                            parseFloat(total_all_score) / dbdivid;
                        st_average = st_average.toFixed(2);

                        student_rank.push({
                            id,
                            user_grade,
                            st_average,
                            total_all_score,
                            gender,
                            k_listen_m2semester,
                            k_speak_m2semester,
                            k_reading_m2semester,
                            k_dictation_m2semester,
                            k_writing_m2semester,
                            k_homework_m2semester,
                            math_speak_m2semester,
                            math_m2semester,
                            math_h_m2semester,
                            sci_m2semester,
                            sci_h_m2semester,
                            soc_m2semester,
                            soc_h_m2semester,
                            e_m2semester,
                            e_h_m2semester,
                            pe_m2semester,
                        })
                        setTimeout(() => {
                            N0++;

                            //Mention average
                            let mention = '';
                            var my = parseFloat(average);
                            if (my <= 4.9) {
                                mention = "ខ្សោយ"
                            } else if (my <= 6.49) {
                                mention = "មធ្យម"
                            } else if (my <= 7.99) {
                                mention = "ល្អបង្គួរ";
                            } else if (my <= 9.49) {
                                mention = "ល្អ";
                            } else if (my <= 10) {
                                mention = "ល្អណាស់";
                            }

                            let h = `
                                        <th class="border-dark">ល.រ</th>
                                        <th class="border-dark">ឈ្មោះ</th>
                                        <th class="border-dark">ភេទ</th>
                                        <th class="border-dark">ការស្តាប់</th>
                                        <th class="border-dark">ការនិយាយ</th>
                                        <th class="border-dark">អំណាន</th>
                                        <th class="border-dark">សរសេរតាមអាន</th>
                                        <th class="border-dark">តែងសេចក្តី</th>
                                        <th class="border-dark">គ.ផ្ទាល់មាត់</th>
                                        <th class="border-dark">គណិតវិទ្យា</th>
                                        <th class="border-dark">គ.កិច្ចការផ្ទះ</th>
                                        <th class="border-dark">វិទ្យាសាស្ត្រ</th>
                                        <th class="border-dark">សិក្សាសង្គម</th>
                                        <th class="border-dark">កិ.(ខ្មែរ)</th>
                                        <th class="border-dark">កិ.(វិទ្យា)</th>
                                        <th class="border-dark">កិ.(សិក្សា)</th>
                                        <th class="border-dark">កិ.(អង់គ្លេស)</th>
                                        <th class="border-dark">កីឡា</th>
                                        <th class="border-dark">អង់គ្លេស</th>
                                        <th class="border-dark">ពិន្ទុសរុប</th>
                                        <th class="border-dark">មធ្យមភាគ</th>
                                        <th class="border-dark">ចំណាត់ថ្នាក់</th>
                                        <th class="border-dark">និទ្ទេស</th>
                                        
        
                                        `
                            let n = `
                                        <td class="border-dark text-center">${N0}</td>
                                        <td class="border-dark">${id}</td>
                                        <td class="border-dark text-center"">${gender}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_listen_m2semester="${N0}" id="${noSp}k_listen_m2semester">${k_listen_m2semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_speak_m2semester="${N0}" id="${noSp}k_speak_m2semester">${k_speak_m2semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_reading_m2semester="${N0}" id="${noSp}k_reading_m2semester">${k_reading_m2semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_dictation_m2semester="${N0}" id="${noSp}k_dictation_m2semester">${k_dictation_m2semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_writing_m2semester="${N0}" id="${noSp}k_writing_m2semester">${k_writing_m2semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_speak_m2semester="${N0}" id="${noSp}math_speak_m2semester">${math_speak_m2semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_m2semester="${N0}" id="${noSp}math_m2semester">${math_m2semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_h_m2semester="${N0}" id="${noSp}math_h_m2semester">${math_h_m2semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-sci_m2semester="${N0}" id="${noSp}sci_m2semester">${sci_m2semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-soc_m2semester="${N0}" id="${noSp}soc_m2semester">${soc_m2semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_homework_m2semester="${N0}" id="${noSp}k_homework_m2semester">${k_homework_m2semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-sci_h_m2semester="${N0}" id="${noSp}sci_h_m2semester">${sci_h_m2semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-soc_h_m2semester="${N0}" id="${noSp}soc_h_m2semester">${soc_h_m2semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-e_h_m2semester="${N0}" id="${noSp}e_h_m2semester">${e_h_m2semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-pe_m2semester="${N0}" id="${noSp}pe_m2semester">${pe_m2semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-e_m2semester="${N0}" id="${noSp}e_m2semester">${e_m2semester}</td>
                                        <td class="border-dark text-center fw-bold">${total_all_score}</td>
                                        <td class="border-dark text-center fw-bold">${average}</td>
                                        <td class="border-dark text-center" style="color:red;">${rank}</td>
                                        <td class="border-dark text-center" style="color:red;">${mention}</td>
                                        `;
                            //Update data
                            setTimeout(() => {
                                document.getElementById(`${noSp}e_m2semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}e_m2semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            e_m2semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}pe_m2semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}pe_m2semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            pe_m2semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}e_h_m2semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}e_h_m2semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            e_h_m2semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}soc_h_m2semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}soc_h_m2semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            soc_h_m2semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}sci_h_m2semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}sci_h_m2semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            sci_h_m2semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_homework_m2semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_homework_m2semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_homework_m2semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}soc_m2semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}soc_m2semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            soc_m2semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}sci_m2semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}sci_m2semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            sci_m2semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_h_m2semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_h_m2semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_h_m2semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_m2semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_m2semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_m2semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_speak_m2semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_speak_m2semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_speak_m2semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_writing_m2semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_writing_m2semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_writing_m2semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_dictation_m2semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_dictation_m2semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_dictation_m2semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_reading_m2semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_reading_m2semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_reading_m2semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_speak_m2semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_speak_m2semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_speak_m2semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_listen_m2semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_listen_m2semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_listen_m2semester: d,
                                        });
                                })

                            }, 200);
                            //Key select
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_m2semester);
                                    const nextCell = document.querySelector(`[data-e_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_m2semester);
                                    const nextCell = document.querySelector(`[data-e_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_m2semester);
                                    const nextCell = document.querySelector(`[data-e_m2semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_m2semester);
                                    const nextCell = document.querySelector(`[data-pe_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_m2semester);
                                    const nextCell = document.querySelector(`[data-pe_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_m2semester);
                                    const nextCell = document.querySelector(`[data-pe_m2semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_m2semester);
                                    const nextCell = document.querySelector(`[data-e_h_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_m2semester);
                                    const nextCell = document.querySelector(`[data-e_h_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_m2semester);
                                    const nextCell = document.querySelector(`[data-e_h_m2semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_m2semester);
                                    const nextCell = document.querySelector(`[data-soc_h_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_m2semester);
                                    const nextCell = document.querySelector(`[data-soc_h_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_m2semester);
                                    const nextCell = document.querySelector(`[data-soc_h_m2semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_m2semester);
                                    const nextCell = document.querySelector(`[data-sci_h_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_m2semester);
                                    const nextCell = document.querySelector(`[data-sci_h_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_m2semester);
                                    const nextCell = document.querySelector(`[data-sci_h_m2semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_m2semester);
                                    const nextCell = document.querySelector(`[data-k_homework_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_m2semester);
                                    const nextCell = document.querySelector(`[data-k_homework_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_m2semester);
                                    const nextCell = document.querySelector(`[data-k_homework_m2semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_m2semester);
                                    const nextCell = document.querySelector(`[data-soc_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_m2semester);
                                    const nextCell = document.querySelector(`[data-soc_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_m2semester);
                                    const nextCell = document.querySelector(`[data-soc_m2semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_m2semester);
                                    const nextCell = document.querySelector(`[data-sci_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_m2semester);
                                    const nextCell = document.querySelector(`[data-sci_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_m2semester);
                                    const nextCell = document.querySelector(`[data-sci_m2semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_m2semester);
                                    const nextCell = document.querySelector(`[data-math_h_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_m2semester);
                                    const nextCell = document.querySelector(`[data-math_h_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_m2semester);
                                    const nextCell = document.querySelector(`[data-math_h_m2semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_m2semester);
                                    const nextCell = document.querySelector(`[data-math_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_m2semester);
                                    const nextCell = document.querySelector(`[data-math_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_m2semester);
                                    const nextCell = document.querySelector(`[data-math_m2semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_m2semester);
                                    const nextCell = document.querySelector(`[data-math_speak_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_m2semester);
                                    const nextCell = document.querySelector(`[data-math_speak_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_m2semester);
                                    const nextCell = document.querySelector(`[data-math_speak_m2semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_m2semester);
                                    const nextCell = document.querySelector(`[data-k_writing_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_m2semester);
                                    const nextCell = document.querySelector(`[data-k_writing_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_m2semester);
                                    const nextCell = document.querySelector(`[data-k_writing_m2semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_m2semester);
                                    const nextCell = document.querySelector(`[data-k_dictation_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_m2semester);
                                    const nextCell = document.querySelector(`[data-k_dictation_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_m2semester);
                                    const nextCell = document.querySelector(`[data-k_dictation_m2semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_m2semester);
                                    const nextCell = document.querySelector(`[data-k_reading_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_m2semester);
                                    const nextCell = document.querySelector(`[data-k_reading_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_m2semester);
                                    const nextCell = document.querySelector(`[data-k_reading_m2semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_speak_m2semester);
                                    const nextCell = document.querySelector(`[data-k_speak_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_speak_m2semester);
                                    const nextCell = document.querySelector(`[data-k_speak_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_speak_m2semester);
                                    const nextCell = document.querySelector(`[data-k_speak_m2semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_listen_m2semester);
                                    const nextCell = document.querySelector(`[data-k_listen_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_listen_m2semester);
                                    const nextCell = document.querySelector(`[data-k_listen_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_listen_m2semester);
                                    const nextCell = document.querySelector(`[data-k_listen_m2semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });


                            show_hearder.innerHTML = h;
                            table.innerHTML += n;
                            show_hearder_print.innerHTML = h;
                            table_print.innerHTML += n;

                        }, 200);

                    })
                    //Sort array and get rank number
                    student_rank.sort((a, b) => {
                        if (a.st_average > b.st_average) return -1;
                        if (a.st_average < b.st_average) return 1;
                        return 0;
                    });

                    for (let i = 0; i < student_rank.length; i++) {
                        let avg = student_rank[i].st_average;


                        let studentsWithRank = student_rank.filter(
                            (student) => student.st_average === avg

                        );
                        for (let student of studentsWithRank) {
                            student.Rank = i + 1;
                        }
                        i += studentsWithRank.length - 1;
                    }
                    let num = "";
                    //get Data sort to new array and save to localStorage
                    student_rank.forEach((student) => {
                        var id = student.id;
                        var gender = student.gender;
                        var total_all_score = student.total_all_score;
                        var average = student.st_average;
                        var rank = student.Rank;
                        if (!total_all_score) {

                            total_all_score = total_all_score.toFixed(2);
                        }

                        num++;

                        //Mention average
                        let mention = '';
                        var my = parseFloat(average);
                        if (my <= 4.9) {
                            mention = "ខ្សោយ"
                        } else if (my <= 6.49) {
                            mention = "មធ្យម"
                        } else if (my <= 7.99) {
                            mention = "ល្អបង្គួរ";
                        } else if (my <= 9.49) {
                            mention = "ល្អ";
                        } else if (my <= 10) {
                            mention = "ល្អណាស់";
                        }
                        let mention_fail = '';
                        var my = parseFloat(average);
                        if (my <= 4.9) {
                            mention_fail = "Poor"
                        } else if (my <= 6.49) {
                            mention_fail = "Average"
                        } else if (my <= 7.99) {
                            mention_fail = "Fairly Good";
                        } else if (my <= 9.49) {
                            mention_fail = "Good";
                        } else if (my <= 10) {
                            mention_fail = "Very Good";
                        }
                        let sex = '';
                        if (gender == 'ស') { sex = 'F' };
                        if (gender == 'ប') { sex = 'M' };

                        let new_gender = '';
                        if (gender == 'ស') { new_gender = 'ស' };
                        if (gender == 'ប') { new_gender = 'ប' };

                        firebase
                            .database()
                            .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                            .update({
                                average_m2semester: average,
                                rank_m2semester: rank,
                            });
                        let h = `
                                        <th class="border-dark text_table">ល.រ</th>
                                        <th class="border-dark text_table" style="width:15vh;">គោត្តនាម-នាម</th>
                                        <th class="border-dark text_table">ភេទ</th>
                                        <th class="border-dark text_table">ពិន្ទុសរុប</th>
                                        <th class="border-dark text_table">មធ្យមភាគ</th>
                                        <th class="border-dark text_table" style="width:8vh;">ចំណាត់ថ្នាក់</th>
                                        <th class="border-dark text_table">និទ្ទេស</th>
                                        <th class="border-dark text_table">ផ្សេងៗ</th>
        
                                        `;
                        let n = `
                                        <td class="border-dark text-center text_table">${num}</td>
                                        <td class="border-dark text-start text_table" style="width:15vh;">${id}</td>
                                        <td class="border-dark text-center text_table">${new_gender}</td>
                                        <td class="border-dark text-center text_table fw-bold">${total_all_score}</td>
                                        <td class="border-dark text-center text_table fw-bold">${average}</td>
                                        <td class="border-dark text-center text_table" style="color:red;width:8vh;">${rank}</td>
                                        <td class="border-dark text-center text_table" style="color:red;">${mention}</td>
                                        <td class="border-dark text-center text_table"></td>
                                        <td class="border-dark text-center text_table" style="display: none;">${mention_fail}${sex}</td>
                                        `;
                        table_result.innerHTML += n;
                        show_hearder_result.innerHTML = h;

                    })
                }
                if (primary_g_p2.includes(dbGrade)) {
                    datas.forEach((d) => {
                        var id = d.val().id;
                        var user_grade = d.val().user_grade;
                        var gender = d.val().gender;
                        var average = d.val().average_m2semester;
                        var rank = d.val().rank_m2semester;

                        var k_reading_m2semester = d.val().k_reading_m2semester;
                        var k_dictation_m2semester = d.val().k_dictation_m2semester;
                        var k_writing_m2semester = d.val().k_writing_m2semester;
                        var k_grammar_m2semester = d.val().k_grammar_m2semester;
                        var k_homework_m2semester = d.val().k_homework_m2semester;

                        var math_speak_m2semester = d.val().math_speak_m2semester;
                        var math_m2semester = d.val().math_m2semester;
                        var math_h_m2semester = d.val().math_h_m2semester;

                        var sci_m2semester = d.val().sci_m2semester;
                        var sci_h_m2semester = d.val().sci_h_m2semester;

                        var soc_h_m2semester = d.val().soc_h_m2semester;

                        var e_m2semester = d.val().e_m2semester;
                        var e_h_m2semester = d.val().e_h_m2semester;

                        var pe_m2semester = d.val().pe_m2semester;
                        var geor_m2semester = d.val().geor_m2semester;
                        var hist_m2semester = d.val().hist_m2semester;
                        var moral_m2semester = d.val().moral_m2semester;

                        let noSp = id.replace(/\s+/g, "");

                        if (!k_reading_m2semester) { k_reading_m2semester = 0 };
                        if (!k_dictation_m2semester) { k_dictation_m2semester = 0 };
                        if (!k_writing_m2semester) { k_writing_m2semester = 0 };
                        if (!k_grammar_m2semester) { k_grammar_m2semester = 0 };
                        if (!k_homework_m2semester) { k_homework_m2semester = 0 };

                        if (!math_speak_m2semester) { math_speak_m2semester = 0 };
                        if (!math_m2semester) { math_m2semester = 0 };
                        if (!math_h_m2semester) { math_h_m2semester = 0 };

                        if (!sci_m2semester) { sci_m2semester = 0 };
                        if (!sci_h_m2semester) { sci_h_m2semester = 0 };

                        if (!soc_h_m2semester) { soc_h_m2semester = 0 };

                        if (!e_m2semester) { e_m2semester = 0 };
                        if (!e_h_m2semester) { e_h_m2semester = 0 };

                        if (!pe_m2semester) { pe_m2semester = 0 };
                        if (!geor_m2semester) { geor_m2semester = 0 };
                        if (!hist_m2semester) { hist_m2semester = 0 };
                        if (!moral_m2semester) { moral_m2semester = 0 };
                        //Total all score
                        var total_all_score =
                            parseFloat(k_reading_m2semester) +
                            parseFloat(k_dictation_m2semester) +
                            parseFloat(k_writing_m2semester) +
                            parseFloat(k_grammar_m2semester) +
                            parseFloat(k_homework_m2semester) +
                            parseFloat(math_speak_m2semester) +
                            parseFloat(math_m2semester) +
                            parseFloat(math_h_m2semester) +
                            parseFloat(sci_m2semester) +
                            parseFloat(sci_h_m2semester) +
                            parseFloat(soc_h_m2semester) +
                            parseFloat(geor_m2semester) +
                            parseFloat(hist_m2semester) +
                            parseFloat(moral_m2semester) +
                            parseFloat(e_m2semester) +
                            parseFloat(e_h_m2semester) +
                            parseFloat(pe_m2semester);
                        if (!total_all_score) { total_all_score = "00" }
                        //មធ្យមភាគ
                        var st_average =
                            parseFloat(total_all_score) / dbdivid;
                        st_average = st_average.toFixed(2);

                        student_rank.push({
                            id,
                            user_grade,
                            st_average,
                            total_all_score,
                            gender,
                            k_reading_m2semester,
                            k_dictation_m2semester,
                            k_writing_m2semester,
                            k_homework_m2semester,
                            math_speak_m2semester,
                            math_m2semester,
                            math_h_m2semester,
                            sci_m2semester,
                            sci_h_m2semester,
                            soc_h_m2semester,
                            e_m2semester,
                            e_h_m2semester,
                            pe_m2semester,
                        })
                        setTimeout(() => {
                            //Mention average
                            let mention = '';
                            var my = parseFloat(average);
                            if (my <= 4.9) {
                                mention = "ខ្សោយ"
                            } else if (my <= 6.49) {
                                mention = "មធ្យម"
                            } else if (my <= 7.99) {
                                mention = "ល្អបង្គួរ";
                            } else if (my <= 9.49) {
                                mention = "ល្អ";
                            } else if (my <= 10) {
                                mention = "ល្អណាស់";
                            }

                            N0++;
                            let h = `
                                        <th class="border-dark">ល.រ</th>
                                        <th class="border-dark">ឈ្មោះ</th>
                                        <th class="border-dark">ភេទ</th>
                                        <th class="border-dark">អំណាន</th>
                                        <th class="border-dark">សរសេរតាមអាន</th>
                                        <th class="border-dark">តែងសេចក្តី</th>
                                        <th class="border-dark">វេយ្យាករណ៍</th>
                                        <th class="border-dark">គ.ផ្ទាល់មាត់</th>
                                        <th class="border-dark">គណិតវិទ្យា</th>
                                        <th class="border-dark">គ.កិច្ចការផ្ទះ</th>
                                        <th class="border-dark">វិទ្យាសាស្រ្ត</th>
                                        <th class="border-dark">ភូមិវិទ្យា</th>
                                        <th class="border-dark">ប្រវត្តិវិទ្យា</th>
                                        <th class="border-dark">ពលរដ្ឋ</th>
                                        <th class="border-dark">កិ.(ខ្មែរ)</th>
                                        <th class="border-dark">កិ.(វិទ្យា)</th>
                                        <th class="border-dark">កិ.(សិក្សា)</th>
                                        <th class="border-dark">កិ.(អង់គ្លេស)</th>
                                        <th class="border-dark">កីឡា</th>
                                        <th class="border-dark">អង់គ្លេស</th>
                                        <th class="border-dark">ពិន្ទុសរុប</th>
                                        <th class="border-dark">មធ្យមភាគ</th>
                                        <th class="border-dark">ចំណាត់ថ្នាក់</th>
                                        <th class="border-dark">និទ្ទេស</th>
                                        
        
                                        `
                            let n = `
                                        <td class="border-dark text-center">${N0}</td>
                                        <td class="border-dark">${id}</td>
                                        <td class="border-dark text-center">${gender}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_reading_m2semester="${N0}" id="${noSp}k_reading_m2semester">${k_reading_m2semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_dictation_m2semester="${N0}" id="${noSp}k_dictation_m2semester">${k_dictation_m2semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_writing_m2semester="${N0}" id="${noSp}k_writing_m2semester">${k_writing_m2semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_grammar_m2semester="${N0}" id="${noSp}k_grammar_m2semester">${k_grammar_m2semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_speak_m2semester="${N0}" id="${noSp}math_speak_m2semester">${math_speak_m2semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_m2semester="${N0}" id="${noSp}math_m2semester">${math_m2semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-math_h_m2semester="${N0}" id="${noSp}math_h_m2semester">${math_h_m2semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-sci_m2semester="${N0}" id="${noSp}sci_m2semester">${sci_m2semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-geor_m2semester="${N0}" id="${noSp}geor_m2semester">${geor_m2semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-hist_m2semester="${N0}" id="${noSp}hist_m2semester">${hist_m2semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-moral_m2semester="${N0}" id="${noSp}moral_m2semester">${moral_m2semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-k_homework_m2semester="${N0}" id="${noSp}k_homework_m2semester">${k_homework_m2semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-sci_h_m2semester="${N0}" id="${noSp}sci_h_m2semester">${sci_h_m2semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-soc_h_m2semester="${N0}" id="${noSp}soc_h_m2semester">${soc_h_m2semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-e_h_m2semester="${N0}" id="${noSp}e_h_m2semester">${e_h_m2semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-pe_m2semester="${N0}" id="${noSp}pe_m2semester">${pe_m2semester}</td>
                                        <td class="border-dark text-center" contenteditable onclick="selectText(this)" data-e_m2semester="${N0}" id="${noSp}e_m2semester">${e_m2semester}</td>
                                        <td class="border-dark text-center fw-bold">${total_all_score}</td>
                                        <td class="border-dark text-center fw-bold">${average}</td>
                                        <td class="border-dark text-center" style="color:red;">${rank}</td>
                                        <td class="border-dark text-center" style="color:red;">${mention}</td>
                                        `;
                            //Update data
                            setTimeout(() => {
                                document.getElementById(`${noSp}e_m2semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}e_m2semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            e_m2semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}pe_m2semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}pe_m2semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            pe_m2semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}e_h_m2semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}e_h_m2semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            e_h_m2semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}soc_h_m2semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}soc_h_m2semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            soc_h_m2semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}sci_h_m2semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}sci_h_m2semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            sci_h_m2semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_homework_m2semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_homework_m2semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_homework_m2semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}sci_m2semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}sci_m2semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            sci_m2semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_h_m2semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_h_m2semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_h_m2semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_m2semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_m2semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_m2semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}math_speak_m2semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}math_speak_m2semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            math_speak_m2semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_grammar_m2semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_grammar_m2semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_grammar_m2semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_writing_m2semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_writing_m2semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_writing_m2semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_dictation_m2semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_dictation_m2semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_dictation_m2semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}k_reading_m2semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}k_reading_m2semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            k_reading_m2semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}geor_m2semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}geor_m2semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            geor_m2semester: d,
                                        });
                                })
                                document.getElementById(`${noSp}hist_m2semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}hist_m2semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            hist_m2semester: d,
                                        });
                                })

                                document.getElementById(`${noSp}moral_m2semester`).addEventListener('input', () => {
                                    var d = document.getElementById(`${noSp}moral_m2semester`).innerHTML;
                                    firebase
                                        .database()
                                        .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                                        .update({
                                            moral_m2semester: d,
                                        });
                                })

                            }, 200);
                            //Key select
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_m2semester);
                                    const nextCell = document.querySelector(`[data-e_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_m2semester);
                                    const nextCell = document.querySelector(`[data-e_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_m2semester);
                                    const nextCell = document.querySelector(`[data-e_m2semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_m2semester);
                                    const nextCell = document.querySelector(`[data-pe_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_m2semester);
                                    const nextCell = document.querySelector(`[data-pe_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.pe_m2semester);
                                    const nextCell = document.querySelector(`[data-pe_m2semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_m2semester);
                                    const nextCell = document.querySelector(`[data-e_h_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_m2semester);
                                    const nextCell = document.querySelector(`[data-e_h_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.e_h_m2semester);
                                    const nextCell = document.querySelector(`[data-e_h_m2semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_m2semester);
                                    const nextCell = document.querySelector(`[data-soc_h_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_m2semester);
                                    const nextCell = document.querySelector(`[data-soc_h_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_h_m2semester);
                                    const nextCell = document.querySelector(`[data-soc_h_m2semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_m2semester);
                                    const nextCell = document.querySelector(`[data-sci_h_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_m2semester);
                                    const nextCell = document.querySelector(`[data-sci_h_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_h_m2semester);
                                    const nextCell = document.querySelector(`[data-sci_h_m2semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_m2semester);
                                    const nextCell = document.querySelector(`[data-k_homework_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_m2semester);
                                    const nextCell = document.querySelector(`[data-k_homework_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_homework_m2semester);
                                    const nextCell = document.querySelector(`[data-k_homework_m2semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_m2semester);
                                    const nextCell = document.querySelector(`[data-soc_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_m2semester);
                                    const nextCell = document.querySelector(`[data-soc_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.soc_m2semester);
                                    const nextCell = document.querySelector(`[data-soc_m2semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_m2semester);
                                    const nextCell = document.querySelector(`[data-sci_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_m2semester);
                                    const nextCell = document.querySelector(`[data-sci_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.sci_m2semester);
                                    const nextCell = document.querySelector(`[data-sci_m2semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_m2semester);
                                    const nextCell = document.querySelector(`[data-math_h_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_m2semester);
                                    const nextCell = document.querySelector(`[data-math_h_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_h_m2semester);
                                    const nextCell = document.querySelector(`[data-math_h_m2semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_m2semester);
                                    const nextCell = document.querySelector(`[data-math_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_m2semester);
                                    const nextCell = document.querySelector(`[data-math_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_m2semester);
                                    const nextCell = document.querySelector(`[data-math_m2semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_m2semester);
                                    const nextCell = document.querySelector(`[data-math_speak_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_m2semester);
                                    const nextCell = document.querySelector(`[data-math_speak_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.math_speak_m2semester);
                                    const nextCell = document.querySelector(`[data-math_speak_m2semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_m2semester);
                                    const nextCell = document.querySelector(`[data-k_writing_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_m2semester);
                                    const nextCell = document.querySelector(`[data-k_writing_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_writing_m2semester);
                                    const nextCell = document.querySelector(`[data-k_writing_m2semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_m2semester);
                                    const nextCell = document.querySelector(`[data-k_dictation_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_m2semester);
                                    const nextCell = document.querySelector(`[data-k_dictation_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_dictation_m2semester);
                                    const nextCell = document.querySelector(`[data-k_dictation_m2semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_m2semester);
                                    const nextCell = document.querySelector(`[data-k_reading_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_m2semester);
                                    const nextCell = document.querySelector(`[data-k_reading_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_reading_m2semester);
                                    const nextCell = document.querySelector(`[data-k_reading_m2semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_grammar_m2semester);
                                    const nextCell = document.querySelector(`[data-k_grammar_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_grammar_m2semester);
                                    const nextCell = document.querySelector(`[data-k_grammar_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.k_grammar_m2semester);
                                    const nextCell = document.querySelector(`[data-k_grammar_m2semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.moral_m2semester);
                                    const nextCell = document.querySelector(`[data-moral_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.moral_m2semester);
                                    const nextCell = document.querySelector(`[data-moral_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.moral_m2semester);
                                    const nextCell = document.querySelector(`[data-moral_m2semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.hist_m2semester);
                                    const nextCell = document.querySelector(`[data-hist_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.hist_m2semester);
                                    const nextCell = document.querySelector(`[data-hist_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.hist_m2semester);
                                    const nextCell = document.querySelector(`[data-hist_m2semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });
                            table.addEventListener("keydown", (event) => {
                                if (event.key === "Enter") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.geor_m2semester);
                                    const nextCell = document.querySelector(`[data-geor_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowDown") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.geor_m2semester);
                                    const nextCell = document.querySelector(`[data-geor_m2semester="${currentIndex + 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                                if (event.key === "ArrowUp") {
                                    event.preventDefault();
                                    const currentCell = event.target;
                                    const currentIndex = parseInt(currentCell.dataset.geor_m2semester);
                                    const nextCell = document.querySelector(`[data-geor_m2semester="${currentIndex - 1}"]`);
                                    const focusedCell = document.activeElement;
                                    if (focusedCell && focusedCell.tagName === "TD") {
                                        const range = document.createRange();
                                        range.selectNodeContents(focusedCell);
                                        const selection = window.getSelection();
                                        selection.removeAllRanges();
                                        selection.addRange(range);
                                    }
                                    if (nextCell) {
                                        nextCell.focus();
                                    }
                                }
                            });

                            show_hearder.innerHTML = h;
                            table.innerHTML += n;
                            show_hearder_print.innerHTML = h;
                            table_print.innerHTML += n;

                        }, 200);

                    })
                    //Sort array and get rank number
                    student_rank.sort((a, b) => {
                        if (a.st_average > b.st_average) return -1;
                        if (a.st_average < b.st_average) return 1;
                        return 0;
                    });

                    for (let i = 0; i < student_rank.length; i++) {
                        let avg = student_rank[i].st_average;


                        let studentsWithRank = student_rank.filter(
                            (student) => student.st_average === avg

                        );
                        for (let student of studentsWithRank) {
                            student.Rank = i + 1;
                        }
                        i += studentsWithRank.length - 1;
                    }
                    let num = "";
                    //get Data sort to new array and save to localStorage
                    student_rank.forEach((student) => {
                        var id = student.id;
                        var gender = student.gender;
                        var total_all_score = student.total_all_score;
                        var average = student.st_average;
                        var rank = student.Rank;
                        if (!total_all_score) {

                            total_all_score = total_all_score.toFixed(2);
                        }

                        num++;

                        //Mention average
                        let mention = '';
                        var my = parseFloat(average);
                        if (my <= 4.9) {
                            mention = "ខ្សោយ"
                        } else if (my <= 6.49) {
                            mention = "មធ្យម"
                        } else if (my <= 7.99) {
                            mention = "ល្អបង្គួរ";
                        } else if (my <= 9.49) {
                            mention = "ល្អ";
                        } else if (my <= 10) {
                            mention = "ល្អណាស់";
                        }
                        let mention_fail = '';
                        var my = parseFloat(average);
                        if (my <= 4.9) {
                            mention_fail = "Poor"
                        } else if (my <= 6.49) {
                            mention_fail = "Average"
                        } else if (my <= 7.99) {
                            mention_fail = "Fairly Good";
                        } else if (my <= 9.49) {
                            mention_fail = "Good";
                        } else if (my <= 10) {
                            mention_fail = "Very Good";
                        }
                        let sex = '';
                        if (gender == 'ស') { sex = 'F' };
                        if (gender == 'ប') { sex = 'M' };

                        let new_gender = '';
                        if (gender == 'ស') { new_gender = 'ស' };
                        if (gender == 'ប') { new_gender = 'ប' };

                        firebase
                            .database()
                            .ref(`SalaMOM/classes/` + `${dbyear}/` + `${grade_en}/` + id)
                            .update({
                                average_m2semester: average,
                                rank_m2semester: rank,
                            });
                        let h = `
                                        <th class="border-dark text_table">ល.រ</th>
                                        <th class="border-dark text_table" style="width:15vh;">គោត្តនាម-នាម</th>
                                        <th class="border-dark text_table">ភេទ</th>
                                        <th class="border-dark text_table">ពិន្ទុសរុប</th>
                                        <th class="border-dark text_table">មធ្យមភាគ</th>
                                        <th class="border-dark text_table" style="width:8vh;">ចំណាត់ថ្នាក់</th>
                                        <th class="border-dark text_table">និទ្ទេស</th>
                                        <th class="border-dark text_table">ផ្សេងៗ</th>
        
                                        `;
                        let n = `
                                        <td class="border-dark text-center text_table">${num}</td>
                                        <td class="border-dark text-start text_table" style="width:15vh;">${id}</td>
                                        <td class="border-dark text-center text_table">${new_gender}</td>
                                        <td class="border-dark text-center text_table fw-bold">${total_all_score}</td>
                                        <td class="border-dark text-center text_table fw-bold">${average}</td>
                                        <td class="border-dark text-center text_table" style="color:red;width:8vh;">${rank}</td>
                                        <td class="border-dark text-center text_table" style="color:red;">${mention}</td>
                                        <td class="border-dark text-center text_table"></td>
                                        <td class="border-dark text-center text_table" style="display: none;">${mention_fail}${sex}</td>
                                        `;
                        table_result.innerHTML += n;
                        show_hearder_result.innerHTML = h;
                    })


                }
            }

        }
    }

}
